{"uid":"5909fd718a74f1b4","name":"Update Cart - No deliveryDate","fullName":"Cart And Orders/Update Cart#Update Cart - No deliveryDate","historyId":"156fb98747029d15207e63b873d9914e:f84c3de8a0f8ee0827a8607ec876c72a","time":{"start":1718568249191,"stop":1718568249387,"duration":196},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718568249383,"stop":1718568249383,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718568249384,"stop":1718568249384,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718568249385,"stop":1718568249385,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'priceId should not be empty'","time":{"start":1718568249385,"stop":1718568249385,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'deliveryDate')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'deliveryDate')\n   at Object.eval sandbox-script.js:4:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"59a12365cf06e079","name":"PreRequest","source":"59a12365cf06e079.txt","type":"text/plain","size":80},{"uid":"199aac0de3771a9e","name":"Request Headers","source":"199aac0de3771a9e.json","type":"application/json","size":422},{"uid":"a9aad92a3feaa506","name":"Request Body","source":"a9aad92a3feaa506.txt","type":"text/plain","size":104},{"uid":"5c9ce89db68d2836","name":"Response Headers","source":"5c9ce89db68d2836.json","type":"application/json","size":383},{"uid":"51ef9bda3175f22b","name":"Response Body","source":"51ef9bda3175f22b.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":7},"items":[{"uid":"1edd95882f2a5973","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/1edd95882f2a5973","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718390155414,"stop":1718390155568,"duration":154}},{"uid":"106d639d1ef001d8","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/106d639d1ef001d8","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718388750410,"stop":1718388750540,"duration":130}},{"uid":"96e5b6031aff944f","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/96e5b6031aff944f","status":"passed","time":{"start":1718009529361,"stop":1718009529539,"duration":178}},{"uid":"6d660ad61200f328","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/6d660ad61200f328","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008638365,"stop":1718008638500,"duration":135}},{"uid":"2a3919cd7c6890e4","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/2a3919cd7c6890e4","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008172684,"stop":1718008172823,"duration":139}},{"uid":"c08e67f7933591ad","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/c08e67f7933591ad","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1717963281613,"stop":1717963281738,"duration":125}}]},"tags":[]},"source":"5909fd718a74f1b4.json","parameterValues":["PUT - https://api.eatcheffie.com/v1/cart/meals","401"]}