{"uid":"83b40931bb3cec2b","name":"Update Cart - No quantity","fullName":"Cart And Orders/Update Cart#Update Cart - No quantity","historyId":"ec4f2795d8587746c9853f38cf40b7ec:f84c3de8a0f8ee0827a8607ec876c72a","time":{"start":1718568248993,"stop":1718568249188,"duration":195},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718568249185,"stop":1718568249185,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718568249186,"stop":1718568249186,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718568249187,"stop":1718568249187,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'priceId should not be empty'","time":{"start":1718568249187,"stop":1718568249187,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'quantity')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'quantity')\n   at Object.eval sandbox-script.js:4:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b8987daa37595481","name":"PreRequest","source":"b8987daa37595481.txt","type":"text/plain","size":80},{"uid":"e53156583b6795f4","name":"Request Headers","source":"e53156583b6795f4.json","type":"application/json","size":422},{"uid":"4439629ba991e825","name":"Request Body","source":"4439629ba991e825.txt","type":"text/plain","size":129},{"uid":"f9e47275ba7d996a","name":"Response Headers","source":"f9e47275ba7d996a.json","type":"application/json","size":383},{"uid":"7b428a44079e83cd","name":"Response Body","source":"7b428a44079e83cd.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":7},"items":[{"uid":"e57e7dd4e03ecdf0","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/e57e7dd4e03ecdf0","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718390155259,"stop":1718390155412,"duration":153}},{"uid":"347c4a25f7308a81","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/347c4a25f7308a81","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718388750278,"stop":1718388750408,"duration":130}},{"uid":"3ce291bf4f816dda","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/3ce291bf4f816dda","status":"passed","time":{"start":1718009529201,"stop":1718009529359,"duration":158}},{"uid":"3e305fdee29f0392","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/3e305fdee29f0392","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008638227,"stop":1718008638362,"duration":135}},{"uid":"8ed0d78de8c5ad51","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/8ed0d78de8c5ad51","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008172536,"stop":1718008172681,"duration":145}},{"uid":"df8e7ce3e3e17c3f","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/df8e7ce3e3e17c3f","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1717963281485,"stop":1717963281611,"duration":126}}]},"tags":[]},"source":"83b40931bb3cec2b.json","parameterValues":["PUT - https://api.eatcheffie.com/v1/cart/meals","401"]}