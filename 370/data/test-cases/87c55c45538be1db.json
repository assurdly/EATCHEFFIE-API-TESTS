{"uid":"87c55c45538be1db","name":"Update Cart - No deliveryDate","fullName":"Cart And Orders/Update Cart#Update Cart - No deliveryDate","historyId":"156fb98747029d15207e63b873d9914e:66ad61bcc45804d8dca56a251bfee6f6","time":{"start":1719777828112,"stop":1719777828289,"duration":177},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1719777828285,"stop":1719777828285,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1719777828285,"stop":1719777828285,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1719777828286,"stop":1719777828286,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'priceId should not be empty'","time":{"start":1719777828286,"stop":1719777828286,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'deliveryDate')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'deliveryDate')\n   at Object.eval sandbox-script.js:4:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5fd3be41ed3bf9df","name":"PreRequest","source":"5fd3be41ed3bf9df.txt","type":"text/plain","size":80},{"uid":"15abfc2babd94eba","name":"Request Headers","source":"15abfc2babd94eba.json","type":"application/json","size":416},{"uid":"d7b9e91fde4336a6","name":"Request Body","source":"d7b9e91fde4336a6.txt","type":"text/plain","size":129},{"uid":"ced0f3f6a94895ba","name":"Response Headers","source":"ced0f3f6a94895ba.json","type":"application/json","size":383},{"uid":"9d13fd35124ad6d","name":"Response Body","source":"9d13fd35124ad6d.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api-test.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":10},"items":[{"uid":"e7cabd3d88846f6e","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/369//#testresult/e7cabd3d88846f6e","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1719776352506,"stop":1719776352635,"duration":129}},{"uid":"73d1ab070a4b5a24","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/368//#testresult/73d1ab070a4b5a24","status":"passed","time":{"start":1719599716750,"stop":1719599716918,"duration":168}},{"uid":"cf129afde3a012ea","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/367//#testresult/cf129afde3a012ea","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1719426902505,"stop":1719426902639,"duration":134}},{"uid":"941fdf6dcde9be2c","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/363//#testresult/941fdf6dcde9be2c","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1719216417522,"stop":1719216417719,"duration":197}},{"uid":"eb9af3490608c16e","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/360//#testresult/eb9af3490608c16e","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1719173029258,"stop":1719173029405,"duration":147}},{"uid":"b140246e5680a2a0","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/359//#testresult/b140246e5680a2a0","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718994925332,"stop":1718994925457,"duration":125}},{"uid":"ccce901618e0b3a5","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/358//#testresult/ccce901618e0b3a5","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718822124514,"stop":1718822124641,"duration":127}},{"uid":"f66823954a32a1e","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/357//#testresult/f66823954a32a1e","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718785932866,"stop":1718785932997,"duration":131}},{"uid":"b952e1003bc20476","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/353//#testresult/b952e1003bc20476","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718615807664,"stop":1718615807847,"duration":183}}]},"tags":[]},"source":"87c55c45538be1db.json","parameterValues":["PUT - https://api-test.eatcheffie.com/v1/cart/meals","401"]}