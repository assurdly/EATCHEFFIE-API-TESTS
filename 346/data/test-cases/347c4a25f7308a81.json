{"uid":"347c4a25f7308a81","name":"Update Cart - No quantity","fullName":"Cart And Orders/Update Cart#Update Cart - No quantity","historyId":"ec4f2795d8587746c9853f38cf40b7ec:f84c3de8a0f8ee0827a8607ec876c72a","time":{"start":1718388750278,"stop":1718388750408,"duration":130},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 503, status: Service Temporarily Unavailable","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 503, status: Service Temporarily Unavailable","steps":[{"name":"Status code is 400","time":{"start":1718388750405,"stop":1718388750405,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"AssertionError: expected response to have status code 400 but got 503\n   at Object.eval sandbox-script.js:1:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718388750405,"stop":1718388750405,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Service Temporarily Unavailable'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Service Temporarily Unavailable'\n   at Object.eval sandbox-script.js:2:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718388750406,"stop":1718388750406,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<html>\n^","statusTrace":"JSONError: Unexpected token '<' at 1:1\n<html>\n^\n   at Object.eval sandbox-script.js:3:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'priceId should not be empty'","time":{"start":1718388750406,"stop":1718388750406,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<html>\n^","statusTrace":"JSONError: Unexpected token '<' at 1:1\n<html>\n^\n   at Object.eval sandbox-script.js:4:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ac73883f3fe72883","name":"PreRequest","source":"ac73883f3fe72883.txt","type":"text/plain","size":80},{"uid":"bab06e137dcef4da","name":"Request Headers","source":"bab06e137dcef4da.json","type":"application/json","size":422},{"uid":"c185939c33897540","name":"Request Body","source":"c185939c33897540.txt","type":"text/plain","size":129},{"uid":"9e9555171a174610","name":"Response Headers","source":"9e9555171a174610.json","type":"application/json","size":169},{"uid":"5612e224314db850","name":"Response Body","source":"5612e224314db850.txt","type":"text/plain","size":162}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":5},"items":[{"uid":"3ce291bf4f816dda","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/3ce291bf4f816dda","status":"passed","time":{"start":1718009529201,"stop":1718009529359,"duration":158}},{"uid":"3e305fdee29f0392","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/3e305fdee29f0392","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008638227,"stop":1718008638362,"duration":135}},{"uid":"8ed0d78de8c5ad51","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/8ed0d78de8c5ad51","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008172536,"stop":1718008172681,"duration":145}},{"uid":"df8e7ce3e3e17c3f","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/df8e7ce3e3e17c3f","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1717963281485,"stop":1717963281611,"duration":126}}]},"tags":[]},"source":"347c4a25f7308a81.json","parameterValues":["PUT - https://api.eatcheffie.com/v1/cart/meals","503"]}