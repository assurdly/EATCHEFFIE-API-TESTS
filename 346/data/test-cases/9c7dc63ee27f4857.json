{"uid":"9c7dc63ee27f4857","name":"Update Cart - No Mealid","fullName":"Cart And Orders/Update Cart#Update Cart - No Mealid","historyId":"116dfff1d64638b3c2a2e0e9ca997863:f84c3de8a0f8ee0827a8607ec876c72a","time":{"start":1718388750015,"stop":1718388750144,"duration":129},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'mealId should not be empty)'","statusTrace":"Response code: 503, status: Service Temporarily Unavailable","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'mealId should not be empty)'","statusTrace":"Response code: 503, status: Service Temporarily Unavailable","steps":[{"name":"Status code is 400","time":{"start":1718388750141,"stop":1718388750141,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 503","statusTrace":"AssertionError: expected response to have status code 400 but got 503\n   at Object.eval sandbox-script.js:1:86)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718388750142,"stop":1718388750142,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Service Temporarily Unavailable'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Service Temporarily Unavailable'\n   at Object.eval sandbox-script.js:2:86)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718388750143,"stop":1718388750143,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<html>\n^","statusTrace":"JSONError: Unexpected token '<' at 1:1\n<html>\n^\n   at Object.eval sandbox-script.js:3:86)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'mealId should not be empty)'","time":{"start":1718388750143,"stop":1718388750143,"duration":0},"status":"failed","statusMessage":"Unexpected token '<' at 1:1\n<html>\n^","statusTrace":"JSONError: Unexpected token '<' at 1:1\n<html>\n^\n   at Object.eval sandbox-script.js:4:86)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f712f0f627a79c37","name":"PreRequest","source":"f712f0f627a79c37.txt","type":"text/plain","size":80},{"uid":"fcc4f4e188a47d04","name":"Request Headers","source":"fcc4f4e188a47d04.json","type":"application/json","size":422},{"uid":"39620f52c3a5c7dc","name":"Request Body","source":"39620f52c3a5c7dc.txt","type":"text/plain","size":117},{"uid":"6931d1576864f575","name":"Response Headers","source":"6931d1576864f575.json","type":"application/json","size":169},{"uid":"b236397688c51ac2","name":"Response Body","source":"b236397688c51ac2.txt","type":"text/plain","size":162}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"503"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":5},"items":[{"uid":"262c56c9c2ec8ec7","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/262c56c9c2ec8ec7","status":"passed","time":{"start":1718009528863,"stop":1718009529035,"duration":172}},{"uid":"cf107f43e09f058c","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/cf107f43e09f058c","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'mealId should not be empty)'","time":{"start":1718008637949,"stop":1718008638084,"duration":135}},{"uid":"4407d67e9c5be3b5","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/4407d67e9c5be3b5","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'mealId should not be empty)'","time":{"start":1718008172249,"stop":1718008172390,"duration":141}},{"uid":"9a072a6ae0df142c","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/9a072a6ae0df142c","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'mealId should not be empty)'","time":{"start":1717963281226,"stop":1717963281353,"duration":127}}]},"tags":[]},"source":"9c7dc63ee27f4857.json","parameterValues":["PUT - https://api.eatcheffie.com/v1/cart/meals","503"]}