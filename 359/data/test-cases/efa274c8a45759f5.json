{"uid":"efa274c8a45759f5","name":"Fetch Customer Order By ID - No Id","fullName":"Cart And Orders/Fetch Customer Order By Id#Fetch Customer Order By ID - No Id","historyId":"1c17e64e4bfec80ff08b3122bfdfcd96:73b6ae6bba25d5a5272171db93eeab85","time":{"start":1718994926603,"stop":1718994926729,"duration":126},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718994926726,"stop":1718994926726,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718994926727,"stop":1718994926727,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718994926728,"stop":1718994926728,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that error returns 'id must be a UUID'","time":{"start":1718994926728,"stop":1718994926728,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'id')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:4:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f5467b8a39544c76","name":"PreRequest","source":"f5467b8a39544c76.txt","type":"text/plain","size":80},{"uid":"b557091faf1f3ce0","name":"Request Headers","source":"b557091faf1f3ce0.json","type":"application/json","size":358},{"uid":"5a381afa137832e","name":"Response Headers","source":"5a381afa137832e.json","type":"application/json","size":383},{"uid":"80f838d4f789f7b","name":"Response Body","source":"80f838d4f789f7b.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Fetch Customer Order By Id"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://api-test.eatcheffie.com/v1/customer/orders/:id"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"a5c29255a9dc44da","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/358//#testresult/a5c29255a9dc44da","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718822125828,"stop":1718822125957,"duration":129}},{"uid":"d2b90687a9c90277","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/357//#testresult/d2b90687a9c90277","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718785934198,"stop":1718785934330,"duration":132}},{"uid":"74fdb0df8dc544f0","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/353//#testresult/74fdb0df8dc544f0","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718615809491,"stop":1718615809673,"duration":182}}]},"tags":[]},"source":"efa274c8a45759f5.json","parameterValues":["GET - https://api-test.eatcheffie.com/v1/customer/orders/:id","401"]}