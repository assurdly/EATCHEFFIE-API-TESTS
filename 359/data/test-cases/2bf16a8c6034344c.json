{"uid":"2bf16a8c6034344c","name":"Update Cart - No quantity","fullName":"Cart And Orders/Update Cart#Update Cart - No quantity","historyId":"ec4f2795d8587746c9853f38cf40b7ec:66ad61bcc45804d8dca56a251bfee6f6","time":{"start":1718994925204,"stop":1718994925330,"duration":126},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718994925326,"stop":1718994925326,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718994925326,"stop":1718994925326,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718994925327,"stop":1718994925327,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'priceId should not be empty'","time":{"start":1718994925327,"stop":1718994925327,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'quantity')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'quantity')\n   at Object.eval sandbox-script.js:4:88)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7af337e7894af0bf","name":"PreRequest","source":"7af337e7894af0bf.txt","type":"text/plain","size":80},{"uid":"66c0f40aa98532b2","name":"Request Headers","source":"66c0f40aa98532b2.json","type":"application/json","size":427},{"uid":"965f53039a70b63d","name":"Request Body","source":"965f53039a70b63d.txt","type":"text/plain","size":154},{"uid":"49d0db076fa8a2f8","name":"Response Headers","source":"49d0db076fa8a2f8.json","type":"application/json","size":383},{"uid":"ee80ec57919fee7c","name":"Response Body","source":"ee80ec57919fee7c.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api-test.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"16ad1d5b7b5e9e12","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/358//#testresult/16ad1d5b7b5e9e12","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718822124375,"stop":1718822124511,"duration":136}},{"uid":"3eeb8ae8f5b487a7","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/357//#testresult/3eeb8ae8f5b487a7","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718785932730,"stop":1718785932863,"duration":133}},{"uid":"e383107cfc4dbf9","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/353//#testresult/e383107cfc4dbf9","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718615807480,"stop":1718615807662,"duration":182}}]},"tags":[]},"source":"2bf16a8c6034344c.json","parameterValues":["PUT - https://api-test.eatcheffie.com/v1/cart/meals","401"]}