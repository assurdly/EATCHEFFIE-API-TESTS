{"uid":"15567ce23bd7298c","name":"Update Cart - No deliveryDate","fullName":"Cart And Orders/Update Cart#Update Cart - No deliveryDate","historyId":"156fb98747029d15207e63b873d9914e:f84c3de8a0f8ee0827a8607ec876c72a","time":{"start":1718612817789,"stop":1718612817921,"duration":132},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718612817918,"stop":1718612817918,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718612817918,"stop":1718612817918,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718612817919,"stop":1718612817919,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'priceId should not be empty'","time":{"start":1718612817919,"stop":1718612817919,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'deliveryDate')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'deliveryDate')\n   at Object.eval sandbox-script.js:4:89)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"193998a6c4df90e8","name":"PreRequest","source":"193998a6c4df90e8.txt","type":"text/plain","size":80},{"uid":"53cfcb0c31c21fb5","name":"Request Headers","source":"53cfcb0c31c21fb5.json","type":"application/json","size":411},{"uid":"8641ac9bfdf6e7a7","name":"Request Body","source":"8641ac9bfdf6e7a7.txt","type":"text/plain","size":104},{"uid":"712239820ae60cb4","name":"Response Headers","source":"712239820ae60cb4.json","type":"application/json","size":383},{"uid":"f7f1943cdcebec86","name":"Response Body","source":"f7f1943cdcebec86.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":8},"items":[{"uid":"5909fd718a74f1b4","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/348//#testresult/5909fd718a74f1b4","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718568249191,"stop":1718568249387,"duration":196}},{"uid":"1edd95882f2a5973","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/1edd95882f2a5973","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718390155414,"stop":1718390155568,"duration":154}},{"uid":"106d639d1ef001d8","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/106d639d1ef001d8","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718388750410,"stop":1718388750540,"duration":130}},{"uid":"96e5b6031aff944f","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/96e5b6031aff944f","status":"passed","time":{"start":1718009529361,"stop":1718009529539,"duration":178}},{"uid":"6d660ad61200f328","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/6d660ad61200f328","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008638365,"stop":1718008638500,"duration":135}},{"uid":"2a3919cd7c6890e4","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/2a3919cd7c6890e4","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008172684,"stop":1718008172823,"duration":139}},{"uid":"c08e67f7933591ad","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/c08e67f7933591ad","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1717963281613,"stop":1717963281738,"duration":125}}]},"tags":[]},"source":"15567ce23bd7298c.json","parameterValues":["PUT - https://api.eatcheffie.com/v1/cart/meals","401"]}