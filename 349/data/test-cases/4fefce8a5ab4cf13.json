{"uid":"4fefce8a5ab4cf13","name":"Update Cart - No priceId","fullName":"Cart And Orders/Update Cart#Update Cart - No priceId","historyId":"adc1a13bbc7754c9f1869f90ccf94916:f84c3de8a0f8ee0827a8607ec876c72a","time":{"start":1718612817520,"stop":1718612817652,"duration":132},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718612817649,"stop":1718612817649,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:87)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718612817650,"stop":1718612817650,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:87)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718612817650,"stop":1718612817650,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:87)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'priceId should not be empty'","time":{"start":1718612817651,"stop":1718612817651,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'priceId')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'priceId')\n   at Object.eval sandbox-script.js:4:87)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"36bc50e90a8662a7","name":"PreRequest","source":"36bc50e90a8662a7.txt","type":"text/plain","size":80},{"uid":"53ea31dbd4897719","name":"Request Headers","source":"53ea31dbd4897719.json","type":"application/json","size":411},{"uid":"1705d1e486eacb30","name":"Request Body","source":"1705d1e486eacb30.txt","type":"text/plain","size":117},{"uid":"b397576ba007c623","name":"Response Headers","source":"b397576ba007c623.json","type":"application/json","size":383},{"uid":"c331ae487c470c","name":"Response Body","source":"c331ae487c470c.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Update Cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://api.eatcheffie.com/v1/cart/meals"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":8},"items":[{"uid":"4642c3c950a72cf","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/348//#testresult/4642c3c950a72cf","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718568248794,"stop":1718568248991,"duration":197}},{"uid":"44bbe64999f9a618","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/44bbe64999f9a618","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718390155103,"stop":1718390155257,"duration":154}},{"uid":"c72177432692830b","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/c72177432692830b","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718388750147,"stop":1718388750276,"duration":129}},{"uid":"1283578f4a2fdd37","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/1283578f4a2fdd37","status":"passed","time":{"start":1718009529038,"stop":1718009529198,"duration":160}},{"uid":"507f5ba6df92c1c4","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/507f5ba6df92c1c4","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008638087,"stop":1718008638224,"duration":137}},{"uid":"f5a1dd343b8d2eba","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/f5a1dd343b8d2eba","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1718008172393,"stop":1718008172533,"duration":140}},{"uid":"31588292d05023ab","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/31588292d05023ab","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'priceId should not be empty'","time":{"start":1717963281356,"stop":1717963281482,"duration":126}}]},"tags":[]},"source":"4fefce8a5ab4cf13.json","parameterValues":["PUT - https://api.eatcheffie.com/v1/cart/meals","401"]}