{"uid":"1bee373aeef1e740","name":"Fetch Customer Order By ID - No Id","fullName":"Cart And Orders/Fetch Customer Order By Id#Fetch Customer Order By ID - No Id","historyId":"1c17e64e4bfec80ff08b3122bfdfcd96:253879647b163579a08820715a799a76","time":{"start":1718612819108,"stop":1718612819240,"duration":132},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","statusTrace":"Response code: 401, status: Unauthorized","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718612819238,"stop":1718612819238,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718612819238,"stop":1718612819238,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718612819239,"stop":1718612819239,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that error returns 'id must be a UUID'","time":{"start":1718612819239,"stop":1718612819239,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'id')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:4:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ce17053bc0adccc","name":"PreRequest","source":"ce17053bc0adccc.txt","type":"text/plain","size":80},{"uid":"a7185e145720ffd5","name":"Request Headers","source":"a7185e145720ffd5.json","type":"application/json","size":342},{"uid":"19827a9d47270995","name":"Response Headers","source":"19827a9d47270995.json","type":"application/json","size":383},{"uid":"b071eba8862d2146","name":"Response Body","source":"b071eba8862d2146.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Fetch Customer Order By Id"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://api.eatcheffie.com/v1/customer/orders/:id"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":8},"items":[{"uid":"18363de4acfd3186","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/348//#testresult/18363de4acfd3186","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718568251167,"stop":1718568251364,"duration":197}},{"uid":"ce2670ad9a0c9da5","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/ce2670ad9a0c9da5","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718390156969,"stop":1718390157124,"duration":155}},{"uid":"c54b1cc874bce86a","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/c54b1cc874bce86a","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718388751742,"stop":1718388751873,"duration":131}},{"uid":"6fdff982f9ca297a","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/6fdff982f9ca297a","status":"passed","time":{"start":1718009530926,"stop":1718009531091,"duration":165}},{"uid":"e854cd144981bcf3","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/e854cd144981bcf3","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718008639743,"stop":1718008639881,"duration":138}},{"uid":"442f6a7add0a486c","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/442f6a7add0a486c","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1718008174090,"stop":1718008174230,"duration":140}},{"uid":"e32d810b77e0ce40","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/e32d810b77e0ce40","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","time":{"start":1717963282882,"stop":1717963283011,"duration":129}}]},"tags":[]},"source":"1bee373aeef1e740.json","parameterValues":["GET - https://api.eatcheffie.com/v1/customer/orders/:id","401"]}