{"uid":"2135ef57f6664ded","name":"Fetch Delivery Rate - No addressId","fullName":"Delivery Rates and Areas/Fetch Delivery Rate#Fetch Delivery Rate - No addressId","historyId":"22db51cb4bdd6d6222abe0d93a216257:0077ce4b9203d586404d1a906727dd89","time":{"start":1718613995161,"stop":1718613995329,"duration":168},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718613995326,"stop":1718613995326,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:112)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718613995327,"stop":1718613995327,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:112)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718613995327,"stop":1718613995327,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:112)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'addressId should not be empty'","time":{"start":1718613995328,"stop":1718613995328,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'addressId')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'addressId')\n   at Object.eval sandbox-script.js:4:112)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1b04afb8a74d4f01","name":"PreRequest","source":"1b04afb8a74d4f01.txt","type":"text/plain","size":80},{"uid":"b5d19fdf3046563a","name":"Request Headers","source":"b5d19fdf3046563a.json","type":"application/json","size":421},{"uid":"83b14b2f8cd140b3","name":"Request Body","source":"83b14b2f8cd140b3.txt","type":"text/plain","size":55},{"uid":"b339620aca23fa3c","name":"Response Headers","source":"b339620aca23fa3c.json","type":"application/json","size":383},{"uid":"bacce97441f279d3","name":"Response Body","source":"bacce97441f279d3.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Delivery Rates and Areas"},{"name":"suite","value":"Fetch Delivery Rate"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api.eatcheffie.com/v1/delivery/rates"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":9},"items":[{"uid":"dd98ffe109d7c4e8","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/349//#testresult/dd98ffe109d7c4e8","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","time":{"start":1718612820842,"stop":1718612820973,"duration":131}},{"uid":"d915f22c2a36d943","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/348//#testresult/d915f22c2a36d943","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","time":{"start":1718568253760,"stop":1718568253956,"duration":196}},{"uid":"f638753f36c63f5f","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/f638753f36c63f5f","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","time":{"start":1718390159005,"stop":1718390159160,"duration":155}},{"uid":"c5ec4a63d36c9126","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/c5ec4a63d36c9126","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","time":{"start":1718388753468,"stop":1718388753598,"duration":130}},{"uid":"ddaaa113edb6e82e","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/ddaaa113edb6e82e","status":"passed","time":{"start":1718009533068,"stop":1718009533222,"duration":154}},{"uid":"579f3c2231973167","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/579f3c2231973167","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","time":{"start":1718008641544,"stop":1718008641679,"duration":135}},{"uid":"58ea00ce357de56","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/58ea00ce357de56","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","time":{"start":1718008175945,"stop":1718008176085,"duration":140}},{"uid":"a2246697f2c298bb","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/a2246697f2c298bb","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'addressId should not be empty'","time":{"start":1717963284549,"stop":1717963284675,"duration":126}}]},"tags":[]},"source":"2135ef57f6664ded.json","parameterValues":["POST - https://api.eatcheffie.com/v1/delivery/rates","401"]}