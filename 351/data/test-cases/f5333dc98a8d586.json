{"uid":"f5333dc98a8d586","name":"Update Profile - No DOB","fullName":"User/Update Profile#Update Profile - No DOB","historyId":"add449fd6f4016971d58a27dba91f028:09f722384c6c7f66c78e204bd8b0d069","time":{"start":1718613987416,"stop":1718613987587,"duration":171},"status":"failed","statusMessage":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718613987584,"stop":1718613987584,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has 'Bad request'","time":{"start":1718613987584,"stop":1718613987584,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718613987585,"stop":1718613987585,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1718613987585,"stop":1718613987585,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'dob')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'dob')\n   at Object.eval sandbox-script.js:4:67)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3c8270e3fbe24778","name":"PreRequest","source":"3c8270e3fbe24778.txt","type":"text/plain","size":80},{"uid":"603fc04570086091","name":"Request Headers","source":"603fc04570086091.json","type":"application/json","size":421},{"uid":"b93d3d8b390d6bfe","name":"Request Body","source":"b93d3d8b390d6bfe.txt","type":"text/plain","size":87},{"uid":"ec0333ecb613af67","name":"Response Headers","source":"ec0333ecb613af67.json","type":"application/json","size":383},{"uid":"627b12ea3c9fbfc4","name":"Response Body","source":"627b12ea3c9fbfc4.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"User"},{"name":"suite","value":"Update Profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PATCH - https://api.eatcheffie.com/v1/user/profile"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":17,"unknown":0,"total":25},"items":[{"uid":"44f635fece754809","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/349//#testresult/44f635fece754809","status":"failed","statusDetails":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1718612814821,"stop":1718612814955,"duration":134}},{"uid":"342a212683466dbd","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/348//#testresult/342a212683466dbd","status":"failed","statusDetails":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1718568244805,"stop":1718568245006,"duration":201}},{"uid":"effc7f2ca47b789b","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/effc7f2ca47b789b","status":"failed","statusDetails":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1718390151976,"stop":1718390152129,"duration":153}},{"uid":"7c0d9634a6d32f17","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/7c0d9634a6d32f17","status":"failed","statusDetails":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1718388747499,"stop":1718388747631,"duration":132}},{"uid":"889f994f5255f60c","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/889f994f5255f60c","status":"passed","time":{"start":1718009522637,"stop":1718009522805,"duration":168}},{"uid":"a0717b632cd1825","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/a0717b632cd1825","status":"failed","statusDetails":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1718008635324,"stop":1718008635461,"duration":137}},{"uid":"35e126b9841c9d40","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/35e126b9841c9d40","status":"failed","statusDetails":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1718008169545,"stop":1718008169686,"duration":141}},{"uid":"e1e2a67e8e6b63e9","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/325//#testresult/e1e2a67e8e6b63e9","status":"passed","time":{"start":1717967328025,"stop":1717967328240,"duration":215}},{"uid":"39828852c6307a99","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/324//#testresult/39828852c6307a99","status":"passed","time":{"start":1717967143056,"stop":1717967143273,"duration":217}},{"uid":"ca90a7c640da7658","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/321//#testresult/ca90a7c640da7658","status":"passed","time":{"start":1717966459115,"stop":1717966459349,"duration":234}},{"uid":"fe515c1456a582b","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/319//#testresult/fe515c1456a582b","status":"passed","time":{"start":1717965873449,"stop":1717965873626,"duration":177}},{"uid":"fbf3119580a8678c","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/318//#testresult/fbf3119580a8678c","status":"passed","time":{"start":1717965643988,"stop":1717965644209,"duration":221}},{"uid":"3408be263918b565","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/317//#testresult/3408be263918b565","status":"passed","time":{"start":1717965309231,"stop":1717965309449,"duration":218}},{"uid":"64a5f810715a3d64","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/316//#testresult/64a5f810715a3d64","status":"passed","time":{"start":1717964427365,"stop":1717964427585,"duration":220}},{"uid":"f01b494ee57c105e","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/315//#testresult/f01b494ee57c105e","status":"passed","time":{"start":1717963926682,"stop":1717963926872,"duration":190}},{"uid":"270af307c56da7b","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/270af307c56da7b","status":"failed","statusDetails":"Status code is 400, Status code name has 'Bad request', Verify that message returns 'Validation Error.', Verify that data returns 'dob must be a valid ISO 8601 date string'","time":{"start":1717963278808,"stop":1717963278934,"duration":126}},{"uid":"c050b11ef49944bc","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/313//#testresult/c050b11ef49944bc","status":"passed","time":{"start":1717963056387,"stop":1717963056647,"duration":260}},{"uid":"e36b79abbb935dfb","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/312//#testresult/e36b79abbb935dfb","status":"passed","time":{"start":1717962706173,"stop":1717962706446,"duration":273}},{"uid":"734c9672ea10a699","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/311//#testresult/734c9672ea10a699","status":"passed","time":{"start":1717962208111,"stop":1717962208279,"duration":168}},{"uid":"f154017c1e0b5900","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/310//#testresult/f154017c1e0b5900","status":"passed","time":{"start":1717961658907,"stop":1717961659098,"duration":191}}]},"tags":[]},"source":"f5333dc98a8d586.json","parameterValues":["PATCH - https://api.eatcheffie.com/v1/user/profile","401"]}