{"uid":"c3e8d7013b49a22f","name":"Fetch Delivery Rate - No vendorId","fullName":"Delivery Rates and Areas/Fetch Delivery Rate#Fetch Delivery Rate - No vendorId","historyId":"fe91183358db239e9724e45352f5a2e8:0077ce4b9203d586404d1a906727dd89","time":{"start":1718613994988,"stop":1718613995158,"duration":170},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718613995155,"stop":1718613995155,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:111)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718613995156,"stop":1718613995156,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:111)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718613995157,"stop":1718613995157,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:111)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that data returns 'vendorId should not be empty.'","time":{"start":1718613995157,"stop":1718613995157,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'vendorId')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'vendorId')\n   at Object.eval sandbox-script.js:4:111)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b4188cd3a066817c","name":"PreRequest","source":"b4188cd3a066817c.txt","type":"text/plain","size":80},{"uid":"1bc5af483af70fa1","name":"Request Headers","source":"1bc5af483af70fa1.json","type":"application/json","size":421},{"uid":"c1e5fbd30f18835f","name":"Request Body","source":"c1e5fbd30f18835f.txt","type":"text/plain","size":56},{"uid":"d214f473696a096b","name":"Response Headers","source":"d214f473696a096b.json","type":"application/json","size":383},{"uid":"b7000076777e0af6","name":"Response Body","source":"b7000076777e0af6.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Delivery Rates and Areas"},{"name":"suite","value":"Fetch Delivery Rate"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api.eatcheffie.com/v1/delivery/rates"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":9},"items":[{"uid":"d8cf2a6cf03e0981","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/349//#testresult/d8cf2a6cf03e0981","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","time":{"start":1718612820710,"stop":1718612820840,"duration":130}},{"uid":"81c54c65324f62ac","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/348//#testresult/81c54c65324f62ac","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","time":{"start":1718568253561,"stop":1718568253757,"duration":196}},{"uid":"c7af430ef143f755","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/347//#testresult/c7af430ef143f755","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","time":{"start":1718390158849,"stop":1718390159003,"duration":154}},{"uid":"9811adbb6546ae8e","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/346//#testresult/9811adbb6546ae8e","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","time":{"start":1718388753337,"stop":1718388753466,"duration":129}},{"uid":"21ada3f7baed1d85","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/329//#testresult/21ada3f7baed1d85","status":"passed","time":{"start":1718009532829,"stop":1718009533065,"duration":236}},{"uid":"944d36938197f0bf","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/327//#testresult/944d36938197f0bf","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","time":{"start":1718008641406,"stop":1718008641541,"duration":135}},{"uid":"8c8b321d2f5c0d21","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/326//#testresult/8c8b321d2f5c0d21","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","time":{"start":1718008175803,"stop":1718008175942,"duration":139}},{"uid":"e04fe81b87c42770","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/314//#testresult/e04fe81b87c42770","status":"failed","statusDetails":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that data returns 'vendorId should not be empty.'","time":{"start":1717963284422,"stop":1717963284547,"duration":125}}]},"tags":[]},"source":"c3e8d7013b49a22f.json","parameterValues":["POST - https://api.eatcheffie.com/v1/delivery/rates","401"]}