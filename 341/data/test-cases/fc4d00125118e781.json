{"uid":"fc4d00125118e781","name":"Fetch Campaign By ID","fullName":"Builder/Fetch Campaign By ID#Fetch Campaign By ID","historyId":"4c6e86fb1c331bf38362e75763ab1ca6:9677a7a03efc0c7d2a0bb4aa8e23ae62","time":{"start":1718111928988,"stop":1718111929195,"duration":207},"status":"failed","statusMessage":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","statusTrace":"Response code: 400, status: Bad Request","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","statusTrace":"Response code: 400, status: Bad Request","steps":[{"name":"Status code is 200","time":{"start":1718111929191,"stop":1718111929191,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 400","statusTrace":"AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:116)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has 'OK'","time":{"start":1718111929192,"stop":1718111929192,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Bad Request'","statusTrace":"AssertionError: expected response to have status reason 'OK' but got 'Bad Request'\n   at Object.eval sandbox-script.js:2:116)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response body property","time":{"start":1718111929192,"stop":1718111929192,"duration":0},"status":"failed","statusMessage":"expected undefined to be a string","statusTrace":"AssertionError: expected undefined to be a string\n   at Object.eval sandbox-script.js:3:116)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is 'success'","time":{"start":1718111929193,"stop":1718111929193,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:4:116)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that campaign fetched successfully","time":{"start":1718111929193,"stop":1718111929193,"duration":0},"status":"failed","statusMessage":"expected 'Validation Error.' to equal 'campaign fetched successfully'","statusTrace":"AssertionError: expected 'Validation Error.' to equal 'campaign fetched successfully'\n   at Object.eval sandbox-script.js:5:116)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1ecf98a367c81be6","name":"PreRequest","source":"1ecf98a367c81be6.txt","type":"text/plain","size":76},{"uid":"aed72d009fa7d439","name":"Request Headers","source":"aed72d009fa7d439.json","type":"application/json","size":519},{"uid":"9f4722ed0128d665","name":"Response Headers","source":"9f4722ed0128d665.json","type":"application/json","size":383},{"uid":"2b365dd1b2fe9c61","name":"Response Body","source":"2b365dd1b2fe9c61.txt","type":"text/plain","size":65}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Builder"},{"name":"suite","value":"Fetch Campaign By ID"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://api.eatcheffie.com/v1/admin/builder/campaign/%7B%7BcampaignId%7D%7D"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"e67f49cbd81975a","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/340//#testresult/e67f49cbd81975a","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1718111706736,"stop":1718111706962,"duration":226}},{"uid":"99644e9a44594300","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/339//#testresult/99644e9a44594300","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1718111520470,"stop":1718111520710,"duration":240}},{"uid":"8ace38f9b154a278","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/338//#testresult/8ace38f9b154a278","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1718109706574,"stop":1718109706833,"duration":259}},{"uid":"5cb5a9c8d8426373","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/337//#testresult/5cb5a9c8d8426373","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1718109481117,"stop":1718109481305,"duration":188}},{"uid":"6a131f680da4e0ef","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/336//#testresult/6a131f680da4e0ef","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1718109092855,"stop":1718109093026,"duration":171}},{"uid":"933ac3e1ee1e25bb","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/335//#testresult/933ac3e1ee1e25bb","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1718108876473,"stop":1718108876642,"duration":169}},{"uid":"39e0b36ff21371d1","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/323//#testresult/39e0b36ff21371d1","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1717966942033,"stop":1717966942272,"duration":239}},{"uid":"143eb1fa8af9cf7f","reportUrl":"https://assurdly.github.io/EATCHEFFIE-API-TESTS/322//#testresult/143eb1fa8af9cf7f","status":"failed","statusDetails":"Status code is 200, Status code name has 'OK', Response body property, Status is 'success', Verify that campaign fetched successfully","time":{"start":1717966757206,"stop":1717966757446,"duration":240}}]},"tags":[]},"source":"fc4d00125118e781.json","parameterValues":["GET - https://api.eatcheffie.com/v1/admin/builder/campaign/%7B%7BcampaignId%7D%7D","400"]}