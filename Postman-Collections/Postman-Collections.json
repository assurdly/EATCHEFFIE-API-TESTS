{
	"info": {
		"_postman_id": "32f756b5-ea3f-4449-b173-d539701f6bf4",
		"name": "Admin - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "55f10c8c-c242-4435-978d-173bc7c7f6a1",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminAccessToken = jsonData.data.accessToken\r",
											"const adminRefreshToken = jsonData.data.refreshToken;\r",
											"\r",
											"pm.environment.set(\"adminAccessToken\", adminAccessToken)\r",
											"pm.environment.set(\"adminRefreshToken\", adminRefreshToken)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Successfully logged in\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Login successful');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0201c521-d964-46ae-a56d-05e2fddb8cdb",
										"exec": [
											"pm.environment.set('base_url', 'https://api.eatcheffie.com/v1')\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c63fe606-e163-4ff6-a7dd-e0f80b6b029b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"super@admin.com\",\n       // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Randompassword1@\"\n   // \"email\": \"Celine@yopmail.com\",\n  //   \"password\": \"Password1@\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"response": [
								{
									"id": "2c1e7ddb-2801-45c3-b9c5-64cc2340dcc2",
									"name": "invalid_credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "33"
										},
										{
											"key": "ETag",
											"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:30:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Invalid credentials\"\n}"
								},
								{
									"id": "ef70eea4-3272-4425-b3f3-ea4e19afd1f1",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:31:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
								}
							]
						}
					],
					"id": "839826e2-eeae-4d33-bd16-c08d7ef9bfdb"
				}
			],
			"id": "5865fde6-3061-4c54-9e09-442b062fde21"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Change Password",
					"item": [
						{
							"name": "Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5c7495d-f882-4535-9b99-9a62b759c1a0",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is 'Your password has been changed successfully.'\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Your password has been changed successfully.');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6ba07711-43ea-4daf-99ac-d1f3a3e13f71",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Randompassword1@\",\n    \"password\": \"Randompassword1@@\",\n    \"confirmPassword\": \"Randompassword1@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Password complexity - Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5c7495d-f882-4535-9b99-9a62b759c1a0",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify password complexity\", function () {\r",
											"    pm.expect(pm.response.json().data.password).to.eql(\"Password must be at least 8 characters long and contain one uppercase, lowercase, number and special character.\");\r",
											"    \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6ef78d74-7167-4956-82cf-f7e86682f5f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Randompassword1@\",\n    \"password\": \"randompassword\",\n    \"confirmPassword\": \"randompassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Empty fields - Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5c7495d-f882-4535-9b99-9a62b759c1a0",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify fields should not be empty\", function () {\r",
											"    pm.expect(pm.response.json().data.oldPassword).to.eql(\"oldPassword should not be empty\");\r",
											"        pm.expect(pm.response.json().data.password).to.eql(\"password should not be empty\");\r",
											"\r",
											"    pm.expect(pm.response.json().data.confirmPassword).to.eql(\"confirmPassword should not be empty\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f88f19be-e9fd-4a04-a48d-65f00c204da8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"\",\n    \"password\": \"\",\n    \"confirmPassword\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Valid duplicate - Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5c7495d-f882-4535-9b99-9a62b759c1a0",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is 'Your password has been changed successfully.'\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Your password has been changed successfully.');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "553c06f2-3654-472f-b9fb-80cfe2993d5a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Randompassword1@@\",\n    \"password\": \"Randompassword1@\",\n    \"confirmPassword\": \"Randompassword1@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "No Auth - Change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5c7495d-f882-4535-9b99-9a62b759c1a0",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7e4f495d-376a-40a2-9851-17044e6adbda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Randompassword1@\",\n    \"password\": \"Randompassword1#\",\n    \"confirmPassword\": \"Randompassword1#\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						}
					],
					"id": "e20329ab-a3b9-4229-a498-93ab79ebbd31"
				},
				{
					"name": "Update Profile",
					"item": [
						{
							"name": "Update Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb7cfe70-ac03-4d42-9946-e7e50d771572",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Varify that 'Your profile has been updated successfully.'\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Your profile has been updated successfully.');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f71eb7d5-7893-47f0-a362-88003dcff49e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "e148edd3-aa2f-4f94-a18d-5cc1d9d7465e",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						},
						{
							"name": "No Auth - Update Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb7cfe70-ac03-4d42-9946-e7e50d771572",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8f4e55e4-3b9e-4583-9052-de29a0593e35",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "ce2663a0-9d79-494a-a3ec-a290bca63439",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						}
					],
					"id": "d318cc1c-c1c1-44a0-afff-43bf46650ae1"
				},
				{
					"name": "Get Logged In User",
					"item": [
						{
							"name": "Get Logged In User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "332ad88b-471e-4503-9ae5-3f8c313b17c3",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is 'Fetched logged in user successfully'\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Fetched logged in user successfully');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "67bb788e-5e8c-4d5c-b5a5-d662476b770b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"url": "{{base_url}}/user/me"
							},
							"response": [
								{
									"id": "39c69fe2-97e9-4c43-88f3-3cb2facca01a",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{base_url}}/user/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "46"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "402"
										},
										{
											"key": "ETag",
											"value": "W/\"192-//HmW+wBVSwRqRb6TwTeq0ONGqA\""
										},
										{
											"key": "Date",
											"value": "Tue, 23 Apr 2024 14:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched logged in user successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"createdAt\": \"2024-04-02T11:35:22.545Z\",\n        \"updatedAt\": \"2024-04-02T11:36:11.603Z\",\n        \"deliveryAddresses\": [],\n        \"dob\": \"2024-03-12T00:00:00.000Z\",\n        \"email\": \"tayoosunkiyesi@gmail.com\",\n        \"emailVerified\": true,\n        \"gender\": null,\n        \"firstName\": \"Temitayo\",\n        \"lastName\": \"Osunkiyesi\",\n        \"phone\": null,\n        \"lastLogin\": null,\n        \"phoneVerified\": false\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Get Logged In User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "332ad88b-471e-4503-9ae5-3f8c313b17c3",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "71a4af12-db81-4d30-854e-7de397aa9492",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "admin",
										"disabled": true
									}
								],
								"url": "{{base_url}}/user/me"
							},
							"response": [
								{
									"id": "e476ccb9-e6b7-4bdb-ac33-fb2ca29ac34c",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{base_url}}/user/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "46"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "402"
										},
										{
											"key": "ETag",
											"value": "W/\"192-//HmW+wBVSwRqRb6TwTeq0ONGqA\""
										},
										{
											"key": "Date",
											"value": "Tue, 23 Apr 2024 14:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched logged in user successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"createdAt\": \"2024-04-02T11:35:22.545Z\",\n        \"updatedAt\": \"2024-04-02T11:36:11.603Z\",\n        \"deliveryAddresses\": [],\n        \"dob\": \"2024-03-12T00:00:00.000Z\",\n        \"email\": \"tayoosunkiyesi@gmail.com\",\n        \"emailVerified\": true,\n        \"gender\": null,\n        \"firstName\": \"Temitayo\",\n        \"lastName\": \"Osunkiyesi\",\n        \"phone\": null,\n        \"lastLogin\": null,\n        \"phoneVerified\": false\n    }\n}"
								}
							]
						}
					],
					"id": "4dc3fb81-074c-4bd3-a39f-cc0963de1dab"
				}
			],
			"id": "2ee4155c-8ea6-47f4-99fb-c5812539a218"
		},
		{
			"name": "Team",
			"item": [
				{
					"name": "Roles and Permissions",
					"item": [
						{
							"name": "Fetch Permissions",
							"item": [
								{
									"name": "Fetch Permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d55a9297-125c-47bb-a6cd-404073832817",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"const permissionId1 = jsonData.data[0].id\r",
													"const permissionId2 = jsonData.data[1].id\r",
													"const permissionId3 = jsonData.data[2].id\r",
													"const permissionId4 = jsonData.data[3].id\r",
													"\r",
													"pm.environment.set(\"permissionId1\", permissionId1)\r",
													"pm.environment.set(\"permissionId2\", permissionId2)\r",
													"pm.environment.set(\"permissionId3\", permissionId3)\r",
													"pm.environment.set(\"permissionId4\", permissionId4)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Permissions fetched successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Permissions fetched successfully');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2061c6ff-62d8-4f0f-b96b-61bfd3fcaad7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"response": [
										{
											"id": "9a4343b4-8a79-41c6-9470-1183baf1b10c",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": "{{base_url}}/roles/permissions"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1265"
												},
												{
													"key": "ETag",
													"value": "W/\"4f1-mExNKTuOgA1FzDdCFoH2plLDp70\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:11:26 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Permissions fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n            \"name\": \"Create users\",\n            \"slug\": \"create-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"ae62ebcb-b0a6-427b-81da-e46ee6d0cc3f\",\n            \"name\": \"List users\",\n            \"slug\": \"list-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"6d09a213-ea3d-49ea-a829-d9b47b0394af\",\n            \"name\": \"Update users\",\n            \"slug\": \"update-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"3a7ea57d-5e72-4266-966d-83d06101b24c\",\n            \"name\": \"Delete users\",\n            \"slug\": \"delete-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"0006909b-0cea-4d7a-8dc9-b4d434492ab9\",\n            \"name\": \"Create roles\",\n            \"slug\": \"create-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"8dd24a3d-d812-443b-ae1c-04efd2c692f8\",\n            \"name\": \"List roles\",\n            \"slug\": \"list-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"d2ed9b17-9052-420f-9880-de18f8cb7ca4\",\n            \"name\": \"Update roles\",\n            \"slug\": \"update-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"2bef30ce-c521-4c9b-b42c-afbb4b71bd84\",\n            \"name\": \"Delete roles\",\n            \"slug\": \"delete-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "No Auth - Fetch Permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "803295f5-8820-49d6-b261-6fd25dc76e9a",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0127981c-a192-4c6a-9dd4-8ff3e1e817a2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"response": [
										{
											"id": "2adb27a3-840a-40ec-8151-ada6e287922d",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": "{{base_url}}/roles/permissions"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1265"
												},
												{
													"key": "ETag",
													"value": "W/\"4f1-mExNKTuOgA1FzDdCFoH2plLDp70\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:11:26 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Permissions fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n            \"name\": \"Create users\",\n            \"slug\": \"create-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"ae62ebcb-b0a6-427b-81da-e46ee6d0cc3f\",\n            \"name\": \"List users\",\n            \"slug\": \"list-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"6d09a213-ea3d-49ea-a829-d9b47b0394af\",\n            \"name\": \"Update users\",\n            \"slug\": \"update-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"3a7ea57d-5e72-4266-966d-83d06101b24c\",\n            \"name\": \"Delete users\",\n            \"slug\": \"delete-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"0006909b-0cea-4d7a-8dc9-b4d434492ab9\",\n            \"name\": \"Create roles\",\n            \"slug\": \"create-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"8dd24a3d-d812-443b-ae1c-04efd2c692f8\",\n            \"name\": \"List roles\",\n            \"slug\": \"list-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"d2ed9b17-9052-420f-9880-de18f8cb7ca4\",\n            \"name\": \"Update roles\",\n            \"slug\": \"update-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"2bef30ce-c521-4c9b-b42c-afbb4b71bd84\",\n            \"name\": \"Delete roles\",\n            \"slug\": \"delete-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        }\n    ]\n}"
										}
									]
								}
							],
							"id": "9c79c88e-1418-4894-883e-568fc46fddb2"
						},
						{
							"name": "Create Role",
							"item": [
								{
									"name": "Valid - Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "456bcc7f-6a02-4b2c-8c3b-3ca0a89fb9fc",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Status code name has 'Created'\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"  \r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that Role created successfully.\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Role created successfully');\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0e75d681-51a6-4232-8612-4fdd8c3e4d11",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomJobTitle}}\",\n    \"description\": \"Role for Jobtitle\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{permissionId1}}\", \"{{permissionId2}}\"]// array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": [
										{
											"id": "9d60f4da-77c3-47b7-aaf4-7fac1bfaafd7",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "6a83a5be-abd6-43a6-9237-05ec72276d81",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "Duplicate role - Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba3e9dcb-d20c-48ea-ac5e-79e0f7057e20",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that Role with name \\\"Admin\\\" already exists\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Role with name \\\"Admin\\\" already exists\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ec8d842a-f737-42da-9872-49f748202bde",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Admin\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{permissionId1}}\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": [
										{
											"id": "22e17cbc-9be6-4330-9c5a-38a490ed8bb5",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "26d75dab-60bb-4151-9cef-216b9af3f8be",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "No Auth - Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba3e9dcb-d20c-48ea-ac5e-79e0f7057e20",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e18fbc90-ebe5-47c7-ad20-b42fb07a8411",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Admin\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{permissionId1}}\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": [
										{
											"id": "6cfa8aab-549a-4f6d-8475-a18321f00ff8",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "63e65da1-a5e1-4e17-9634-327d8fbeaa3a",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "Empty fields - Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e344365-ef7e-4928-9d6c-045c8e0e6bbb",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify that email must be an email\", function () {\r",
													"    pm.expect(pm.response.json().data.name).to.be.a(\"string\");\r",
													"     pm.expect(pm.response.json().data.description).to.be.a(\"string\");\r",
													"      pm.expect(pm.response.json().data.status).to.be.a(\"string\");\r",
													"       pm.expect(pm.response.json().data.permissions).to.be.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1035152a-5a4e-4be0-b569-8bba228fca9c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"\",\n    \"description\": \"\",\n    \"status\": \"\", // active or inactive\n    \"permissions\": [\"\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": [
										{
											"id": "e2923ac8-95ba-40a3-a71d-334106e7e38f",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "ca855107-464b-459d-9d7d-4dc7a9840e8a",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "Invalid status - Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e344365-ef7e-4928-9d6c-045c8e0e6bbb",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify that status must be one of the following values: active, inactive\", function () {\r",
													"    pm.expect(pm.response.json().data.status).to.eql(\"status must be one of the following values: active, inactive\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9ba3535d-6f9d-4077-9a61-62ec2e233d18",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Poss\",\n    \"description\": \"Role for Poss\",\n    \"status\": \"declined\", // active or inactive\n    \"permissions\": [\"{{permissionId1}}\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "074173ca-9b8b-4aae-b14a-c8ec87e0d547",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "f36d9fe6-9e58-4c07-83a2-82ea11eaa774",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "Invalid permission - Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "174e2adc-4d6a-47dd-8a5a-bc4928e3b1e0",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify that email must be an email\", function () {\r",
													"    pm.expect(pm.response.json().data.permissions).to.be.a(\"string\")\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ed8a99d9-a197-401f-a9af-09d714341f0a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Baker\",\n    \"description\": \"Role forBaker\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a9\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": [
										{
											"id": "a4c42c0a-fa6c-4557-8964-f1d85854e19d",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "c839fb7a-a301-4508-a9f0-16323eb830dd",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								}
							],
							"id": "017745db-2c8b-4a8d-b5c5-0a9cfaab6f61"
						},
						{
							"name": "List Roles",
							"item": [
								{
									"name": "List Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09f1d5fb-3610-4dba-9429-758e70bd876b",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"const roleId = jsonData.data[0].id\r",
													"const roleId1 = jsonData.data[1].id\r",
													"const roleName = jsonData.data[0].name\r",
													"const roleDate = jsonData.data[0].createdAt\r",
													"\r",
													"pm.environment.set(\"roleId\", roleId)\r",
													"pm.environment.set(\"roleId1\", roleId1)\r",
													"pm.environment.set(\"roleName\", roleName)\r",
													"pm.environment.set(\"roleDate\", roleDate)\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Successfully fetched roles\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Successfully fetched roles');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "468c7691-da4c-44bd-94d7-08c3b99b3871",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/roles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "filter[permissions]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[q]",
													"value": "vibes",
													"disabled": true
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "5",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "a8c937e7-c902-4cf3-9038-f2b38beeab83",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": "{{base_url}}/roles"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "53"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "321"
												},
												{
													"key": "ETag",
													"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 13:46:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
										}
									]
								},
								{
									"name": "By Permission - List Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09f1d5fb-3610-4dba-9429-758e70bd876b",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Successfully fetched roles\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Successfully fetched roles');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "518aaef4-8b83-4115-ae21-3bac4a237ea1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/roles?filter[permissions]=a6deb555-247d-414d-a13b-feeda1ed863e",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "filter[permissions]",
													"value": "a6deb555-247d-414d-a13b-feeda1ed863e"
												},
												{
													"key": "filter[q]",
													"value": "vibes",
													"disabled": true
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "ad993639-d1aa-466f-85dc-3aaf56f637d8",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": "{{base_url}}/roles"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "53"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "321"
												},
												{
													"key": "ETag",
													"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 13:46:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
										}
									]
								},
								{
									"name": "By Role Name - List Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09f1d5fb-3610-4dba-9429-758e70bd876b",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Successfully fetched roles\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Successfully fetched roles');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "828904ed-96de-4302-a5ff-56aab29f6640",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/roles?filter[q]={{roleName}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "filter[permissions]",
													"value": "a6deb555-247d-414d-a13b-feeda1ed863e",
													"disabled": true
												},
												{
													"key": "filter[q]",
													"value": "{{roleName}}"
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "4f2a4753-9ee4-4b49-9d37-d8705da01a3b",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": "{{base_url}}/roles"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "53"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "321"
												},
												{
													"key": "ETag",
													"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 13:46:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
										}
									]
								},
								{
									"name": "By Date - List Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09f1d5fb-3610-4dba-9429-758e70bd876b",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Successfully fetched roles\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Successfully fetched roles');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e84534f2-803f-4382-8581-28d1bdf41143",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/roles?filter[createdAt][gt]={{roleDate}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "filter[permissions]",
													"value": "a6deb555-247d-414d-a13b-feeda1ed863e",
													"disabled": true
												},
												{
													"key": "filter[q]",
													"value": "{{roleName}}",
													"disabled": true
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "{{roleDate}}"
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "a6f441be-403e-472b-acc9-7148215c04cc",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": "{{base_url}}/roles"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "53"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "321"
												},
												{
													"key": "ETag",
													"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 13:46:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
										}
									]
								},
								{
									"name": "No Auth - List Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09f1d5fb-3610-4dba-9429-758e70bd876b",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "03851840-9d39-439f-964b-68db70a01379",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": "{{base_url}}/roles"
									},
									"response": [
										{
											"id": "2c1a3fb4-34ba-4491-86d8-26b75cf19dce",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": "{{base_url}}/roles"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "53"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "321"
												},
												{
													"key": "ETag",
													"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 13:46:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
										}
									]
								}
							],
							"id": "bdda387e-336c-440f-abee-8c90894f39ab"
						},
						{
							"name": "Get Role By ID",
							"item": [
								{
									"name": "Get Role By ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ea2eba0-7eb8-48e9-83fb-ad784ac8b9aa",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Successfully fetched role\", function () {\r",
													"    pm.expect(jsonData.message).to.include(\"Successfully fetched role\");\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "33084ee0-ffd1-426b-b692-226dec1ed622",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{roleId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "c1a1111d-0bcf-4d66-acce-0a7a61e1ac7d",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/roles/:id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "424"
												},
												{
													"key": "ETag",
													"value": "W/\"1a8-0KBpvOBTdRawDprdOyqloZZzvR0\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:21:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched role\",\n    \"data\": {\n        \"id\": \"d35b72b7-0376-4859-806a-9e9c646dbed1\",\n        \"name\": \"HR\",\n        \"slug\": \"hr\",\n        \"description\": \"Role for HR personnel\",\n        \"status\": \"active\",\n        \"permissions\": [\n            {\n                \"permission\": {\n                    \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n                    \"name\": \"Create users\",\n                    \"slug\": \"create-users\",\n                    \"description\": null,\n                    \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n                }\n            }\n        ],\n        \"createdAt\": \"2024-05-02T13:13:17.652Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Invalid Id - Get Role By ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ea2eba0-7eb8-48e9-83fb-ad784ac8b9aa",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad Request.\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify message Validation Error.\", function () {\r",
													"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify id must be a UUID\", function () {\r",
													"    pm.expect(pm.response.json().data.id).to.include(\"id must be a UUID\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ea089201-8e6f-42f9-87ad-9467a90b3231",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d35b72b7-0376-4859-806"
												}
											]
										}
									},
									"response": [
										{
											"id": "44380974-5735-4390-a3d8-eb4343fc7f3d",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/roles/:id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "424"
												},
												{
													"key": "ETag",
													"value": "W/\"1a8-0KBpvOBTdRawDprdOyqloZZzvR0\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:21:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched role\",\n    \"data\": {\n        \"id\": \"d35b72b7-0376-4859-806a-9e9c646dbed1\",\n        \"name\": \"HR\",\n        \"slug\": \"hr\",\n        \"description\": \"Role for HR personnel\",\n        \"status\": \"active\",\n        \"permissions\": [\n            {\n                \"permission\": {\n                    \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n                    \"name\": \"Create users\",\n                    \"slug\": \"create-users\",\n                    \"description\": null,\n                    \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n                }\n            }\n        ],\n        \"createdAt\": \"2024-05-02T13:13:17.652Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "No Auth - Get Role By ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58d1d207-a898-40b7-b1d1-60c13703ee25",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "317799ea-f0df-4450-83b4-ff34842edd30",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
												}
											]
										}
									},
									"response": [
										{
											"id": "ba30dca9-1670-4094-897b-478d6be6a20f",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/roles/:id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "424"
												},
												{
													"key": "ETag",
													"value": "W/\"1a8-0KBpvOBTdRawDprdOyqloZZzvR0\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:21:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched role\",\n    \"data\": {\n        \"id\": \"d35b72b7-0376-4859-806a-9e9c646dbed1\",\n        \"name\": \"HR\",\n        \"slug\": \"hr\",\n        \"description\": \"Role for HR personnel\",\n        \"status\": \"active\",\n        \"permissions\": [\n            {\n                \"permission\": {\n                    \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n                    \"name\": \"Create users\",\n                    \"slug\": \"create-users\",\n                    \"description\": null,\n                    \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n                }\n            }\n        ],\n        \"createdAt\": \"2024-05-02T13:13:17.652Z\"\n    }\n}"
										}
									]
								}
							],
							"id": "94d3e237-f0d2-4df5-8176-06e089b122b7"
						},
						{
							"name": "Update Role",
							"item": [
								{
									"name": "Update Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "143d907c-aa4f-40d5-b117-ce99bc91273c",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Role updated successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include(\"Role updated successfully\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "46f5dac2-9ce9-4b46-8bc2-4c07eb3fcee6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Administer\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{permissionId3}}\", \"{{permissionId2}}\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{roleId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "bd3d8e99-1016-4409-97e6-c9c79b9fa4a5",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "c1717c69-a3ff-4626-bf43-7b8c0467b113",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "No Id - Update Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "143d907c-aa4f-40d5-b117-ce99bc91273c",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad Request.\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify message Validation Error.\", function () {\r",
													"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify fields can not be empty\", function () {\r",
													"    pm.expect(pm.response.json().data.id).to.include(\"id must be a UUID\");\r",
													"       });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5837493f-5e04-4aa5-9884-03360ed4c265",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Role for Job title\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{permissionId3}}\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "e58f2b52-772a-4ac8-9b8b-ba4872432b49",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "8928a9ae-7619-4439-b0c4-abec2727a6cb",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "No Auth - Update Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "143d907c-aa4f-40d5-b117-ce99bc91273c",
												"exec": [
													"const jsonData = pm.response.json();pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2877d261-dcfd-4001-97bb-35c85f25ef1a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Role for Job title\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{permissionId3}}\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{roleId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "a1d2be10-45fe-4087-908a-e62c1d544bb1",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "393bd653-5eee-4261-a4dc-28ce3d8e6faf",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "Empty fields - Update Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4ce705f4-23e9-462b-865a-3f6c9b3a0858",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad Request.\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify message Validation Error.\", function () {\r",
													"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify fields can not be empty\", function () {\r",
													"    pm.expect(pm.response.json().data.description).to.include(\"description should not be empty\");\r",
													"        pm.expect(pm.response.json().data.status).to.include(\"status should not be empty\");\r",
													"pm.expect(pm.response.json().data.permissions).to.include(\"each value in permissions should not be empty\");\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c11aa932-3498-4aa3-a847-cbef389f4c27",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"\",\n    \"status\": \"\", // active or inactive\n    \"permissions\": [\"\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{roleId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "3feb1570-b491-4983-ac2d-5b2f109bb9be",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "4b62a7a5-86a9-4d0f-a63e-546bad1ac701",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								}
							],
							"id": "c5bae971-03bc-456e-ba7e-7225e6d6420e"
						},
						{
							"name": "Delete Roles",
							"item": [
								{
									"name": "No Auth - Delete Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b82fa6bf-f305-4a4a-bfe0-ef3e2a428eb6",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3af03500-4d53-4103-9e64-7b6ebdb2f7cd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{roleId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "e4cc1fc9-368c-4d82-b400-4ec5cf5cf589",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "b30770dd-c37c-451c-8abf-836d2ba917b0",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "No Id - Delete Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b82fa6bf-f305-4a4a-bfe0-ef3e2a428eb6",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad Request.\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify message Validation Error.\", function () {\r",
													"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify fields can not be empty\", function () {\r",
													"    pm.expect(pm.response.json().data.id).to.include(\"id must be a UUID\");\r",
													"       });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2a230a5e-1e65-4c5e-b7a8-2b8abeb5dfbc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "cda52b95-1c3c-412c-8ba2-f8bdb448838d",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "2ab084fb-fd85-458a-bd04-d10d9ab87847",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								},
								{
									"name": "Delete Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b82fa6bf-f305-4a4a-bfe0-ef3e2a428eb6",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Role deleted successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include(\"Role deleted successfully\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1db9063f-11b0-427f-8d9d-9e48e3c9cca5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{roleId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "74795e5a-60f8-443d-92ac-ab2a014a482c",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "38"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "73"
												},
												{
													"key": "ETag",
													"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:13:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
										},
										{
											"id": "8c300fdf-e56f-4679-93e3-dcb061c13945",
											"name": "conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/roles"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "97"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "14"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 May 2024 14:33:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
										}
									]
								}
							],
							"id": "ec33b429-8abb-4aed-8a47-92bebccfd8ee"
						}
					],
					"id": "891cbdd2-f5bc-4e7b-bc2d-a44ba9283fd8"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Invite User",
							"item": [
								{
									"name": "Invite User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdb9e078-383e-4bd4-86b7-41b77de26020",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"const adminResetPasswordToken = jsonData.data.resetPasswordToken",
													"",
													"pm.environment.set(\"adminResetPasswordToken\", adminResetPasswordToken)",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"pm.test(\"Status code name has 'Created'\", function () {",
													"    pm.response.to.have.status(\"Created\");",
													"});",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.status).to.be.a('string');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"    pm.expect(jsonData.data).to.be.an('object');",
													"});",
													"",
													"pm.test(\"Status is 'success'\", function () {",
													"    pm.expect(jsonData.status).to.eql('success');",
													"});",
													"",
													"pm.test(\"Verify that User created successfully. An email has been sent with instructions on how to setup the account.\", function () {",
													"    pm.expect(pm.response.json().message).to.equal(\"User created succesfully. An email has been sent with instructions on how to setup the account.\");",
													"});",
													"pm.test(\"Verify resetPasswordToken and resetUrl is a string\", function () {",
													"    pm.expect(pm.response.json().data.resetPasswordToken).to.be.a(\"string\");",
													"    pm.expect(pm.response.json().data.resetUrl).to.be.a(\"string\");",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4140c318-9f45-455f-b17a-e39613ae0a9e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"{{roleId}}\",\n    \"email\": \"{{$randomFirstName}}@yopmail.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "ac117f28-8ccc-4842-843c-1bea41e01acc",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Invalid fields - Invite User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdb9e078-383e-4bd4-86b7-41b77de26020",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"/*\r",
													"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify that email must be an email\", function () {\r",
													"    pm.expect(pm.response.json().data.email).to.eql(\"email must be an email\");\r",
													"});\r",
													"*/"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "36115c0d-90e9-42d5-aef6-93461ecee016",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "3bc3b833-a089-4e22-abee-b904115a6b8f",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Empty fields - Invite User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdb9e078-383e-4bd4-86b7-41b77de26020",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"/*\r",
													"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify that email must be an email\", function () {\r",
													"    pm.expect(pm.response.json().data.email).to.eql(\"email must be an email\");\r",
													"});\r",
													"*/"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d72e2c95-03df-4166-b6a4-fcacfa14f207",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"\",\n    \"email\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "07491b84-4abb-40a8-9cbe-03cb144305c1",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "No Auth - Invite User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a0ae1302-aa38-4c29-944c-c01c20e877ab",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bfe0da28-9fa2-4788-bd67-f6ab3bc5db23",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "b1993fbf-ef35-41d2-88ce-fe0a7dfe0b25",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								}
							],
							"id": "c415d40a-ebd2-4076-9217-28f66870a47d"
						},
						{
							"name": "Setup user with email",
							"item": [
								{
									"name": "Mismatched password - Setup user with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "39255046-bf3f-45c9-a3e5-044080649369",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that 'Passwords do not match'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Passwords do not match\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f287560f-911d-487f-b600-c27790a475ea",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1#\",\n    \"token\": \"{{adminResetPasswordToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/setup"
									},
									"response": [
										{
											"id": "5a80e202-e09d-486c-9b21-8a25c2557d91",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/setup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "118"
												},
												{
													"key": "ETag",
													"value": "W/\"76-BsI8WylV+oGuVd4y6/nv3STv93I\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:55:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully setup account\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE4NDUyNjU3fQ.RuRzVpX9UHU4SYP0o18lVKWqf6jeCjQU7MpTsn1DXuU\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE0ODU2MjU3fQ.74tjhaMJbSqx3ygNAqg98VsWMeqd6BUK_JeZNNRKevQ\"\n    }\n}"
										}
									]
								},
								{
									"name": "Invalid token - Setup user with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "39255046-bf3f-45c9-a3e5-044080649369",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that reset password token is invalid. Please try again.'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.eql(\"Oops! That reset password token is invalid. Please try again.\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "38155171-28be-45b7-8116-0323bf36dc45",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/setup"
									},
									"response": [
										{
											"id": "e74e02a1-82b7-4f0c-bd4e-fd5fb4830930",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/setup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "118"
												},
												{
													"key": "ETag",
													"value": "W/\"76-BsI8WylV+oGuVd4y6/nv3STv93I\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:55:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully setup account\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE4NDUyNjU3fQ.RuRzVpX9UHU4SYP0o18lVKWqf6jeCjQU7MpTsn1DXuU\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE0ODU2MjU3fQ.74tjhaMJbSqx3ygNAqg98VsWMeqd6BUK_JeZNNRKevQ\"\n    }\n}"
										}
									]
								},
								{
									"name": "Empty fields - Setup user with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "39255046-bf3f-45c9-a3e5-044080649369",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that message is a string'\", function () {\r",
													"    pm.expect(pm.response.json().message).to.be.a(\"string\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "72f0a17a-edba-4022-bdc2-69d14bf3306c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"password\": \"\",\n    \"confirmPassword\": \"\",\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/setup"
									},
									"response": [
										{
											"id": "40aa5e30-e63a-45fe-bb21-7f28f8689cb3",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/setup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "118"
												},
												{
													"key": "ETag",
													"value": "W/\"76-BsI8WylV+oGuVd4y6/nv3STv93I\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:55:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully setup account\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE4NDUyNjU3fQ.RuRzVpX9UHU4SYP0o18lVKWqf6jeCjQU7MpTsn1DXuU\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE0ODU2MjU3fQ.74tjhaMJbSqx3ygNAqg98VsWMeqd6BUK_JeZNNRKevQ\"\n    }\n}"
										}
									]
								},
								{
									"name": "Setup user with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "39255046-bf3f-45c9-a3e5-044080649369",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"const adminSetupUserAccessToken = jsonData.data.accessToken\r",
													"const adminSetupUserRefreshToken = jsonData.data.refreshToken\r",
													"\r",
													"pm.environment.set(\"adminSetupUserAccessToken\", adminSetupUserAccessToken)\r",
													"pm.environment.set(\"adminSetupUserRefreshToken\", adminSetupUserRefreshToken)\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Status code name has 'Created'\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Successfully setup account\", function () {\r",
													"    pm.expect(pm.response.json().message).to.include('Successfully setup account');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data.accessToken).to.be.an('string').and.not.be.empty;\r",
													"    pm.expect(jsonData.data.refreshToken).to.be.an('string').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6646c4e1-6d1a-4f93-a702-8b46aa09f3c9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Bayee\", //\"Temitato\",\n    \"lastName\": \"Deanil\",// \"Osunkiyesi\"\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"{{adminResetPasswordToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/setup"
									},
									"response": [
										{
											"id": "d27b27dd-dc86-4f22-a614-8f6c525d2d20",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/setup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "118"
												},
												{
													"key": "ETag",
													"value": "W/\"76-BsI8WylV+oGuVd4y6/nv3STv93I\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:55:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully setup account\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE4NDUyNjU3fQ.RuRzVpX9UHU4SYP0o18lVKWqf6jeCjQU7MpTsn1DXuU\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE0ODU2MjU3fQ.74tjhaMJbSqx3ygNAqg98VsWMeqd6BUK_JeZNNRKevQ\"\n    }\n}"
										}
									]
								}
							],
							"id": "8c21faba-4d08-45e4-b9c3-3397354ad9cc"
						},
						{
							"name": "List Users",
							"item": [
								{
									"name": "List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13600a12-91da-427c-b074-ae02577e3ff4",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"const userId = jsonData.data[0].id\r",
													"const createdAt = jsonData.data[0].createdAt\r",
													"\r",
													"pm.environment.set(\"userId\", userId)\r",
													"pm.environment.set(\"createdAt\", createdAt)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Fetched users successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Fetched users successfully');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "caa27aed-cca3-4b6e-9f74-6045c56ac8f4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "filter[q]",
													"value": "Temitayo",
													"description": "Searches by name, email and phone",
													"disabled": true
												},
												{
													"key": "filter[roleId]",
													"value": "2fd20713-52c8-413f-a81b-2c5e9077f074",
													"disabled": true
												},
												{
													"key": "filter[status]",
													"value": "active",
													"disabled": true
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "{{createdAt}}",
													"disabled": true
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "2024-06-11",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "By createdAt - List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13600a12-91da-427c-b074-ae02577e3ff4",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"const userId = jsonData.data[0].id\r",
													"const createdAt = jsonData.data[0].createdAt\r",
													"\r",
													"pm.environment.set(\"userId\", userId)\r",
													"pm.environment.set(\"createdAt\", createdAt)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Fetched users successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Fetched users successfully');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bd060ba3-bc9a-4856-afcf-84cb004601e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users?filter[createdAt][gt]={{createdAt}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "filter[q]",
													"value": "Temitayo",
													"description": "Searches by name, email and phone",
													"disabled": true
												},
												{
													"key": "filter[roleId]",
													"value": "2fd20713-52c8-413f-a81b-2c5e9077f074",
													"disabled": true
												},
												{
													"key": "filter[status]",
													"value": "active",
													"disabled": true
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "{{createdAt}}"
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "2024-06-11",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "By status - List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13600a12-91da-427c-b074-ae02577e3ff4",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"const userId = jsonData.data[0].id\r",
													"\r",
													"pm.environment.set(\"userId\", userId)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Fetched users successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Fetched users successfully');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "43060bcc-8fab-4d0b-91d8-3d7b24050cf3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users?filter[status]=active",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "filter[q]",
													"value": "Temitayo",
													"description": "Searches by name, email and phone",
													"disabled": true
												},
												{
													"key": "filter[roleId]",
													"value": "2fd20713-52c8-413f-a81b-2c5e9077f074",
													"disabled": true
												},
												{
													"key": "filter[status]",
													"value": "active"
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "2024-05-21",
													"disabled": true
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "2024-05-30",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "By roleId - List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13600a12-91da-427c-b074-ae02577e3ff4",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"const userId = jsonData.data[0].id\r",
													"\r",
													"pm.environment.set(\"userId\", userId)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify Fetched users successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include('Fetched users successfully');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b62fe960-1947-40c3-9738-dea8bfcb238a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users?filter[roleId]={{roleId}}",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "filter[q]",
													"value": "Temitayo",
													"description": "Searches by name, email and phone",
													"disabled": true
												},
												{
													"key": "filter[roleId]",
													"value": "{{roleId}}"
												},
												{
													"key": "filter[status]",
													"value": "",
													"disabled": true
												},
												{
													"key": "filter[createdAt][gt]",
													"value": "2024-05-21",
													"disabled": true
												},
												{
													"key": "filter[createdAt][lt]",
													"value": "2024-05-30",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Auth - List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8c11f99e-e565-481a-b10a-25320062bd81",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e424070b-1595-441f-800e-202cf81f91d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": "{{base_url}}/users"
									},
									"response": []
								}
							],
							"id": "fefee5a8-61e4-4ef5-b260-1f0acd5c468a"
						},
						{
							"name": "Get User By ID",
							"item": [
								{
									"name": "Get User By ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "830363d1-7bc1-40f4-b19b-2886e6434282",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Status code name has 'OK'\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.status).to.be.a('string');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Status is 'success'\", function () {",
													"    pm.expect(jsonData.status).to.eql('success');",
													"});",
													"",
													"pm.test(\"Verify Fetched users successfully\", function () {",
													"    pm.expect(jsonData.message).to.include('Fetched user successfully');",
													"});",
													"pm.test(\"Verify that data is a string\", function () {",
													"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "dc78cfcc-9143-4692-8bb9-16ce2e3c3fc9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/users/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Id - Get User By ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "830363d1-7bc1-40f4-b19b-2886e6434282",
												"exec": [
													"const jsonData = pm.response.json();",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"pm.test(\"Status code name has 'Bad Request.\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Verify message Validation Error.\", function () {",
													"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");",
													"});",
													"pm.test(\"Verify fields can not be empty\", function () {",
													"    pm.expect(pm.response.json().data.id).to.include(\"id must be a UUID\");",
													"       });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d59262db-42a0-4064-b4f1-3027ed0f4d9e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/users/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Auth - Get User By ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "830363d1-7bc1-40f4-b19b-2886e6434282",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Status code name has Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ed3b1056-2362-4ca6-ba89-37ab2b4c8b6c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/users/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "240cfa8e-9184-4227-aed2-81de7ce65846"
						},
						{
							"name": "Deactivate User",
							"item": [
								{
									"name": "Deactivate User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "429ae0bb-4611-4c69-8d26-69233552625f",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify User updated successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include('User updated successfully');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "23a4328a-25f1-466f-96fb-71347b4e1646",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{base_url}}/users/:id/deactivate",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id",
												"deactivate"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Id - Deactivate User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8d73cab-ebef-4a89-8bec-229eaad22983",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad Request.\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify message Validation Error.\", function () {\r",
													"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify fields can not be empty\", function () {\r",
													"    pm.expect(pm.response.json().data.id).to.include(\"id must be a UUID\");\r",
													"       });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a2e4d0d8-8787-45ec-9e8e-4382c27c1202",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:id/deactivate",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id",
												"deactivate"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Auth - Deactivate User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8d73cab-ebef-4a89-8bec-229eaad22983",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "13009e3c-8908-4174-9055-6e91bc74debf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "x-request-source",
												"value": "admin",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:id/deactivate",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id",
												"deactivate"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "b1685ad0-b0fa-4ede-8782-32f2a27f44f8"
						},
						{
							"name": "Activate User",
							"item": [
								{
									"name": "Activate User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d1124b0-7c9c-4aa5-bee3-7f083593c28c",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has 'OK'\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 'success'\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Verify User updated successfully\", function () {\r",
													"    pm.expect(jsonData.message).to.include('User updated successfully');\r",
													"});\r",
													"pm.test(\"Verify that data is a string\", function () {\r",
													"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0acb3341-dbb8-4600-bbba-817ea4f99b12",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{base_url}}/users/:id/activate",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Id - Activate User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d1124b0-7c9c-4aa5-bee3-7f083593c28c",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has 'Bad Request.\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify message Validation Error.\", function () {\r",
													"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
													"});\r",
													"pm.test(\"Verify fields can not be empty\", function () {\r",
													"    pm.expect(pm.response.json().data.id).to.include(\"id must be a UUID\");\r",
													"       });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0f7172d3-00bf-42d3-82c4-9f8681a91fd6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{adminAccessToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{base_url}}/users/:id/activate",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Auth - Activate User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d1124b0-7c9c-4aa5-bee3-7f083593c28c",
												"exec": [
													"const jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"pm.test(\"Status code name has Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a5f55fd2-0929-42e7-a666-eb1f38e693e0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{base_url}}/users/:id/activate",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":id",
												"activate"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{userId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "a946ad5c-4d0b-44c7-89df-c778616580d3"
						}
					],
					"id": "5f1e728f-e65d-41a9-9b59-f902bc700d7c"
				}
			],
			"id": "60ba1b48-0180-4f76-88ca-1266fc59b1d5"
		},
		{
			"name": "Vendors",
			"item": [
				{
					"name": "Fetch Vendors",
					"item": [
						{
							"name": "Fetch Vendors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3afa93-f99c-4826-8a45-52e480d3faba",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminVendor = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"adminVendor\", adminVendor)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Vendors fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Vendors fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "919c44e5-25bf-4a38-b8b6-e71999f1fcec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors"
									],
									"query": [
										{
											"key": "filter[q]",
											"value": "Azeez",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "pending",
											"description": "pending, active, inactive",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "5",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "By name - Fetch Vendors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3afa93-f99c-4826-8a45-52e480d3faba",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Vendors fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Vendors fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0ec0bbb9-8cd2-4f19-97d3-db00e7907924",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors?filter[q]=Zizuzz Eatery",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors"
									],
									"query": [
										{
											"key": "filter[q]",
											"value": "Zizuzz Eatery"
										},
										{
											"key": "filter[status]",
											"value": "active",
											"description": "pending, active, inactive",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "By Status - Fetch Vendors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3afa93-f99c-4826-8a45-52e480d3faba",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Vendors fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Vendors fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "55ffba83-edca-4dd1-96f2-e5ca082718b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors?filter[status]=inactive",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors"
									],
									"query": [
										{
											"key": "filter[q]",
											"value": "The Cook House",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "inactive",
											"description": "pending, active, inactive"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Fetch Vendors",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3afa93-f99c-4826-8a45-52e480d3faba",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1d2ee7eb-ffe9-4e0f-9da9-b70f50555504",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors"
									],
									"query": [
										{
											"key": "filter[q]",
											"value": "The Cook House",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "active",
											"description": "pending, active, inactive",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "8307dcc2-4ba5-45e8-9abc-ad96cb32049b"
				},
				{
					"name": "Fetch Vendor By ID",
					"item": [
						{
							"name": "Fetch Vendor By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d80d476-620e-493a-b847-a776fff6c0e4",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Vendor fetched successfully\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Vendor fetched successfully');\r",
											"});\r",
											"pm.test(\"Verify that data is a string\", function () {\r",
											"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3c925a71-904f-4bc3-907b-adbc1466122d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminVendor}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "015f6146-4afc-4864-ba40-bb04c8b1998e",
									"name": "success_not_done_business_info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1133"
										},
										{
											"key": "ETag",
											"value": "W/\"46d-i6nD/aE9w3tQGWV8lIL7JlFM5JE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:06:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T12:47:07.312Z\",\n        \"business\": null,\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T150659Z&X-Amz-Expires=3600&X-Amz-Signature=5adbaafb58666c2d5734fb6858a63271e82a5594e6025002afd87c164c0339e3&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\"\n    }\n}"
								},
								{
									"id": "3178223a-55c4-4aef-8951-8d994a58c29f",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3285"
										},
										{
											"key": "ETag",
											"value": "W/\"cd5-BeslGZpYbCnwmUd1AlfA4aQVARE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:16:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T14:15:31.528Z\",\n        \"business\": {\n            \"name\": \"NexusCooks\",\n            \"description\": \"Best meals everywhere\",\n            \"rating\": 0,\n            \"ratingCount\": 0,\n            \"addresses\": [\n                {\n                    \"id\": \"5f968641-6a47-42c9-a8c0-c79a9f68d60a\",\n                    \"createdAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"updatedAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"longitude\": -1.67967,\n                    \"latitude\": 52.5329,\n                    \"addressLine\": \"10 Birmingham Road Coleshill, Birmingham Warwickshire\",\n                    \"area\": \"B\",\n                    \"zipcode\": \"B46 2EN\"\n                }\n            ],\n            \"id\": \"0a22bc23-0725-4289-b5f1-b47cdcc773ae\",\n            \"createdAt\": \"2024-05-21T14:08:43.132Z\",\n            \"updatedAt\": \"2024-05-21T14:15:31.525Z\"\n        },\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=270a00c378f92e96bb5821796c93b5d241ee90c4ec40e3df40893191c76d3607&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\",\n        \"councilRegisterationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/61bcb99d24f83852b13d69196d00919872a540ba6c8c7dace5f54638536d8f17df6ac01725d6c790fbb09d5a61880e4b4bd06389fbb11ea30bc16d5d45927de9.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=76290d4410e05ee03c0b99c736467f697a447977a97622364f341a8218772f77&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"hygieneRatingCertificate\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/a10c2a7edbc0ecf09d46ad27b885c76a49adc6d7dcc3b46f563e5b267c4fced40ec10fcc19f7b18dee97dbf2dc89dcbbb7127692a03b1f77e6b03838e2aafa88.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=d4ce07cd5cc3ddf1cc15b00228f0833f277c7a6e5468b55d6ba9bb7676a44342&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"certificationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/45e68eeb2ab410b5a1692e50eeeb377dbc00709826026dc986534e7a603a40b77f2910f78a3dd2574057e63f66e7027c9f132f4b44c6cf7b14f3191e29e5657b.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=0a4f3cf58a373b13f5c1922ab3f50e1487980e2d66db856fa745ce59d695fc89&X-Amz-SignedHeaders=host&x-id=GetObject\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Fetch Vendor By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d80d476-620e-493a-b847-a776fff6c0e4",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1e0e0efa-1c6b-4873-88d0-8e7d09672369",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminVendor}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "4c419105-37e3-412b-85fd-ae4f1e9a6fab",
									"name": "success_not_done_business_info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1133"
										},
										{
											"key": "ETag",
											"value": "W/\"46d-i6nD/aE9w3tQGWV8lIL7JlFM5JE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:06:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T12:47:07.312Z\",\n        \"business\": null,\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T150659Z&X-Amz-Expires=3600&X-Amz-Signature=5adbaafb58666c2d5734fb6858a63271e82a5594e6025002afd87c164c0339e3&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\"\n    }\n}"
								},
								{
									"id": "8c7d7d99-1527-49e5-8312-84814182e8ea",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3285"
										},
										{
											"key": "ETag",
											"value": "W/\"cd5-BeslGZpYbCnwmUd1AlfA4aQVARE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:16:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T14:15:31.528Z\",\n        \"business\": {\n            \"name\": \"NexusCooks\",\n            \"description\": \"Best meals everywhere\",\n            \"rating\": 0,\n            \"ratingCount\": 0,\n            \"addresses\": [\n                {\n                    \"id\": \"5f968641-6a47-42c9-a8c0-c79a9f68d60a\",\n                    \"createdAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"updatedAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"longitude\": -1.67967,\n                    \"latitude\": 52.5329,\n                    \"addressLine\": \"10 Birmingham Road Coleshill, Birmingham Warwickshire\",\n                    \"area\": \"B\",\n                    \"zipcode\": \"B46 2EN\"\n                }\n            ],\n            \"id\": \"0a22bc23-0725-4289-b5f1-b47cdcc773ae\",\n            \"createdAt\": \"2024-05-21T14:08:43.132Z\",\n            \"updatedAt\": \"2024-05-21T14:15:31.525Z\"\n        },\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=270a00c378f92e96bb5821796c93b5d241ee90c4ec40e3df40893191c76d3607&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\",\n        \"councilRegisterationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/61bcb99d24f83852b13d69196d00919872a540ba6c8c7dace5f54638536d8f17df6ac01725d6c790fbb09d5a61880e4b4bd06389fbb11ea30bc16d5d45927de9.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=76290d4410e05ee03c0b99c736467f697a447977a97622364f341a8218772f77&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"hygieneRatingCertificate\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/a10c2a7edbc0ecf09d46ad27b885c76a49adc6d7dcc3b46f563e5b267c4fced40ec10fcc19f7b18dee97dbf2dc89dcbbb7127692a03b1f77e6b03838e2aafa88.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=d4ce07cd5cc3ddf1cc15b00228f0833f277c7a6e5468b55d6ba9bb7676a44342&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"certificationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/45e68eeb2ab410b5a1692e50eeeb377dbc00709826026dc986534e7a603a40b77f2910f78a3dd2574057e63f66e7027c9f132f4b44c6cf7b14f3191e29e5657b.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=0a4f3cf58a373b13f5c1922ab3f50e1487980e2d66db856fa745ce59d695fc89&X-Amz-SignedHeaders=host&x-id=GetObject\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid Id- Fetch Vendor By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d80d476-620e-493a-b847-a776fff6c0e4",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d82948d1-60bd-407f-bc8b-62e6b175cd46",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ad2ba7ff-b15b-4b7d-8221-c6a3"
										}
									]
								}
							},
							"response": [
								{
									"id": "436d9172-cb8d-4b73-9b38-d65de230f4bf",
									"name": "success_not_done_business_info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1133"
										},
										{
											"key": "ETag",
											"value": "W/\"46d-i6nD/aE9w3tQGWV8lIL7JlFM5JE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:06:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T12:47:07.312Z\",\n        \"business\": null,\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T150659Z&X-Amz-Expires=3600&X-Amz-Signature=5adbaafb58666c2d5734fb6858a63271e82a5594e6025002afd87c164c0339e3&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\"\n    }\n}"
								},
								{
									"id": "28613282-3eb3-4ccb-81eb-f7ad4f1251c0",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3285"
										},
										{
											"key": "ETag",
											"value": "W/\"cd5-BeslGZpYbCnwmUd1AlfA4aQVARE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:16:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T14:15:31.528Z\",\n        \"business\": {\n            \"name\": \"NexusCooks\",\n            \"description\": \"Best meals everywhere\",\n            \"rating\": 0,\n            \"ratingCount\": 0,\n            \"addresses\": [\n                {\n                    \"id\": \"5f968641-6a47-42c9-a8c0-c79a9f68d60a\",\n                    \"createdAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"updatedAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"longitude\": -1.67967,\n                    \"latitude\": 52.5329,\n                    \"addressLine\": \"10 Birmingham Road Coleshill, Birmingham Warwickshire\",\n                    \"area\": \"B\",\n                    \"zipcode\": \"B46 2EN\"\n                }\n            ],\n            \"id\": \"0a22bc23-0725-4289-b5f1-b47cdcc773ae\",\n            \"createdAt\": \"2024-05-21T14:08:43.132Z\",\n            \"updatedAt\": \"2024-05-21T14:15:31.525Z\"\n        },\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=270a00c378f92e96bb5821796c93b5d241ee90c4ec40e3df40893191c76d3607&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\",\n        \"councilRegisterationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/61bcb99d24f83852b13d69196d00919872a540ba6c8c7dace5f54638536d8f17df6ac01725d6c790fbb09d5a61880e4b4bd06389fbb11ea30bc16d5d45927de9.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=76290d4410e05ee03c0b99c736467f697a447977a97622364f341a8218772f77&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"hygieneRatingCertificate\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/a10c2a7edbc0ecf09d46ad27b885c76a49adc6d7dcc3b46f563e5b267c4fced40ec10fcc19f7b18dee97dbf2dc89dcbbb7127692a03b1f77e6b03838e2aafa88.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=d4ce07cd5cc3ddf1cc15b00228f0833f277c7a6e5468b55d6ba9bb7676a44342&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"certificationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/45e68eeb2ab410b5a1692e50eeeb377dbc00709826026dc986534e7a603a40b77f2910f78a3dd2574057e63f66e7027c9f132f4b44c6cf7b14f3191e29e5657b.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=0a4f3cf58a373b13f5c1922ab3f50e1487980e2d66db856fa745ce59d695fc89&X-Amz-SignedHeaders=host&x-id=GetObject\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Id- Fetch Vendor By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d80d476-620e-493a-b847-a776fff6c0e4",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "99070448-8d8e-4cb0-8d06-ee6dc920ed71",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "6ad032f4-7394-48e0-a957-e14574957087",
									"name": "success_not_done_business_info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1133"
										},
										{
											"key": "ETag",
											"value": "W/\"46d-i6nD/aE9w3tQGWV8lIL7JlFM5JE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:06:59 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T12:47:07.312Z\",\n        \"business\": null,\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T150659Z&X-Amz-Expires=3600&X-Amz-Signature=5adbaafb58666c2d5734fb6858a63271e82a5594e6025002afd87c164c0339e3&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\"\n    }\n}"
								},
								{
									"id": "659901a4-f14b-45d6-b039-a537e386f43f",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/vendors/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"vendors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3285"
										},
										{
											"key": "ETag",
											"value": "W/\"cd5-BeslGZpYbCnwmUd1AlfA4aQVARE\""
										},
										{
											"key": "Date",
											"value": "Tue, 21 May 2024 15:16:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Vendor fetched successfully\",\n    \"data\": {\n        \"id\": \"d2140472-5253-4e94-b622-ff8351af0b0b\",\n        \"createdAt\": \"2024-05-21T12:47:07.312Z\",\n        \"updatedAt\": \"2024-05-21T14:15:31.528Z\",\n        \"business\": {\n            \"name\": \"NexusCooks\",\n            \"description\": \"Best meals everywhere\",\n            \"rating\": 0,\n            \"ratingCount\": 0,\n            \"addresses\": [\n                {\n                    \"id\": \"5f968641-6a47-42c9-a8c0-c79a9f68d60a\",\n                    \"createdAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"updatedAt\": \"2024-05-21T14:09:49.681Z\",\n                    \"longitude\": -1.67967,\n                    \"latitude\": 52.5329,\n                    \"addressLine\": \"10 Birmingham Road Coleshill, Birmingham Warwickshire\",\n                    \"area\": \"B\",\n                    \"zipcode\": \"B46 2EN\"\n                }\n            ],\n            \"id\": \"0a22bc23-0725-4289-b5f1-b47cdcc773ae\",\n            \"createdAt\": \"2024-05-21T14:08:43.132Z\",\n            \"updatedAt\": \"2024-05-21T14:15:31.525Z\"\n        },\n        \"primaryUser\": {\n            \"id\": \"be83617d-3b35-4496-a9a9-01cd4348210b\",\n            \"createdAt\": \"2024-05-21T12:47:07.261Z\",\n            \"updatedAt\": \"2024-05-21T12:56:45.153Z\",\n            \"dob\": \"2000-05-29T23:00:00.000Z\",\n            \"email\": \"tayoosunkiyesi@gmail.com\",\n            \"emailVerified\": true,\n            \"gender\": null,\n            \"proofOfIdentification\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/2f012087f33707ffcc7b008633f6aa2d230c31e0ac2de45eed4f4b5861ebb809e1af68dc612c6bf2a5ae9a54452bc88a4209591591f826ec2331a8b8d4d7db7a.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=270a00c378f92e96bb5821796c93b5d241ee90c4ec40e3df40893191c76d3607&X-Amz-SignedHeaders=host&x-id=GetObject\",\n            \"firstName\": \"Temitayo\",\n            \"lastName\": \"Osunkiyesi\",\n            \"phone\": null,\n            \"lastLogin\": null,\n            \"phoneVerified\": false\n        },\n        \"status\": \"pending\",\n        \"councilRegisterationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/61bcb99d24f83852b13d69196d00919872a540ba6c8c7dace5f54638536d8f17df6ac01725d6c790fbb09d5a61880e4b4bd06389fbb11ea30bc16d5d45927de9.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=76290d4410e05ee03c0b99c736467f697a447977a97622364f341a8218772f77&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"hygieneRatingCertificate\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/a10c2a7edbc0ecf09d46ad27b885c76a49adc6d7dcc3b46f563e5b267c4fced40ec10fcc19f7b18dee97dbf2dc89dcbbb7127692a03b1f77e6b03838e2aafa88.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=d4ce07cd5cc3ddf1cc15b00228f0833f277c7a6e5468b55d6ba9bb7676a44342&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"certificationDocument\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/vendor-assets/45e68eeb2ab410b5a1692e50eeeb377dbc00709826026dc986534e7a603a40b77f2910f78a3dd2574057e63f66e7027c9f132f4b44c6cf7b14f3191e29e5657b.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240521%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240521T151611Z&X-Amz-Expires=3600&X-Amz-Signature=0a4f3cf58a373b13f5c1922ab3f50e1487980e2d66db856fa745ce59d695fc89&X-Amz-SignedHeaders=host&x-id=GetObject\"\n    }\n}"
								}
							]
						}
					],
					"id": "79895557-e494-4296-9727-ca204bc5c5d2"
				},
				{
					"name": "Update Vendor",
					"item": [
						{
							"name": "Update Vendor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62eae8f8-6d1c-48d1-a301-fdac6af6ea8b",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Vendor fetched successfully\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Vendor updated successfully');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bb940e2d-4006-4a7d-bd69-11b5313b20b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"inactive\" // \"active\" | \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminVendor}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Update Vendor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62eae8f8-6d1c-48d1-a301-fdac6af6ea8b",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1afae4a5-42d2-4f6f-b710-8f18fba5d8b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\" // \"active\" | \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminVendor}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Status - Update Vendor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62eae8f8-6d1c-48d1-a301-fdac6af6ea8b",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify status should not be empty\", function () {\r",
											"    pm.expect(pm.response.json().data.status).to.eql(\"status should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c584f17f-15b6-4af5-86d8-77ac6927b9fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"\" // \"active\" | \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminVendor}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Id - Update Vendor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62eae8f8-6d1c-48d1-a301-fdac6af6ea8b",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8d0bf60c-fe76-4c28-806b-3d05f4909d39",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\" // \"active\" | \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/vendors/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "7aabb0e6-e186-4900-a422-9669ef9a9e95"
				},
				{
					"name": "Reviews Copy",
					"item": [
						{
							"name": "Fetch Reviews",
							"id": "ad2d0cc6-52be-4cb8-9d23-6e1dda42f355",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec"
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/vendors/reviews",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										"reviews"
									],
									"query": [
										{
											"key": "filter[vendorId]",
											"value": null,
											"description": "The business ID of the vendor in question",
											"disabled": true
										},
										{
											"key": "filter[rating][gt]",
											"value": "2",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gt]",
											"value": "2024-06-06T23:00:00",
											"disabled": true
										},
										{
											"key": "filter[createdAt][lt]",
											"value": "2024-06-06T23:00:00",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Review",
							"id": "94d3aac9-127e-4842-9617-fe36f4eae125",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_access_token}}"
									}
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Vibes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/vendors/reviews/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"vendors",
										"reviews",
										":id"
									],
									"variable": [
										{
											"id": "1355d323-7a19-444d-b4ad-cb35ff09e618",
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "9d230a7b-e0fe-4a59-be4c-599747b853ca"
				},
				{
					"name": "Blacklist Vendor Copy",
					"id": "20e57e8d-522a-46c0-b356-d1bcda9ed7fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_access_token}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-request-source",
								"value": "ec"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"vibes\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/vendors/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"vendors",
								":id"
							],
							"variable": [
								{
									"id": "78254bbc-ddad-4d29-b8c1-c5a107de01b8",
									"key": "id",
									"value": "d2140472-5253-4e94-b622-ff8351af0b0b"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "9f9e6412-3fa2-4731-89f2-406c223553a7"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Fetch Customers",
					"item": [
						{
							"name": "Fetch Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "282ee08f-3b7d-4128-bcd0-0af3974331ff",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminCustomer = jsonData.data[0].id\r",
											"const customerCreatedAt = jsonData.data[0].createdAt\r",
											"\r",
											"pm.environment.set(\"adminCustomer\", adminCustomer)\r",
											"pm.environment.set(\"customerCreatedAt\", customerCreatedAt)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Customers fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0c34a2fc-bf5b-4598-899a-56bda1435cb6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/customers?filter[createdAt][gt]=2024-06-11",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers"
									],
									"query": [
										{
											"key": "limit",
											"value": "6",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "filter[q]",
											"value": "Temitayo",
											"description": "Searches by name and email",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "active",
											"description": "active",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gt]",
											"value": "2024-06-11",
											"description": "active"
										},
										{
											"key": "filter[createdAt][lt]",
											"value": "2024-06-05",
											"description": "active",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "By Status - Fetch Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "282ee08f-3b7d-4128-bcd0-0af3974331ff",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminCustomer = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"adminCustomer\", adminCustomer)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Customers fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "175b2ed8-deca-4a36-b5dc-321372a14cfa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/customers?filter[status]=active",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers"
									],
									"query": [
										{
											"key": "limit",
											"value": "6",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "filter[q]",
											"value": "t.osunk",
											"description": "Searches by name and email",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "active",
											"description": "active"
										},
										{
											"key": "filter[createdAt][gt]",
											"value": "2024-06-05",
											"description": "active",
											"disabled": true
										},
										{
											"key": "filter[createdAt][lt]",
											"value": "2024-06-05",
											"description": "active",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "By CreatedAt - Fetch Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "282ee08f-3b7d-4128-bcd0-0af3974331ff",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Customers fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bcc0cb74-6665-4c3c-aa5a-943d67b9b733",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/customers?filter[createdAt][gt]={{customerCreatedAt}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers"
									],
									"query": [
										{
											"key": "limit",
											"value": "6",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "filter[q]",
											"value": "t.osunk",
											"description": "Searches by name and email",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "active",
											"description": "active",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gt]",
											"value": "{{customerCreatedAt}}",
											"description": "active"
										},
										{
											"key": "filter[createdAt][lt]",
											"value": "2024-06-05",
											"description": "active",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Fetch Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "282ee08f-3b7d-4128-bcd0-0af3974331ff",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "729c4dd1-1f42-4cfa-89c3-b04f392afbe6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": "{{base_url}}/admin/customers"
							},
							"response": []
						}
					],
					"id": "227704e9-df18-461a-ad40-f9d96b7b0d8d"
				},
				{
					"name": "Fetch Customer By ID",
					"item": [
						{
							"name": "Fetch Customer By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2abfb3f-ef20-4e76-8ad6-1d96ca37ac46",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Fetched customer successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched customer successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify data returns customers\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"object\").and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "831ff6af-f5f3-4817-b5d9-cb6936240c69",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminCustomer}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Fetch Customer By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2abfb3f-ef20-4e76-8ad6-1d96ca37ac46",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "963a2dbd-363f-4a9d-ad37-79b3a580c668",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminCustomer}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Id - Fetch Customer By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2abfb3f-ef20-4e76-8ad6-1d96ca37ac46",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b654fdbd-fd58-4bd9-ad34-b6af2359bc99",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "989aa366-827b-4bb3-be2c-e8c8c65f8652"
				},
				{
					"name": "Update Customer",
					"item": [
						{
							"name": "Update Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e223c62-593e-4fe0-b491-b55ef80e4ebd",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customer updated successfully.\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Customer updated successfully\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d26c7225-62c8-4a69-bc37-4591d57d3d24",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\" // \"active\" | \"inactive\",\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminCustomer}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Update Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96423181-4021-4f65-80e6-a0daf61e834b",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "88adb46c-0c46-4f37-933b-e3ff5fa4ff7d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"inactive\" // \"active\" | \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "446b1b72-61ea-4313-8d19-172dd768b755"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Id - Update Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96423181-4021-4f65-80e6-a0daf61e834b",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "98e1fccb-21f0-4ba4-b320-88cfba65a375",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"inactive\" // \"active\" | \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No status - Update Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96423181-4021-4f65-80e6-a0daf61e834b",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify status should not be empty\", function () {\r",
											"    pm.expect(pm.response.json().data.status).to.eql(\"status should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1aef8498-8e43-4464-8160-89c09a91d9fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"\" // \"active\" | \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminCustomer}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "e3ff8413-7f43-458d-8604-0ba3c62e4e8d"
				},
				{
					"name": "Fetch Customer Orders",
					"item": [
						{
							"name": "Fetch Customer Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad218002-08a2-481a-9e71-21f24fdc95c3",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminCustomerOrder = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"adminCustomerOrder\", adminCustomerOrder)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Fetched customer orders successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched customer orders successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1e89df41-da5e-4386-b6d3-2852810b32ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id/orders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id",
										"orders"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminCustomer}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Fetch Customer Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad218002-08a2-481a-9e71-21f24fdc95c3",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0f758a6f-3ed2-445c-a946-b819e5eef947",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id/orders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id",
										"orders"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminCustomer}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Id - Fetch Customer Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad218002-08a2-481a-9e71-21f24fdc95c3",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "24e8d3cb-0e0e-4ecc-bb3d-357f83b8fa53",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id/orders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id",
										"orders"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "d4187fe9-e730-49de-98cf-dc479181dde7"
				},
				{
					"name": "Blacklist Customer",
					"item": [
						{
							"name": "Blacklist Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9560719-a133-4a06-bac3-c9d34cf0501c",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Fetched customer successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched customer successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify data returns customers\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"object\").and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "46f96932-71f8-4b7c-b5c3-49f3fd68b946",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Rude\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/customers/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"customers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{adminCustomer}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "bdd764f0-38ec-4696-82bb-5572d1d83261"
				},
				{
					"name": "Blacklist Customer",
					"id": "6d9c1d80-83c9-42b5-87ba-5806643d1da9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/customers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"customers",
								":id"
							],
							"variable": [
								{
									"id": "3befb522-3609-4df3-b24d-f3edd7725755",
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer Copy",
					"id": "52005a8f-8d24-45a2-b95f-2838c28827bd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"Vibes\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/customers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"customers",
								":id"
							],
							"variable": [
								{
									"id": "6eadfdfd-9754-404b-a6e2-25613265ebef",
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "949d2409-b645-43ea-bf5f-5481ca605c4e"
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Fetch Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5550fdd-5071-4ab1-b938-25ee4a649a27",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"const adminOrder = jsonData.data[0].id\r",
									"\r",
									"pm.environment.set(\"adminOrder\", adminOrder)\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response body property\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.status).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.data).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 'success'\", function () {\r",
									"    pm.expect(jsonData.status).to.eql('success');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Fetched orders successfully\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"Fetched orders successfully\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4fb0a05a-9463-4248-b6a7-37abe2577c1d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{adminAccessToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"orders"
							],
							"query": [
								{
									"key": "filter[status]",
									"value": null,
									"disabled": true
								},
								{
									"key": "filter[q]",
									"value": null,
									"disabled": true
								},
								{
									"key": "filter[createdAt]",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a202ee52-92ca-4a5d-89e2-9aa98aef5f69"
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Fetch Transeactions",
					"item": [
						{
							"name": "Fetch Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10d7ebf3-f68f-470a-8aa1-81f5b18c733f",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const transactionRef = jsonData.data[0].reference\r",
											"\r",
											"pm.environment.set(\"transactionRef\", transactionRef)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched transactions successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8fd3aae6-1ded-4088-8618-dc9800cbd3a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/transactions?filter[customerId]=98f1694d-85ee-4eae-932c-3640ed13294b",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"transactions"
									],
									"query": [
										{
											"key": "filter[orgId]",
											"value": "0077edff-24f4-4397-83c9-05d5d4198b26",
											"disabled": true
										},
										{
											"key": "filter[customerId]",
											"value": "98f1694d-85ee-4eae-932c-3640ed13294b"
										},
										{
											"key": "filter[status]",
											"value": "success",
											"description": "pending | success | failed |",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "purchase",
											"description": "purchase | commission | payout",
											"disabled": true
										},
										{
											"key": "filter[reference]",
											"value": "ec_ref_f6425b875a",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gte]",
											"value": "2024-05-31T23:00:00",
											"disabled": true
										},
										{
											"key": "filter[createdAt][lte]",
											"value": "2024-06-06T23:00:00",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "2ec3ca40-3ec9-43f0-8600-c2c427cbd95f",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/transactions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1352"
										},
										{
											"key": "ETag",
											"value": "W/\"548-OrKrwStXNfcLtzebKaSskuzM36g\""
										},
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2024 10:50:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched transactions successfully\",\n    \"data\": [\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:31 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f6425b875a\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d4b6f907-ff00-4ce4-8818-1f22ba5a915d\",\n            \"createdAt\": \"2024-06-06T03:31:45.821Z\",\n            \"updatedAt\": \"2024-06-06T03:31:45.821Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:28 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f34ff1ae3d\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"11674a26-fa39-4b09-9f82-d1c8420d5023\",\n            \"createdAt\": \"2024-06-06T03:28:10.143Z\",\n            \"updatedAt\": \"2024-06-06T03:28:10.143Z\"\n        },\n        {\n            \"amount\": 71.95,\n            \"description\": null,\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_6d748e5ca9\",\n            \"status\": \"pending\",\n            \"type\": \"purchase\",\n            \"id\": \"f2676752-2c39-48ad-a961-af2003fbc208\",\n            \"createdAt\": \"2024-06-06T03:26:19.612Z\",\n            \"updatedAt\": \"2024-06-06T03:26:19.612Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:17 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_ce82f585bc\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d7a8b461-385f-4b74-a96e-bd50ef2826cc\",\n            \"createdAt\": \"2024-06-06T03:17:46.777Z\",\n            \"updatedAt\": \"2024-06-06T03:17:46.777Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 4,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "By CustomerId - Fetch Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10d7ebf3-f68f-470a-8aa1-81f5b18c733f",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const transactionRef = jsonData.data[0].reference\r",
											"\r",
											"pm.environment.set(\"transactionRef\", transactionRef)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched transactions successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1f801fd4-ae11-47e0-b61d-cca0cca8a709",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/transactions?filter[customerId]=98f1694d-85ee-4eae-932c-3640ed13294b",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"transactions"
									],
									"query": [
										{
											"key": "filter[orgId]",
											"value": "0077edff-24f4-4397-83c9-05d5d4198b26",
											"disabled": true
										},
										{
											"key": "filter[customerId]",
											"value": "98f1694d-85ee-4eae-932c-3640ed13294b"
										},
										{
											"key": "filter[status]",
											"value": "success",
											"description": "pending | success | failed |",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "purchase",
											"description": "purchase | commission | payout",
											"disabled": true
										},
										{
											"key": "filter[reference]",
											"value": "ec_ref_f6425b875a",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gte]",
											"value": "2024-05-31T23:00:00",
											"disabled": true
										},
										{
											"key": "filter[createdAt][lte]",
											"value": "2024-06-06T23:00:00",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "9bc67846-8df0-4316-b758-b7141fc7b4c0",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/transactions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1352"
										},
										{
											"key": "ETag",
											"value": "W/\"548-OrKrwStXNfcLtzebKaSskuzM36g\""
										},
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2024 10:50:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched transactions successfully\",\n    \"data\": [\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:31 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f6425b875a\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d4b6f907-ff00-4ce4-8818-1f22ba5a915d\",\n            \"createdAt\": \"2024-06-06T03:31:45.821Z\",\n            \"updatedAt\": \"2024-06-06T03:31:45.821Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:28 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f34ff1ae3d\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"11674a26-fa39-4b09-9f82-d1c8420d5023\",\n            \"createdAt\": \"2024-06-06T03:28:10.143Z\",\n            \"updatedAt\": \"2024-06-06T03:28:10.143Z\"\n        },\n        {\n            \"amount\": 71.95,\n            \"description\": null,\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_6d748e5ca9\",\n            \"status\": \"pending\",\n            \"type\": \"purchase\",\n            \"id\": \"f2676752-2c39-48ad-a961-af2003fbc208\",\n            \"createdAt\": \"2024-06-06T03:26:19.612Z\",\n            \"updatedAt\": \"2024-06-06T03:26:19.612Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:17 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_ce82f585bc\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d7a8b461-385f-4b74-a96e-bd50ef2826cc\",\n            \"createdAt\": \"2024-06-06T03:17:46.777Z\",\n            \"updatedAt\": \"2024-06-06T03:17:46.777Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 4,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "By Status - Fetch Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da50ed43-3625-41c4-b76f-f7afdb42e17a",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminCustomer = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"adminCustomer\", adminCustomer)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched transactions successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "70127065-b9cf-420e-ad78-5757deacba2e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/transactions?filter[status]=pending",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"transactions"
									],
									"query": [
										{
											"key": "filter[orgId]",
											"value": "0b1d86b7-7706-4a7d-be3a-3cdf15422f31",
											"disabled": true
										},
										{
											"key": "filter[customerId]",
											"value": "0b1d86b7-7706-4a7d-be3a-3cdf15422f31",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "pending",
											"description": "pending | success | failed |"
										},
										{
											"key": "filter[type]",
											"value": "purchase",
											"description": "purchase | commission | payout",
											"disabled": true
										},
										{
											"key": "filter[reference]",
											"value": "ec_ref_f6425b875a",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gte]",
											"value": "2024-05-31T23:00:00",
											"disabled": true
										},
										{
											"key": "filter[createdAt][lte]",
											"value": "2024-06-06T23:00:00",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "60b7963a-13b0-4a27-9eab-189e2583c129",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/transactions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1352"
										},
										{
											"key": "ETag",
											"value": "W/\"548-OrKrwStXNfcLtzebKaSskuzM36g\""
										},
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2024 10:50:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched transactions successfully\",\n    \"data\": [\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:31 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f6425b875a\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d4b6f907-ff00-4ce4-8818-1f22ba5a915d\",\n            \"createdAt\": \"2024-06-06T03:31:45.821Z\",\n            \"updatedAt\": \"2024-06-06T03:31:45.821Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:28 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f34ff1ae3d\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"11674a26-fa39-4b09-9f82-d1c8420d5023\",\n            \"createdAt\": \"2024-06-06T03:28:10.143Z\",\n            \"updatedAt\": \"2024-06-06T03:28:10.143Z\"\n        },\n        {\n            \"amount\": 71.95,\n            \"description\": null,\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_6d748e5ca9\",\n            \"status\": \"pending\",\n            \"type\": \"purchase\",\n            \"id\": \"f2676752-2c39-48ad-a961-af2003fbc208\",\n            \"createdAt\": \"2024-06-06T03:26:19.612Z\",\n            \"updatedAt\": \"2024-06-06T03:26:19.612Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:17 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_ce82f585bc\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d7a8b461-385f-4b74-a96e-bd50ef2826cc\",\n            \"createdAt\": \"2024-06-06T03:17:46.777Z\",\n            \"updatedAt\": \"2024-06-06T03:17:46.777Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 4,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "By Type - Fetch Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da50ed43-3625-41c4-b76f-f7afdb42e17a",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminCustomer = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"adminCustomer\", adminCustomer)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched transactions successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "02efa478-ac4c-4d99-9f0d-5270c30d40b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/transactions?filter[type]=purchase",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"transactions"
									],
									"query": [
										{
											"key": "filter[orgId]",
											"value": "0b1d86b7-7706-4a7d-be3a-3cdf15422f31",
											"disabled": true
										},
										{
											"key": "filter[customerId]",
											"value": "0b1d86b7-7706-4a7d-be3a-3cdf15422f31",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "pending",
											"description": "pending | success | failed |",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "purchase",
											"description": "purchase | commission | payout"
										},
										{
											"key": "filter[reference]",
											"value": "ec_ref_f6425b875a",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gte]",
											"value": "2024-05-31T23:00:00",
											"disabled": true
										},
										{
											"key": "filter[createdAt][lte]",
											"value": "2024-06-06T23:00:00",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "f723b543-fbf2-4738-8c6e-89e6a6c3e0d1",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/transactions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1352"
										},
										{
											"key": "ETag",
											"value": "W/\"548-OrKrwStXNfcLtzebKaSskuzM36g\""
										},
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2024 10:50:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched transactions successfully\",\n    \"data\": [\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:31 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f6425b875a\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d4b6f907-ff00-4ce4-8818-1f22ba5a915d\",\n            \"createdAt\": \"2024-06-06T03:31:45.821Z\",\n            \"updatedAt\": \"2024-06-06T03:31:45.821Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:28 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f34ff1ae3d\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"11674a26-fa39-4b09-9f82-d1c8420d5023\",\n            \"createdAt\": \"2024-06-06T03:28:10.143Z\",\n            \"updatedAt\": \"2024-06-06T03:28:10.143Z\"\n        },\n        {\n            \"amount\": 71.95,\n            \"description\": null,\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_6d748e5ca9\",\n            \"status\": \"pending\",\n            \"type\": \"purchase\",\n            \"id\": \"f2676752-2c39-48ad-a961-af2003fbc208\",\n            \"createdAt\": \"2024-06-06T03:26:19.612Z\",\n            \"updatedAt\": \"2024-06-06T03:26:19.612Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:17 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_ce82f585bc\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d7a8b461-385f-4b74-a96e-bd50ef2826cc\",\n            \"createdAt\": \"2024-06-06T03:17:46.777Z\",\n            \"updatedAt\": \"2024-06-06T03:17:46.777Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 4,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "By TransactionRef - Fetch Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da50ed43-3625-41c4-b76f-f7afdb42e17a",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const adminCustomer = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"adminCustomer\", adminCustomer)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Fetched transactions successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Customers fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "10996191-5006-44bf-bcb0-cf680f90cfc8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/transactions?filter[reference]={{transactionRef}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"transactions"
									],
									"query": [
										{
											"key": "filter[orgId]",
											"value": "0b1d86b7-7706-4a7d-be3a-3cdf15422f31",
											"disabled": true
										},
										{
											"key": "filter[customerId]",
											"value": "0b1d86b7-7706-4a7d-be3a-3cdf15422f31",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "pending",
											"description": "pending | success | failed |",
											"disabled": true
										},
										{
											"key": "filter[type]",
											"value": "purchase",
											"description": "purchase | commission | payout",
											"disabled": true
										},
										{
											"key": "filter[reference]",
											"value": "{{transactionRef}}"
										},
										{
											"key": "filter[createdAt][gte]",
											"value": "2024-06-05T18:11:21",
											"disabled": true
										},
										{
											"key": "filter[createdAt][lte]",
											"value": "2024-06-05T18:11:21.256Z",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "9be63d86-4a4b-4774-b398-d0131c829d72",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/transactions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1352"
										},
										{
											"key": "ETag",
											"value": "W/\"548-OrKrwStXNfcLtzebKaSskuzM36g\""
										},
										{
											"key": "Date",
											"value": "Thu, 06 Jun 2024 10:50:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched transactions successfully\",\n    \"data\": [\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:31 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f6425b875a\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d4b6f907-ff00-4ce4-8818-1f22ba5a915d\",\n            \"createdAt\": \"2024-06-06T03:31:45.821Z\",\n            \"updatedAt\": \"2024-06-06T03:31:45.821Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:28 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_f34ff1ae3d\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"11674a26-fa39-4b09-9f82-d1c8420d5023\",\n            \"createdAt\": \"2024-06-06T03:28:10.143Z\",\n            \"updatedAt\": \"2024-06-06T03:28:10.143Z\"\n        },\n        {\n            \"amount\": 71.95,\n            \"description\": null,\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_6d748e5ca9\",\n            \"status\": \"pending\",\n            \"type\": \"purchase\",\n            \"id\": \"f2676752-2c39-48ad-a961-af2003fbc208\",\n            \"createdAt\": \"2024-06-06T03:26:19.612Z\",\n            \"updatedAt\": \"2024-06-06T03:26:19.612Z\"\n        },\n        {\n            \"amount\": 10,\n            \"description\": \"EatCheffie payout to NexusCooks on June 6, 2024 5:17 AM\",\n            \"paymentConfirmationDate\": null,\n            \"reference\": \"ec_ref_ce82f585bc\",\n            \"status\": \"pending\",\n            \"type\": \"payout\",\n            \"id\": \"d7a8b461-385f-4b74-a96e-bd50ef2826cc\",\n            \"createdAt\": \"2024-06-06T03:17:46.777Z\",\n            \"updatedAt\": \"2024-06-06T03:17:46.777Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 4,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						}
					],
					"id": "d0f4d140-dd2a-406a-97cd-f64852c2422a"
				}
			],
			"id": "38b17ddf-e428-4fc7-8acf-5b24fab7662f"
		},
		{
			"name": "Promos",
			"item": [
				{
					"name": "Create Promo",
					"item": [
						{
							"name": "Create Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88674a66-803f-4d5f-b08e-6f26b74d59a3",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"//const adminResetPasswordToken = jsonData.data.resetPasswordToken\r",
											"\r",
											"//pm.environment.set(\"adminResetPasswordToken\", adminResetPasswordToken)\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Status code name has 'Created'\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Successfully created promo offer.\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Successfully created promo offer.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "59a0924d-67af-4af5-9629-5a83e6ee364c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Vibes\",\n    \"description\": \"Description\",\n    \"status\": \"active\",\n    \"type\": \"user_activity\", // promo_code | user_activity\n    \"maxUseCount\": 100,\n    \"discountType\": \"percentage\", // percentage | flat \n    \"discount\": 5,\n    \"startDate\": \"2024-06-04\",\n    \"endDate\": \"2024-06-31\",\n   //\"promoCode\": \"JUNE12\" // For promo_code type promos\n\"activityType\": \"transaction\", // For user_activity promo type. For example if you want it to kick in for users with 10 transactions you will set this to transaction and activityCount to 10\n    \"activityCount\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/admin/promo"
							},
							"response": []
						},
						{
							"name": "No Auth - Create Promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88674a66-803f-4d5f-b08e-6f26b74d59a3",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "06ad528c-9c6c-4f94-b88b-35dd418c60cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Vibes\",\n    \"description\": \"Description\",\n    \"status\": \"active\",\n    \"type\": \"promo_code\", // promo_code | user_activity\n    \"maxUseCount\": 100,\n    \"discountType\": \"percentage\", // percentage | flat \n    \"discount\": 5,\n    \"startDate\": \"2024-06-04\",\n    \"endDate\": \"2024-06-31\",\n   \"promoCode\": \"1235SWING\" // For promo_code type promos\n   // \"activityType\": \"transaction\", // For user_activity promo type. For example if you want it to kick in for users with 10 transactions you will set this to transaction and activityCount to 10\n   //  \"activityCount\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/admin/promo"
							},
							"response": []
						}
					],
					"id": "a1fd63c3-ef16-4f60-a026-722b4c7c5931"
				},
				{
					"name": "List Promos",
					"item": [
						{
							"name": "List Promos",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "99ebcce2-e0b7-4bb8-aae7-4304032e6ed0",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const promoId = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"promoId\", promoId)\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Promos fetched successfully\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Promos fetched successfully');\r",
											"});\r",
											"pm.test(\"Verify that data is a string\", function () {\r",
											"    pm.expect(jsonData.data).to.be.an('array').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a0237d29-07ba-424f-83ef-0c768d70470a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/promo",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"promo"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "promo_code",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "active",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gt]",
											"value": "2024-05-31",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - List Promos",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "99ebcce2-e0b7-4bb8-aae7-4304032e6ed0",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "dc4e216e-c607-42c7-8b01-8bea35c7eea8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/promo",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"promo"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "promo_code",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "active",
											"disabled": true
										},
										{
											"key": "filter[createdAt][gt]",
											"value": "2024-05-31",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "b7e0b55d-d18b-4e1d-b38e-a4fccb9bf1c5"
				},
				{
					"name": "Get Promo By ID",
					"item": [
						{
							"name": "Get Promo By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "011d756d-1ed4-4653-932f-f6b397204e48",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"/*\r",
											"const promoId = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"promoId\", promoId)\r",
											"*/\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Promos fetched successfully\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Promo fetched successfully');\r",
											"});\r",
											"pm.test(\"Verify that data is a string\", function () {\r",
											"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "606fb040-3194-4a44-895b-128481a38cd7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/promo/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"promo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{promoId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Get Promo By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a619c396-e1ca-4da9-ace1-5e76425ba6ba",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a3472797-3ded-4fe8-aba1-ef42a00d0904",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/admin/promo/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"promo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "26c580f1-bec0-4699-8766-a4a86d3bf98b"
				},
				{
					"name": "Update Promo",
					"item": [
						{
							"name": "Update Promo",
							"id": "151d37bd-20e5-489b-ba9e-835b59bf1490",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Description\",\n    \"status\": \"active\",\n    \"maxUseCount\": 100,\n    \"discount\": 5,\n    \"startDate\": \"2024-05-31\",\n    \"endDate\": \"2024-05-31\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/admin/promo/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"promo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "0ca65485-a034-43de-a227-0d30a6bd7e84"
				},
				{
					"name": "Delete Promo",
					"id": "6d9ffed6-7b65-425b-9011-1b71c660b889",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{adminAccessToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/promo/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"promo",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a217070f-88ed-4c58-b0c2-167ca5344264"
		},
		{
			"name": "Builder",
			"item": [
				{
					"name": "Create Banner",
					"item": [
						{
							"name": "Create Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11708558-6fe3-48ad-95e0-4507ca9f7719",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Status code name has 'Created'\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Banner Success Message.\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Banner created successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4df5ba16-c7c7-4393-a787-f22dc8a1aa13",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner name",
											"type": "text"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "d73jcv9bF/Screenshot (14).png"
										}
									]
								},
								"url": "{{base_url}}/admin/builder/banner"
							},
							"response": [
								{
									"id": "b6fa1715-bca9-4418-818a-7af159126bb7",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Banner name",
													"type": "text"
												},
												{
													"key": "status",
													"value": "active",
													"type": "text"
												},
												{
													"key": "images",
													"type": "file",
													"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
												}
											]
										},
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "45"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "ETag",
											"value": "W/\"4b-gJMXqgyP/40zynr+VNZkJRp6Yzo\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:43:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Banner created successfully\"\n}"
								}
							]
						},
						{
							"name": "Empty fields - Create Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11708558-6fe3-48ad-95e0-4507ca9f7719",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify fields should not be empty\", function () {\r",
											"    pm.expect(pm.response.json().data.title).to.eql(\"title should not be empty\");\r",
											"        pm.expect(pm.response.json().data.status).to.eql(\"status should not be empty\");\r",
											"\r",
											"  \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a2968806-46e6-4d68-a8a6-fb8163c3b040",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner name",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "active",
											"type": "text",
											"disabled": true
										},
										{
											"key": "images",
											"type": "file",
											"value": null,
											"disabled": true
										}
									]
								},
								"url": "{{base_url}}/admin/builder/banner"
							},
							"response": [
								{
									"id": "49cab42c-2ab9-45c3-a78f-aa396c7bc76b",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Banner name",
													"type": "text"
												},
												{
													"key": "status",
													"value": "active",
													"type": "text"
												},
												{
													"key": "images",
													"type": "file",
													"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
												}
											]
										},
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "45"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "ETag",
											"value": "W/\"4b-gJMXqgyP/40zynr+VNZkJRp6Yzo\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:43:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Banner created successfully\"\n}"
								}
							]
						},
						{
							"name": "No Auth - Create Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee17584b-dd6e-4e82-9541-27af37d9b6da",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "62d049de-7442-4082-9300-95f343b0e18e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner name",
											"type": "text"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										}
									]
								},
								"url": "{{base_url}}/admin/builder/banner"
							},
							"response": [
								{
									"id": "06be83e2-ba12-411c-807d-8a33d4c3c0d1",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Banner name",
													"type": "text"
												},
												{
													"key": "status",
													"value": "active",
													"type": "text"
												},
												{
													"key": "images",
													"type": "file",
													"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
												}
											]
										},
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "45"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "ETag",
											"value": "W/\"4b-gJMXqgyP/40zynr+VNZkJRp6Yzo\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:43:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Banner created successfully\"\n}"
								}
							]
						}
					],
					"id": "d9f7c71f-e50e-4609-b677-8e79bb55b093"
				},
				{
					"name": "Create Campaign",
					"item": [
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c96ef97-0dae-4340-a11b-b9446e9471de",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"//const adminResetPasswordToken = jsonData.data.resetPasswordToken\r",
											"\r",
											"//pm.environment.set(\"adminResetPasswordToken\", adminResetPasswordToken)\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Status code name has 'Created'\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Campaign created successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Campaign created successfully\");\r",
											"});\r",
											"pm.test(\"Verify data returns banner information\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.a(\"object\").and.not.be.empty;\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7b3d627c-ef3f-43f2-9f3b-2ceedf4f3623",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner name",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Banner description",
											"type": "text"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "Vbeo5wE1V/Screenshot (14).png"
										}
									]
								},
								"url": "{{base_url}}/admin/builder/campaign"
							},
							"response": [
								{
									"id": "33f032fd-c17d-454c-8ece-57b820bf4195",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Banner name",
													"type": "text"
												},
												{
													"key": "status",
													"value": "active",
													"type": "text"
												},
												{
													"key": "images",
													"type": "file",
													"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
												}
											]
										},
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "45"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "ETag",
											"value": "W/\"4b-gJMXqgyP/40zynr+VNZkJRp6Yzo\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:43:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Campaign created successfully\"\n}"
								}
							]
						},
						{
							"name": "Empty fields - Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c96ef97-0dae-4340-a11b-b9446e9471de",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify fields should not be empty\", function () {\r",
											"    pm.expect(pm.response.json().data.title).to.eql(\"title should not be empty\");\r",
											"        pm.expect(pm.response.json().data.status).to.eql(\"status should not be empty\");\r",
											"\r",
											"  \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "98a1d974-40a6-4f4c-96c1-ba81f6cfa2ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner name",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "Banner description",
											"type": "text",
											"disabled": true
										},
										{
											"key": "status",
											"value": "active",
											"type": "text",
											"disabled": true
										},
										{
											"key": "images",
											"type": "file",
											"value": null,
											"disabled": true
										}
									]
								},
								"url": "{{base_url}}/admin/builder/campaign"
							},
							"response": [
								{
									"id": "60f81b2e-0902-41a4-8f9f-92da6fdacf9f",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Banner name",
													"type": "text"
												},
												{
													"key": "status",
													"value": "active",
													"type": "text"
												},
												{
													"key": "images",
													"type": "file",
													"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
												}
											]
										},
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "45"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "ETag",
											"value": "W/\"4b-gJMXqgyP/40zynr+VNZkJRp6Yzo\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:43:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Campaign created successfully\"\n}"
								}
							]
						},
						{
							"name": "No Auth - Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "effb350d-4b46-4d11-a8f3-300295436d4f",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bd8d8ff5-5b0e-4519-8284-5d0d4daf78e5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner name",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Banner description",
											"type": "text"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										}
									]
								},
								"url": "{{base_url}}/admin/builder/campaign"
							},
							"response": [
								{
									"id": "b281144b-cedf-4ebb-b950-87b474938692",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "title",
													"value": "Banner name",
													"type": "text"
												},
												{
													"key": "status",
													"value": "active",
													"type": "text"
												},
												{
													"key": "images",
													"type": "file",
													"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
												}
											]
										},
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "45"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "75"
										},
										{
											"key": "ETag",
											"value": "W/\"4b-gJMXqgyP/40zynr+VNZkJRp6Yzo\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:43:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Campaign created successfully\"\n}"
								}
							]
						}
					],
					"id": "578b09fc-88f5-41b6-af50-fd534b3db1f0"
				},
				{
					"name": "Fetch Banners",
					"item": [
						{
							"name": "Fetch Banners",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bee4a6e0-0149-4ca8-b1bc-6856b22b1559",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const bannerId = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"bannerId\", bannerId)\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that banners fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"banners fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2e673653-b3d5-4561-a33a-f398ad154300",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": "{{base_url}}/admin/builder/banner"
							},
							"response": [
								{
									"id": "deebce06-4c33-44ed-a439-0ba61cfbf976",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "59"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-s/3+OTvy8iwIcJ22v43i6J7nhBk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:45:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banners fetched successfully\",\n    \"data\": [\n        {\n            \"title\": \"Banner name\",\n            \"description\": null,\n            \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n            \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n            \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n            \"images\": [\n                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/875a1a42ea9330fcd40a9ebb49e027b0f0d95b3d55b43bddd0baa33d1740960edeaba403b9ba20dcf0968e09c276ac97e364b525b0b317fca277ed4ee796c615.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240602%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240602T194955Z&X-Amz-Expires=3600&X-Amz-Signature=0232ca26e1a2fdc14b30d1513f0a809d74175f3b97f21fdc88d37e83a40d4951&X-Amz-SignedHeaders=host&x-id=GetObject\"\n            ],\n            \"status\": \"active\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Fetch Banners",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e12c941-d8c0-4660-91e7-09e060afdbc4",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d2e2a918-718d-452e-8a65-5aac5bc78bb0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": "{{base_url}}/admin/builder/banner"
							},
							"response": [
								{
									"id": "9a7cdf56-2016-4f8a-b01d-8b6c6da4d4cf",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "59"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-s/3+OTvy8iwIcJ22v43i6J7nhBk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:45:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banners fetched successfully\",\n    \"data\": [\n        {\n            \"title\": \"Banner name\",\n            \"description\": null,\n            \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n            \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n            \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n            \"images\": [\n                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/875a1a42ea9330fcd40a9ebb49e027b0f0d95b3d55b43bddd0baa33d1740960edeaba403b9ba20dcf0968e09c276ac97e364b525b0b317fca277ed4ee796c615.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240602%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240602T194955Z&X-Amz-Expires=3600&X-Amz-Signature=0232ca26e1a2fdc14b30d1513f0a809d74175f3b97f21fdc88d37e83a40d4951&X-Amz-SignedHeaders=host&x-id=GetObject\"\n            ],\n            \"status\": \"active\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						}
					],
					"id": "1403edee-1467-476a-b7ac-eb1907221cd0"
				},
				{
					"name": "Fetch Campaigns",
					"item": [
						{
							"name": "Fetch Campaigns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ff3ab7b-5a8a-4d5f-bf6e-8c4bcee9c038",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"const campaignId = jsonData.data[0].id\r",
											"\r",
											"pm.environment.set(\"campaignId\", campaignId)\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that banners fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"campaigns fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f9d56bf2-74b4-4b9c-99a6-8b6eca479bfe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": "{{base_url}}/admin/builder/campaign"
							},
							"response": [
								{
									"id": "389b2ae6-4edc-44b1-9893-071f6c4d16c2",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "59"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-s/3+OTvy8iwIcJ22v43i6J7nhBk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:45:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaigns fetched successfully\",\n    \"data\": [\n        {\n            \"title\": \"Banner name\",\n            \"description\": null,\n            \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n            \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n            \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n            \"status\": \"active\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Fetch Campaigns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ff3ab7b-5a8a-4d5f-bf6e-8c4bcee9c038",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "188e2b90-301e-4197-a715-4cc6211a942d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": "{{base_url}}/admin/builder/campaign"
							},
							"response": [
								{
									"id": "e7a74188-793c-47e3-bea1-fac7d6d7f3d5",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/admin/builder/banner"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "59"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-s/3+OTvy8iwIcJ22v43i6J7nhBk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:45:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaigns fetched successfully\",\n    \"data\": [\n        {\n            \"title\": \"Banner name\",\n            \"description\": null,\n            \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n            \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n            \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n            \"status\": \"active\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						}
					],
					"id": "ca29e3e8-d7b0-44d6-8b3e-8f862552df0f"
				},
				{
					"name": "Fetch Banner By ID",
					"item": [
						{
							"name": "Fetch Banner By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2210db21-26fb-419c-a1a6-f5079febd155",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that banner fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"banner fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "52f79e6b-c0e0-4780-9391-076e8c17738b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{bannerId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "8489394c-a4b9-4ca1-ada5-d09656311fee",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid Id - Fetch Banner By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c68d82e-2d85-40a2-a756-9067542706ec",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1cfd3893-0827-4116-8b97-e8225a47d0e5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee0"
										}
									]
								}
							},
							"response": [
								{
									"id": "21efee2d-0a6c-4c96-b22b-491ffa230d07",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Id - Fetch Banner By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c68d82e-2d85-40a2-a756-9067542706ec",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "efc2e96f-a08a-452b-86ee-912db1e18685",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "d1ae8189-2d13-4418-818f-de312efd9885",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Fetch Banner By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba04d99f-35b0-4137-ba46-6df166b033d6",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3686534e-4c4b-4140-934a-337e907cc9a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c95f1"
										}
									]
								}
							},
							"response": [
								{
									"id": "585323c9-5345-4149-9519-c52625c104a9",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						}
					],
					"id": "6170d284-25b5-44f9-9c91-2bedfb5ee707"
				},
				{
					"name": "Fetch Campaign By ID",
					"item": [
						{
							"name": "Fetch Campaign By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "952927ce-a664-4f21-b421-bbb189c08392",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that campaign fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"campaign fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "533c12c2-96c1-424b-96b8-d526bf71f236",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{campaignId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "41fdece9-89b9-4670-b9cf-0f65e63c85e7",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid Id - Fetch Campaign By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f3d3047-01f6-46d6-856f-9042828d08e7",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "272d155d-6eff-4ea0-99a9-72f3f810aa09",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05"
										}
									]
								}
							},
							"response": [
								{
									"id": "3d3f365e-1106-4673-9af9-9e1c485e5c50",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Id - Fetch Campaign By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f3d3047-01f6-46d6-856f-9042828d08e7",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d02624e1-19b1-4518-a8ed-6c74b5b754f1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "81f807ed-7adc-4c77-abf7-21769ec99b2c",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Fetch Campaign By ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f3d3047-01f6-46d6-856f-9042828d08e7",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e8ac1e7e-df80-4ed2-88eb-de6b950d857d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05"
										}
									]
								}
							},
							"response": [
								{
									"id": "16d7a63c-83ea-46e7-aa2c-53024d767b81",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner fetched successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						}
					],
					"id": "ed045f4a-4d6d-40c1-8274-51822eea1533"
				},
				{
					"name": "Update Banner",
					"item": [
						{
							"name": "Update Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f05929ba-05a0-4618-9060-8b79dc7c7bf6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that campaign fetched successfully\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"campaign fetched successfully\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "22fa2b99-ba8e-411c-8800-511f13120a93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Vendor",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "rUrfNs9pI/Screenshot (14).png"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{bannerId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "5bb35306-426c-41e9-8aa3-cf2c648319bb",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid Id - Update Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26a56b62-b0fb-47f2-8e4c-a7840cc19f30",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e8d100e9-1b43-4ae6-8bd3-a180c8ab5ea8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c9"
										}
									]
								}
							},
							"response": [
								{
									"id": "c327de95-6d41-400a-8999-081f1db3b6b8",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Id - Update Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26a56b62-b0fb-47f2-8e4c-a7840cc19f30",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "99c6c22b-1914-426b-be3d-6cda605ad620",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "ac534493-70cf-4a17-8bec-c680ac3d97e3",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Empty fields - Update Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26a56b62-b0fb-47f2-8e4c-a7840cc19f30",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.title).to.eql(\"title should not be empty\");\r",
											"           pm.expect(pm.response.json().data.status).to.eql(\"status should not be empty\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1821c887-7708-4315-9677-c13085d945c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text",
											"disabled": true
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07",
											"disabled": true
										},
										{
											"key": "status",
											"value": "active",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c9"
										}
									]
								}
							},
							"response": [
								{
									"id": "7469c6a4-63af-4ed0-91b3-c3e2401aaf10",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Update Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26a56b62-b0fb-47f2-8e4c-a7840cc19f30",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "60c094cc-5da7-49b0-91b7-189304a3b62e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c9"
										}
									]
								}
							},
							"response": [
								{
									"id": "21bf2c8d-75e5-4b98-9e82-ab5da72985b4",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						}
					],
					"id": "d84a66da-751a-49bf-9107-09caee6bdaee"
				},
				{
					"name": "Update Campaign",
					"item": [
						{
							"name": "Update Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "922056dd-f7f0-4e5f-9d10-08cae9a2a6e2",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is 'Fetched logged in user successfully'\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Fetched logged in user successfully');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "76a38b8a-5869-4dc0-8366-2a56c500b717",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "4rN-1F_cC/Screenshot (14).png"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{campaignId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "4dd9d396-f1e4-4468-8b8f-ffc2b8f9ca3c",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid Id - Update Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "922056dd-f7f0-4e5f-9d10-08cae9a2a6e2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1009f971-ab98-4108-a7ec-17cbc5b6906b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c"
										}
									]
								}
							},
							"response": [
								{
									"id": "d6712705-39c9-4f3b-af51-0ea59cad2be7",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Id - Update Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "922056dd-f7f0-4e5f-9d10-08cae9a2a6e2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "94c23269-74f1-4731-9a1e-abe065f5071c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										},
										{
											"key": "status",
											"value": "active",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "6f1a6afe-9a91-48f9-9ecb-1715a9102f8e",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Empty fields - Update Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "922056dd-f7f0-4e5f-9d10-08cae9a2a6e2",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.title).to.eql(\"title should not be empty\");\r",
											"           pm.expect(pm.response.json().data.status).to.eql(\"status should not be empty\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e3f6e4e4-55e3-4598-8d5e-2e3a6266a8c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text",
											"disabled": true
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text",
											"disabled": true
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07",
											"disabled": true
										},
										{
											"key": "status",
											"value": "active",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c"
										}
									]
								}
							},
							"response": [
								{
									"id": "b4179019-6afb-49a5-843b-1f27e602379f",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Update Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "922056dd-f7f0-4e5f-9d10-08cae9a2a6e2",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "253ee67e-19bd-4580-8e4f-511b819eb87c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Banner",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef17790-8e39-4930-b8ae-f3f5574e6b07"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c"
										}
									]
								}
							},
							"response": [
								{
									"id": "2d9d5fbf-4d6a-47e2-8a3b-afa98610ae1f",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign updated successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						}
					],
					"id": "05d78e6c-31c4-4358-a37c-23aa48802073"
				},
				{
					"name": "Delete Campaign",
					"item": [
						{
							"name": "Delete Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb692144-e4ad-412f-b77a-c18f19a61d0f",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is 'Campaign deleted successfully'\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Campaign deleted successfully');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4361d173-7b08-4fc2-91ea-ba187376fcaf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{campaignId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "f7b328ce-95c4-49fc-91e9-12225b0f50b7",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid Id - Delete Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1804a694-bf2b-42bc-9c7e-6d050c2b4fb6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "cea2f795-7d2e-48c3-82ee-a83ce432d2a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c"
										}
									]
								}
							},
							"response": [
								{
									"id": "d6921dff-15eb-4469-8827-b5747b606e02",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Id - Delete Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1804a694-bf2b-42bc-9c7e-6d050c2b4fb6",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "92b24d8a-49c9-4b52-94b6-dd306d25350b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "a0700c76-ebc0-47af-a49d-315b5367f3a7",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Delete Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1804a694-bf2b-42bc-9c7e-6d050c2b4fb6",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a73adf3e-4890-474a-acca-b260adc5d846",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/campaign/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"campaign",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c"
										}
									]
								}
							},
							"response": [
								{
									"id": "eaf16740-dc9f-4a9f-9f65-98a6d998acfb",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"campaign deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						}
					],
					"id": "c45c88b7-5cdd-4f0c-a84a-25b804b6b7d0"
				},
				{
					"name": "Delete Banner",
					"item": [
						{
							"name": "Delete Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7653ff7d-7499-4d14-91f2-924dc0924031",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is 'success'\", function () {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is 'Banner deleted successfully'\", function () {\r",
											"    pm.expect(jsonData.message).to.include('Banner deleted successfully');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bfaf005f-9e14-41ef-836e-06c4371018f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{bannerId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "21fe83a8-bda8-48d7-aa40-1b7a8908d82c",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Invalid Id - Delete Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e7181ec-f7fe-48aa-ba9f-671817f144c4",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "139b708e-af6e-4554-a620-59492972ec3a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c"
										}
									]
								}
							},
							"response": [
								{
									"id": "32182839-3b65-495a-b162-cc98a9779ca2",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Id - Delete Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e7181ec-f7fe-48aa-ba9f-671817f144c4",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify id must be a UUID\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.eql(\"id must be a UUID\");\r",
											"       \r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bc12a319-6dc9-4439-881d-eac8467d3e98",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{adminAccessToken}}"
									}
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "b06b9f84-57e4-44f6-ae54-328a1312001f",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "No Auth - Delete Banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e7181ec-f7fe-48aa-ba9f-671817f144c4",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "826231eb-69ee-4b4b-b359-7d5538674e44",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/admin/builder/banner/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"admin",
										"builder",
										"banner",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "56321484-480f-4756-b9b1-796ee05c"
										}
									]
								}
							},
							"response": [
								{
									"id": "e8a92444-a24e-44a6-a2b4-f372ebcabba9",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": {
											"raw": "{{base_url}}/admin/builder/banner/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"admin",
												"builder",
												"banner",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "56321484-480f-4756-b9b1-796ee05c95f1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "265"
										},
										{
											"key": "ETag",
											"value": "W/\"109-47LzvzKcVoOVrURkryL+579JNTk\""
										},
										{
											"key": "Date",
											"value": "Sun, 02 Jun 2024 19:46:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"banner deleted successfully\",\n    \"data\": {\n        \"title\": \"Banner name\",\n        \"description\": null,\n        \"id\": \"56321484-480f-4756-b9b1-796ee05c95f1\",\n        \"createdAt\": \"2024-06-02T18:43:43.977Z\",\n        \"updatedAt\": \"2024-06-02T18:43:43.977Z\",\n        \"status\": \"active\"\n    }\n}"
								}
							]
						}
					],
					"id": "c8efb07b-9ffd-4c82-90c3-a484ce91f3de"
				}
			],
			"id": "7a2d9a26-55d6-468e-ab9d-1ff893ca0f5c"
		},
		{
			"name": "Payouts",
			"item": [
				{
					"name": "Initiate Payout",
					"id": "96249d6c-15e8-42fb-8286-9569283334d2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_access_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "ec"
							},
							{
								"key": "x-authentication-code",
								"value": "123456"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vendorId\": \"0b1d86b7-7706-4a7d-be3a-3cdf15422f31\",\n    \"amount\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/admin/payouts"
					},
					"response": []
				}
			],
			"id": "886b3b96-b5e8-4563-b362-13e8892cb487"
		},
		{
			"name": "System Settings",
			"item": [
				{
					"name": "Fetch Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa991857-ea66-4e93-9b3e-6c56dc206f03",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"/*\r",
									"const adminOrder = jsonData.data[0].id\r",
									"\r",
									"pm.environment.set(\"adminOrder\", adminOrder)\r",
									"*/\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response body property\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.status).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 'success'\", function () {\r",
									"    pm.expect(jsonData.status).to.eql('success');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Settings updated successfully\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"Settings updated successfully\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3595da99-7352-4823-aafe-a265e2c024fa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{adminAccessToken}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "ec",
								"disabled": true
							}
						],
						"url": "{{base_url}}/settings"
					},
					"response": [
						{
							"id": "25e9454f-568d-478c-99ee-34195631f47b",
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec"
									}
								],
								"url": "{{base_url}}/settings"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "336"
								},
								{
									"key": "ETag",
									"value": "W/\"150-CaLZXkL0naA7dMLZtKFlZBzkCgI\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Jun 2024 11:21:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"id\": \"b8c79fed-f135-4307-9900-6ca73e8c6163\",\n        \"createdAt\": \"2024-06-05T07:39:47.691Z\",\n        \"updatedAt\": \"2024-06-05T07:39:47.691Z\",\n        \"value\": {\n            \"sessionTimeout\": 15,\n            \"invalidPasswordAttempts\": 5,\n            \"sessionInactivity\": 5,\n            \"orderLimit\": 20,\n            \"openTime\": 900,\n            \"closeTime\": 2200\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Settings",
					"id": "a070780f-860e-40c2-82ba-b7e38232d099",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_access_token}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-request-source",
								"value": "ec"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sessionTimeout\": 10,\n    \"invalidPasswordAttempts\": 5,\n    \"sessionInactivity\": 5,\n    \"systemCancelOrderTime\": 20, // In hours\n    \"platformCommission\": 20 // percentage\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/settings"
					},
					"response": [
						{
							"id": "c0650fd9-a20d-40e7-a631-93839909ae73",
							"name": "success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "ec"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sessionTimeout\": 10,\n    \"invalidPasswordAttempts\": 5,\n    \"sessionInactivity\": 5,\n    \"orderLimit\": 20,\n    \"systemCancelOrderTime\": 20, // In hours\n    \"platformCommission\": 20 // percentage\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/settings"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "55"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "336"
								},
								{
									"key": "ETag",
									"value": "W/\"150-zz2858pOEP5wy0ZzhHTPahXeAe8\""
								},
								{
									"key": "Date",
									"value": "Wed, 05 Jun 2024 11:34:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"id\": \"b8c79fed-f135-4307-9900-6ca73e8c6163\",\n        \"createdAt\": \"2024-06-05T07:39:47.691Z\",\n        \"updatedAt\": \"2024-06-05T10:34:56.908Z\",\n        \"value\": {\n            \"sessionTimeout\": 10,\n            \"invalidPasswordAttempts\": 5,\n            \"sessionInactivity\": 5,\n            \"orderLimit\": 20,\n            \"openTime\": 900,\n            \"closeTime\": 2200\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "3da07091-0603-4cdc-ae3b-d7b6fce2019f"
		},
		{
			"name": "Audit Trail",
			"item": [
				{
					"name": "Get Audit Trail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a2509df-b4be-4cd9-9164-0402bde93397",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response body property\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.status).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.data).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 'success'\", function () {\r",
									"    pm.expect(jsonData.status).to.eql('success');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Customers fetched successfully\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"Audit trail fetched successfully\");\r",
									"});\r",
									"pm.test(\"Verify audit trail is returned\", function () {\r",
									"    pm.expect(pm.response.json().data).to.equal(\"array\").and.not.be.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fcae0ab7-2eea-4e78-ae15-f6c1274693c5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{adminAccessToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/audit-trail"
					},
					"response": []
				}
			],
			"id": "f2803757-0acf-4488-9dc7-9d9e201050f9"
		},
		{
			"name": "Delete customer",
			"item": [
				{
					"name": "Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7337c85-cb39-4e88-b63b-833140d741de",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response body property\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.status).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 'success'\", function () {\r",
									"    pm.expect(jsonData.status).to.eql('success');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Customer deleted successfully\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"Customer deleted successfully\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "da4859e9-044d-4f6d-861f-1a366f679f15",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{adminAccessToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reason\": \"Vibes\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/customers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{adminCustomer}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Already deleted - Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7337c85-cb39-4e88-b63b-833140d741de",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Status code name has 'Not Found'\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"pm.test(\"Verify Customer not found\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"Customer not found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "807af082-844f-460f-9bdc-0a00966b8ceb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{adminAccessToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reason\": \"Vibes\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/customers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{adminCustomer}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "No Id - Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7337c85-cb39-4e88-b63b-833140d741de",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad Request.\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify message Validation Error.\", function () {\r",
									"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
									"});\r",
									"pm.test(\"Verify fields can not be empty\", function () {\r",
									"    pm.expect(pm.response.json().data.id).to.include(\"id must be a UUID\");\r",
									"       });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9a4371aa-d310-40b2-a7e2-3749b4001b3d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{adminAccessToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reason\": \"Vibes\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/customers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "No Auth - Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7337c85-cb39-4e88-b63b-833140d741de",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "6599329c-c76e-4202-aba6-d7b8f4fb2ec9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/customers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{adminCustomer}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"id": "90831df7-a9a7-4505-bb50-cc3f9f69172f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{access_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "customer",
								"type": "text"
							}
						],
						"url": "{{base_url}}/logout"
					},
					"response": [
						{
							"id": "6a1d6130-7290-4644-b3e5-30189f36c047",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": "{{base_url}}/logout"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "66"
								},
								{
									"key": "ETag",
									"value": "W/\"42-MMFs7VtV/OaalCKoVcokK2+rSSs\""
								},
								{
									"key": "Date",
									"value": "Tue, 16 Apr 2024 12:21:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Logout successful.\"\n}"
						}
					]
				}
			],
			"id": "0bcc4920-3a5c-45fc-a7f6-30a4ba746e55"
		},
		{
			"name": "Forgot password",
			"item": [
				{
					"name": "Valid - Forgot Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16c8db0a-1ea6-4026-aea5-79f4a8439b2a",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"const adminForgotPasswordOTP = jsonData.data.otp\r",
									"\r",
									"pm.environment.set(\"adminForgotPasswordOTP\", adminForgotPasswordOTP)\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response body property\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.status).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 'success'\", function () {\r",
									"    pm.expect(jsonData.status).to.eql('success');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that An email has been sent with instructions on how to recover your account.\", function () {\r",
									"    pm.expect(jsonData.message).to.include('An email has been sent with instructions on how to recover your account.');\r",
									"});\r",
									"pm.test(\"Verify that data is a string\", function () {\r",
									"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9f772bfd-a4c7-471a-8705-76d4013f36cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"super@admin.com\" \n  //   \"email\":\"Celine@yopmail.com\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/forgot"
					},
					"response": [
						{
							"id": "da5f5fea-49f7-4bb0-92e8-91dfc0a6e4dc",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"tayoosunkiyesi@gmail.com\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/forgot"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "39"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "144"
								},
								{
									"key": "ETag",
									"value": "W/\"90-ZUPfvJbTi94qgL4i7w96ZTJlqnk\""
								},
								{
									"key": "Date",
									"value": "Mon, 06 May 2024 13:05:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"An email has been sent with instructions on how to recover your account.\",\n    \"data\": {\n        \"otp\": \"416881\"\n    }\n}"
						}
					]
				},
				{
					"name": "No Email - Forgot Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c055229-73f9-4fb4-bd43-51fb7c98c71a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
									"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
									"});\r",
									"pm.test(\"Verifyemail should not be empty'\", function () {\r",
									"    pm.expect(pm.response.json().data.email).to.eql(\"email should not be empty\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0eb9ff10-3255-42ee-94c2-0e0e42704be3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/forgot"
					},
					"response": [
						{
							"id": "cfb86073-7d06-484a-bec0-b6414a7e1c06",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"tayoosunkiyesi@gmail.com\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/forgot"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "39"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "144"
								},
								{
									"key": "ETag",
									"value": "W/\"90-ZUPfvJbTi94qgL4i7w96ZTJlqnk\""
								},
								{
									"key": "Date",
									"value": "Mon, 06 May 2024 13:05:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"An email has been sent with instructions on how to recover your account.\",\n    \"data\": {\n        \"otp\": \"416881\"\n    }\n}"
						}
					]
				},
				{
					"name": "Invalid Email - Forgot Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c055229-73f9-4fb4-bd43-51fb7c98c71a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
									"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
									"});\r",
									"pm.test(\"Verify email must be an email'\", function () {\r",
									"    pm.expect(pm.response.json().data.email).to.eql(\"email must be an email\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "eff8287c-d861-4dec-9b3e-cb28ab93de5f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"superadmincom\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/forgot"
					},
					"response": [
						{
							"id": "3e25b684-39de-4a81-9648-8113e08470c1",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"tayoosunkiyesi@gmail.com\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/forgot"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "39"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "144"
								},
								{
									"key": "ETag",
									"value": "W/\"90-ZUPfvJbTi94qgL4i7w96ZTJlqnk\""
								},
								{
									"key": "Date",
									"value": "Mon, 06 May 2024 13:05:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"An email has been sent with instructions on how to recover your account.\",\n    \"data\": {\n        \"otp\": \"416881\"\n    }\n}"
						}
					]
				}
			],
			"id": "d7098257-4b07-4681-8dc8-7ba0cad5625b"
		},
		{
			"name": "Verify Forgot Password OTP",
			"item": [
				{
					"name": "Valid - Verify Forgot Password OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88e6f340-e5e1-4bdf-901d-510f9454a5d1",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"const adminResetPasswordOTP = jsonData.data.otp\r",
									"\r",
									"pm.environment.set(\"adminResetPasswordOTP\", adminResetPasswordOTP)\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response body property\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.status).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"    pm.expect(jsonData.data).to.be.an('object');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 'success'\", function () {\r",
									"    pm.expect(jsonData.status).to.eql('success');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that data is a string\", function () {\r",
									"    pm.expect(jsonData.data).to.be.an('object').and.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "f1a14b1a-2e82-40cf-9a01-d00c0193e091",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"super@admin.com\",\n    \"otp\": \"{{adminForgotPasswordOTP}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/reset/otp"
					},
					"response": [
						{
							"id": "10c1371b-9ea2-4d04-a069-5f9731c39720",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    \"otp\": \"416881\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/reset/otp"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "35"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "131"
								},
								{
									"key": "ETag",
									"value": "W/\"83-rYjDrt5dak4d7JUt8im/FnmpGek\""
								},
								{
									"key": "Date",
									"value": "Mon, 06 May 2024 13:08:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"OTP verified successfully\",\n    \"data\": {\n        \"otp\": \"c1f56805a712e6863fde01a0694a4e93013c665e\"\n    }\n}"
						}
					]
				},
				{
					"name": "Invalid email - Verify Forgot Password OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b697ad17-ef2e-454a-8e22-7d925d4abc9e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
									"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
									"});\r",
									"pm.test(\"Verify that email must be an email\", function () {\r",
									"    pm.expect(pm.response.json().data.email).to.eql(\"email must be an email\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c6969992-9f4a-4dbf-9005-929c02cbb28d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"superadmincom\",\n    \"otp\": \"{{adminForgotPasswordOTP}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/reset/otp"
					},
					"response": [
						{
							"id": "235e6d2d-6660-431b-970c-b7439b369942",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    \"otp\": \"416881\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/reset/otp"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "35"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "131"
								},
								{
									"key": "ETag",
									"value": "W/\"83-rYjDrt5dak4d7JUt8im/FnmpGek\""
								},
								{
									"key": "Date",
									"value": "Mon, 06 May 2024 13:08:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"OTP verified successfully\",\n    \"data\": {\n        \"otp\": \"c1f56805a712e6863fde01a0694a4e93013c665e\"\n    }\n}"
						}
					]
				},
				{
					"name": "Invalid otp - Verify Forgot Password OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55b2fa55-01dc-4df2-a8d9-cc3fb42eeb1b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Invalid otp'\", function () {\r",
									"    pm.expect(pm.response.json().message).to.eql(\"Invalid otp\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3f5469d6-183a-451e-9991-6f5c81058da7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"super@admin.com\",\n    \"otp\": \"416881\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/reset/otp"
					},
					"response": [
						{
							"id": "92a20767-7f2f-4c98-823a-14058ff51c5e",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    \"otp\": \"416881\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/reset/otp"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "35"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "131"
								},
								{
									"key": "ETag",
									"value": "W/\"83-rYjDrt5dak4d7JUt8im/FnmpGek\""
								},
								{
									"key": "Date",
									"value": "Mon, 06 May 2024 13:08:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"OTP verified successfully\",\n    \"data\": {\n        \"otp\": \"c1f56805a712e6863fde01a0694a4e93013c665e\"\n    }\n}"
						}
					]
				},
				{
					"name": "Empty fields - Verify Forgot Password OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47bc75ad-bfcd-46df-8221-a5ea77c57b11",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code name has 'Bad request'\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
									"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
									"});\r",
									"pm.test(\"Verify email must be an email'\", function () {\r",
									"    pm.expect(pm.response.json().data.email).to.eql(\"email should not be empty\");\r",
									"     pm.expect(pm.response.json().data.otp).to.eql(\"otp should not be empty\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e240c209-0bf2-4928-994f-677067e2df7c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"\",\n    \"otp\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/reset/otp"
					},
					"response": [
						{
							"id": "642c9e12-6c7b-445c-8a05-869b367649ad",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    \"otp\": \"416881\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/reset/otp"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "98"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "35"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "131"
								},
								{
									"key": "ETag",
									"value": "W/\"83-rYjDrt5dak4d7JUt8im/FnmpGek\""
								},
								{
									"key": "Date",
									"value": "Mon, 06 May 2024 13:08:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"OTP verified successfully\",\n    \"data\": {\n        \"otp\": \"c1f56805a712e6863fde01a0694a4e93013c665e\"\n    }\n}"
						}
					]
				}
			],
			"id": "37f88b02-26e4-4d35-83ea-fb1979cfa4c7"
		},
		{
			"name": "Reset password",
			"item": [
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5b05a82-1168-4db4-8c1f-805c1683925e",
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response body property\", function () {\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData.status).to.be.a('string');\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 'success'\", function () {\r",
									"    pm.expect(jsonData.status).to.eql('success');\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that You have successfully reset your password. Please proceed to login again.\", function () {\r",
									"    pm.expect(jsonData.message).to.include('You have successfully reset your password. Please proceed to login again.');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "43c9bd0b-4c5c-4341-857a-b46f52378b25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "admin",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{adminResetPasswordOTP}}\",\n    \"password\": \"Randompassword1@\",\n    \"confirmPassword\": \"Randompassword1@\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/password/reset"
					},
					"response": []
				}
			],
			"id": "4c6ac1e1-faff-4a2b-86df-753f5e0865f7"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0154eca4-f812-465d-b79a-189cdd22add6",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({\r",
					"    key: 'x-request-source',\r",
					"    value: 'ec'\r",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "21431910-d2ec-4d54-8f93-0fb1fd463db4",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}