{
	"info": {
		"_postman_id": "672c0118-bac7-410e-853c-27ce12d8087a",
		"name": "Vendor - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Onboarding",
					"item": [
						{
							"name": "Signup",
							"item": [
								{
									"name": "Email Address",
									"item": [
										{
											"name": "Signup - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"try {",
															"    const { otp } = pm.response.json().data;",
															"    const { email } = JSON.parse(request.data);",
															"",
															"    // Set extracted data to environment variables",
															"    pm.environment.set(\"vendorOnboardingOtp\", otp);",
															"    pm.environment.set(\"signedUpVendorEmail\", email);",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															"",
															"try {",
															"    const { data, message, status } = pm.response.json();",
															"",
															"    // Status code tests",
															"    pm.test(\"Status code is '201'\", function () {",
															"        pm.response.to.have.status(201);",
															"    });",
															"",
															"    pm.test(\"Status code response is 'Created'\", function () {",
															"        pm.response.to.have.status('Created');",
															"    });",
															"",
															"    // Response body tests",
															"    pm.test(\"Response body properties\", () => {",
															"        pm.expect(data).to.be.an('object');",
															"        pm.expect(data.otp).to.be.a('string').and.not.empty;",
															"    });",
															"",
															"    // Status and message tests",
															"    pm.test(\"Status is success\", function () {",
															"        pm.expect(status).to.eql('success');",
															"    });",
															"",
															"    pm.test(\"Message is 'Welcome to EatCheffie. Please proceed to verify your email address.'\", function () {",
															"        pm.expect(message).to.include('Welcome to EatCheffie. Please proceed to verify your email address.');",
															"    });",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "1dae32a7-769a-4d8f-9e77-c3afcf4911ae",
														"exec": [
															"pm.environment.set('base_url', 'https://api.eatcheffie.com/v1')",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "162aca0a-33a9-4731-ab0a-0c5d10f4647e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{$randomFirstName}}@mailinator.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "512f2b25-db0c-483b-af9c-9b792467dc37",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										},
										{
											"name": "Signup - empty fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"var jsonData = pm.response.json();",
															"const onboardingOtp = jsonData.data.otp",
															"const onboardingToken = jsonData.data.onboardingToken",
															"",
															"pm.environment.set(\"onboardingOtp\", onboardingOtp)",
															"pm.environment.set(\"onboardingToken\", onboardingToken)",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Status code response is 'Bad Request'\", function () {",
															"    pm.response.to.have.status('Bad Request');",
															"});",
															"",
															"pm.test(\"Response body property\", function () {",
															"    pm.expect(jsonData).to.be.an('object');",
															"    pm.expect(jsonData.message).to.be.a('string');",
															"    pm.expect(jsonData.data).to.be.a('object');",
															"});",
															"",
															"pm.test(\"Message is validation error\", function () {",
															"    pm.expect(jsonData.message).to.include('Validation Error.')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "08410bd6-2672-49c8-9833-933d786a7812",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "80a1c92e-4cd2-47d9-97c4-4a20b7a2e04d",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										}
									],
									"id": "714586fa-ad76-4b63-9f1a-ef20fdd9ad7c"
								},
								{
									"name": "Phone Number",
									"item": [
										{
											"name": "Signup - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"try {",
															"    const { otp } = pm.response.json().data;",
															"    const { phone } = JSON.parse(request.data);",
															"",
															"    pm.environment.set(\"vendorOnboardingOtpPhone\", otp);",
															"    pm.environment.set(\"signedUpVendorPhone\", phone);",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															"",
															"// Test response data and status",
															"try {",
															"    const { data, message, status } = pm.response.json();",
															"",
															"    // Status code tests",
															"    pm.test(\"Status code is '201'\", function () {",
															"        pm.response.to.have.status(201);",
															"    });",
															"",
															"    pm.test(\"Status code response is 'Created'\", function () {",
															"        pm.response.to.have.status('Created');",
															"    });",
															"",
															"    // Response body tests",
															"    pm.test(\"Response body properties\", () => {",
															"        pm.expect(data).to.be.an('object');",
															"        pm.expect(data.otp).to.be.a('string').and.not.empty;",
															"    });",
															"",
															"    // Status and message tests",
															"    pm.test(\"Status is success\", function () {",
															"        pm.expect(status).to.eql('success');",
															"    });",
															"",
															"    pm.test(\"Message is 'Welcome to EatCheffie. Please proceed to verify your phone number.'\", function () {",
															"        pm.expect(message).to.include('Welcome to EatCheffie. Please proceed to verify your phone number.');",
															"    });",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "bb8199e3-ffa0-498c-9ce7-9ffbff87c69c",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0d69bc53-fc23-48db-817c-aa1ff946826c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"{{generatedPhoneNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "8ce0c8b7-8957-4102-9101-bf9178a142b5",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										},
										{
											"name": "Signup - empty fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"var jsonData = pm.response.json();",
															"const onboardingOtp = jsonData.data.otp",
															"const onboardingToken = jsonData.data.onboardingToken",
															"",
															"pm.environment.set(\"onboardingOtp\", onboardingOtp)",
															"pm.environment.set(\"onboardingToken\", onboardingToken)",
															"// pm.environment.set(\"accesstoken\", jsonData.data.accessToken);",
															"",
															"",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Status code response is Bad Request\", function () {",
															"    pm.response.to.have.status('Bad Request');",
															"});",
															"",
															"",
															"pm.test(\"Response body property\", function () {",
															"    pm.expect(jsonData).to.be.an('object');",
															"    pm.expect(jsonData.message).to.be.a('string');",
															"    pm.expect(jsonData.data).to.be.a('object');",
															"});",
															"",
															"",
															"pm.test(\"Message is validation error\", function () {",
															"    pm.expect(jsonData.message).to.include('Validation Error.')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9dbbf5a3-b895-4b1c-8794-47fea5c65e81",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "f1f350fb-2e32-4f2b-bb90-fa88eeea9638",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										}
									],
									"id": "37afab35-1bd2-470b-9c3c-4fd51ae15b77",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "de14f159-4605-4c6a-adfd-6248e204d653",
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e9f8f9b5-6770-4ced-b8f4-96f5e8968e6a",
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"id": "ddd9eeab-1cb3-461e-927f-e99f54128396"
						},
						{
							"name": "Verify OTP",
							"item": [
								{
									"name": "Verify OTP - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4de8cd1f-b206-4f4f-bbf7-2335c7ba7b9b",
												"exec": [
													"// Extract OTP and email from response and request data",
													"try {",
													"    const { onboardingToken } = pm.response.json().data;",
													"",
													"    // Set extracted data to environment variables",
													"    pm.environment.set(\"vendorOnboardingToken\", onboardingToken);",
													"",
													"} catch (error) {",
													"    console.error(\"Error occurred while processing response:\", error);",
													"}",
													"",
													"// Test response data and status",
													"try {",
													"    const { data, message, status } = pm.response.json();",
													"",
													"    // Status code tests",
													"    pm.test(\"Status code is '200'\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code is '200'\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'OK'\", function () {",
													"        pm.response.to.have.status('OK');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(data).to.be.an('object');",
													"        pm.expect(data.onboardingToken).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    // Status and message tests",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"OTP verified successfully.\", function () {",
													"        pm.expect(message).to.include('OTP verified successfully.');",
													"    });",
													"} catch (error) {",
													"    console.error(\"Error occurred while processing response:\", error);",
													"}",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5e636c5e-f45b-4827-8953-96f39d839e7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"{{vendorOnboardingOtp}}\",\n    \"email\": \"{{signedUpVendorEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/otp/verify"
									},
									"response": [
										{
											"id": "15a6659e-d893-4695-b09f-126bb82eab5f",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"843055\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/otp/verify"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "41"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "ETag",
													"value": "W/\"54-1QwaebmJuK4CbZ6XMh3P1gGLFG8\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 13:02:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Email address verified successfully.\"\n}"
										}
									]
								},
								{
									"name": "Verify OTP - Empty Fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4de8cd1f-b206-4f4f-bbf7-2335c7ba7b9b",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is 'Bad Request'\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"    pm.expect(jsonData.data).to.be.a('object');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.data.otp).to.include('otp should not be empty') ;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d1444118-adde-4dd7-bfa5-a5f0ae822020",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{onboardingTokenEmail}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"\",\n    \"email\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/otp/verify"
									},
									"response": [
										{
											"id": "9ca289a7-be3f-43be-ae76-e00d6c498166",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"843055\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/otp/verify"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "41"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "ETag",
													"value": "W/\"54-1QwaebmJuK4CbZ6XMh3P1gGLFG8\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 13:02:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Email address verified successfully.\"\n}"
										}
									]
								},
								{
									"name": "Verify OTP - Invalid OTP",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4de8cd1f-b206-4f4f-bbf7-2335c7ba7b9b",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.message).to.include('Invalid otp') ;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ba41245e-953a-4291-9f14-9d7875e5ad26",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"000000\",\n    \"email\": \"{{signedUpVendorEmail}}\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/otp/verify"
									},
									"response": [
										{
											"id": "1c623b97-2ba4-464f-aec2-a8407f94ac7c",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"843055\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/otp/verify"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "41"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "ETag",
													"value": "W/\"54-1QwaebmJuK4CbZ6XMh3P1gGLFG8\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 13:02:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Email address verified successfully.\"\n}"
										}
									]
								}
							],
							"id": "46d92ccc-1178-4790-8fe9-a09a99b2af3d"
						},
						{
							"name": "Profile",
							"item": [
								{
									"name": "Update Profile - Empty fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aca0a28e-6f5b-4c79-b6dd-9b85017457bf",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"    pm.expect(jsonData.data).to.be.a('object');",
													"});",
													"",
													"",
													"pm.test(\"Message is validation error\", function () {",
													"    pm.expect(jsonData.message).to.include('Validation Error.')",
													"    pm.expect(jsonData.data.firstName).to.include('firstName should not be empty')",
													"    pm.expect(jsonData.data.lastName).to.include('lastName should not be empty')",
													"    pm.expect(jsonData.data.dob).to.include('dob must be a valid ISO 8601 date string')",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "27e40f20-147b-49e4-92b5-944e3b7b2037",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"dob\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/profile"
									},
									"response": [
										{
											"id": "36427436-1078-47bb-b4a9-2d49d5fefe16",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"dob\": \"2024-03-12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:29 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "76"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "ETag",
													"value": "W/\"4c-S1yOi7hqQjo48dfKrPIwo4A7LJc\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Profile updated successfully\"\n}"
										}
									]
								},
								{
									"name": "Update Profile - Invalid DOB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aca0a28e-6f5b-4c79-b6dd-9b85017457bf",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"    pm.expect(jsonData.data).to.be.a('object');",
													"});",
													"",
													"",
													"pm.test(\"Message is validation error\", function () {",
													"    pm.expect(jsonData.message).to.include('Validation Error.')",
													"    pm.expect(jsonData.data.dob).to.include('dob must be a valid ISO 8601 date string')",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "eaf47906-9c9a-4d84-bf7b-04e82d64e6af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Azeez\",\n    \"lastName\": \"Ibrahim\",\n    \"dob\": \"12-03-2024\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/profile"
									},
									"response": [
										{
											"id": "666df5b8-b8e2-4284-b60d-0be0b2ee29a6",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"dob\": \"2024-03-12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:29 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "76"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "ETag",
													"value": "W/\"4c-S1yOi7hqQjo48dfKrPIwo4A7LJc\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Profile updated successfully\"\n}"
										}
									]
								},
								{
									"name": "Update Profile - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aca0a28e-6f5b-4c79-b6dd-9b85017457bf",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('OK');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"});",
													"",
													"",
													"pm.test(\"Message is validation error\", function () {",
													"    pm.expect(jsonData.status).to.include('success')",
													"    pm.expect(jsonData.message).to.include('Profile updated successfully')",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bc2c1080-cb47-46f9-a7a6-c68db55dcfb6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Azeez\",\n    \"lastName\": \"Ibrahim\",\n    \"dob\": \"1990-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/profile"
									},
									"response": [
										{
											"id": "0098113c-a741-46f2-b4e9-93102983b5a2",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"dob\": \"2024-03-12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:29 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "76"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "ETag",
													"value": "W/\"4c-S1yOi7hqQjo48dfKrPIwo4A7LJc\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Profile updated successfully\"\n}"
										}
									]
								}
							],
							"id": "50f45249-0deb-4b28-9523-508e0da24ccc"
						},
						{
							"name": "Password",
							"item": [
								{
									"name": "Create Password - Invalid Complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8fe9993-3117-4992-b1d6-0bc9c535d7bd",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.data.password).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.message).to.include('Validation Error.') ;",
													"    pm.expect(jsonData.data.password).to.include('Password must be at least 8 characters long and contain one uppercase, lowercase, number and special character.') ;",
													"",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9ae0da86-e653-491d-8510-ef4776d15b4d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"Pass\",\n    \"confirmPassword\": \"Pass\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/password"
									},
									"response": [
										{
											"id": "eef43b41-484d-4eeb-a23e-d32d1f246f51",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"nuMberone1#\",\n    \"confirmPassword\": \"nuMberone1#\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/password"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "78"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"4e-so7lXMj74x6k4iaOScaRYWQAe7E\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Password created successfully.\"\n}"
										}
									]
								},
								{
									"name": "Create Password - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8fe9993-3117-4992-b1d6-0bc9c535d7bd",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Status code response is Unauthorized\", function () {",
													"    pm.response.to.have.status('Unauthorized');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.message).to.include('Invalid onboarding token.') ;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9c88a292-4bd7-43e7-8503-585f02b1f93c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"Pass\",\n    \"confirmPassword\": \"Pass\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/password"
									},
									"response": [
										{
											"id": "364cee4f-af2e-4e80-8702-60879556c69c",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"nuMberone1#\",\n    \"confirmPassword\": \"nuMberone1#\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/password"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "78"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"4e-so7lXMj74x6k4iaOScaRYWQAe7E\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Password created successfully.\"\n}"
										}
									]
								},
								{
									"name": "Create Password - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8fe9993-3117-4992-b1d6-0bc9c535d7bd",
												"exec": [
													"const jsonData = pm.response.json();",
													"try {",
													"",
													"    const {status, success, message, data} = pm.response.json()",
													"",
													"    pm.environment.set(\"vendorAccessToken\", data.accessToken)",
													"",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code response is Ok\", function () {",
													"        pm.response.to.have.status('OK');",
													"    });",
													"",
													"    pm.test(\"Response body property\", function () {",
													"        pm.expect(status).to.be.a(\"string\");",
													"        pm.expect(message).to.be.a('string');",
													"    });",
													"",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Message is Verified Successfully\", function () {",
													"        pm.expect(message).to.include('Password created successfully.');",
													"    });",
													"} catch (error) {",
													"",
													"}",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4f1c5475-7d14-4f24-a755-b53af5b86fb4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"Password12@@\",\n    \"confirmPassword\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/password"
									},
									"response": [
										{
											"id": "9f38b805-f09a-40e7-9dba-9e2a93b11d28",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"nuMberone1#\",\n    \"confirmPassword\": \"nuMberone1#\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/password"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "78"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"4e-so7lXMj74x6k4iaOScaRYWQAe7E\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Password created successfully.\"\n}"
										}
									]
								}
							],
							"id": "aa41a411-a798-406b-b781-5b61d2cb3b64"
						}
					],
					"id": "0c8a706c-c2e0-4a81-b1f1-387a4bfcf31d"
				},
				{
					"name": "Forgot Password",
					"item": [
						{
							"name": "Forgot Password",
							"id": "cec18a0d-17f3-4512-9530-ddd31bd310fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"tayoosunkiyesi@gmail.com\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/forgot"
							},
							"response": [
								{
									"id": "a41a0553-612d-4aea-8c23-40fc48a123b7",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "customer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\":\"tayoosunkiyesi@gmail.com\" \n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/password/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "39"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "144"
										},
										{
											"key": "ETag",
											"value": "W/\"90-ZUPfvJbTi94qgL4i7w96ZTJlqnk\""
										},
										{
											"key": "Date",
											"value": "Mon, 06 May 2024 13:05:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"An email has been sent with instructions on how to recover your account.\",\n    \"data\": {\n        \"otp\": \"416881\"\n    }\n}"
								}
							]
						},
						{
							"name": "Reset Password",
							"id": "05b9281d-0811-4001-ac13-f5acfb162b79",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"c1f56805a712e6863fde01a0694a4e93013c665e\",\n    \"password\": \"Password1#\",\n    \"confirmPassword\": \"Password1#\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/reset"
							},
							"response": []
						},
						{
							"name": "Verify Forgot Password OTP",
							"id": "08798c6c-96b6-42f1-a7a3-0a6f6912cabe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    \"otp\": \"416881\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/password/reset/otp"
							},
							"response": [
								{
									"id": "779e4d35-7996-4e64-8039-198fc7a30af4",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "customer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    \"otp\": \"416881\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/password/reset/otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "35"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "131"
										},
										{
											"key": "ETag",
											"value": "W/\"83-rYjDrt5dak4d7JUt8im/FnmpGek\""
										},
										{
											"key": "Date",
											"value": "Mon, 06 May 2024 13:08:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"OTP verified successfully\",\n    \"data\": {\n        \"otp\": \"c1f56805a712e6863fde01a0694a4e93013c665e\"\n    }\n}"
								}
							]
						}
					],
					"id": "5abb8668-68dc-475b-a6aa-4af168eb0d3c"
				},
				{
					"name": "Onboarding with Oauth",
					"item": [
						{
							"name": "Login with Google",
							"item": [
								{
									"name": "Login With Google",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdfbfa5d-894c-41c6-8198-07e84e694501",
												"exec": [
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(200);\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status code response is Ok\", function () {\r",
													"//     pm.response.to.have.status('OK');\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(200);\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status code response is Ok\", function () {\r",
													"//     pm.response.to.have.status('OK');\r",
													"// });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "57328909-49af-4013-91da-56ffc605920e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"purpose\": \"signup\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/oauth/google"
									},
									"response": [
										{
											"id": "77df680e-0376-497b-9f25-db4e41231ad3",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{base_url}}/auth/google/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "ETag",
													"value": "W/\"130-G33fXfk3UzEfIqbb/XEi1mh+0GQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 11 Mar 2024 23:48:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"\",\n    \"data\": \"https://accounts.google.com/o/oauth2/auth?redirect_uri=http%3A%2F%2Flocalhost%3A8180%2Fapi%2Fv1%2Fauth%2Fgoogle%2Fredirect&response_type=code&client_id=310296340026-jduc4ni5tig1pag6mkp9clttev9knt4a.apps.googleusercontent.com&scope=email%20profile\"\n}"
										}
									]
								}
							],
							"id": "113ed10d-0572-4918-b984-d66eed3989d0"
						},
						{
							"name": "Login with Apple",
							"item": [
								{
									"name": "Login With Apple",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdfbfa5d-894c-41c6-8198-07e84e694501",
												"exec": [
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(200);\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status code response is Ok\", function () {\r",
													"//     pm.response.to.have.status('OK');\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(200);\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status code response is Ok\", function () {\r",
													"//     pm.response.to.have.status('OK');\r",
													"// });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "cb19d46c-c8ef-4742-8b7b-16a84bdf17c8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"purpose\": \"signup\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/oauth/google"
									},
									"response": [
										{
											"id": "8a2ed053-897b-4e28-ab91-5ad4276aef4f",
											"name": "success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{base_url}}/auth/google/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "ETag",
													"value": "W/\"130-G33fXfk3UzEfIqbb/XEi1mh+0GQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 11 Mar 2024 23:48:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"\",\n    \"data\": \"https://accounts.google.com/o/oauth2/auth?redirect_uri=http%3A%2F%2Flocalhost%3A8180%2Fapi%2Fv1%2Fauth%2Fgoogle%2Fredirect&response_type=code&client_id=310296340026-jduc4ni5tig1pag6mkp9clttev9knt4a.apps.googleusercontent.com&scope=email%20profile\"\n}"
										}
									]
								}
							],
							"id": "f8af9aec-a1ea-43f0-b5cc-78f8653ec4cc"
						},
						{
							"name": "Complete Login - Google",
							"item": [
								{
									"name": "Complete Login With Oauth - Google",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db56e863-37a2-4754-bf66-fa3f04a5d492",
												"exec": [
													"/*pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Ok\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"*/"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2e6ed04e-8001-402c-82da-5a965e3bee2b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"4/0AdLIrYdzKtcnubbwKArnP1rSZS8FG9KTxmVtx25xdYMuEk3vtmblR4kQTtfFw0TimUcRjQ\",\n    \"purpose\": \"signup\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/oauth/google/complete"
									},
									"response": [
										{
											"id": "1d18ff9b-50e9-44bf-af2e-8c63965ec1f4",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"4/0AeaYSHA07ycb9wADezdpC_aHQcn94izKsSz9PJayyJzuXWCAGZamcT1BAX4dGp8_r3vZvg\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/oauth/google/complete"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "382"
												},
												{
													"key": "ETag",
													"value": "W/\"17e-ksn+LPQ/iHs45LErXbmWwQ9QYpY\""
												},
												{
													"key": "Date",
													"value": "Tue, 19 Mar 2024 23:24:33 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiaWF0IjoxNzEwODkwNjczLCJleHAiOjE3MTA4OTQyNzN9.5kryJGTx5Gcl0NuIYMzTriwUPfmjM3dOztG_kfyoucg\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiaWF0IjoxNzEwODkwNjczLCJleHAiOjE3MTA4OTQyNzN9._a8uGzihmHxFYlrCNo-sHFBsGKc7mIFbsf8AWFMuZ9I\"\n    }\n}"
										}
									]
								}
							],
							"id": "ee435bbe-4e1f-4c2f-b28f-a57073a36828"
						},
						{
							"name": "Complete Login - Apple",
							"item": [
								{
									"name": "Complete Login With Oauth - Apple",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db56e863-37a2-4754-bf66-fa3f04a5d492",
												"exec": [
													"/*pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Ok\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"*/"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6e64d06a-1c53-4d53-8b25-1a176a67cb7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"4/0AeaYSHDXAmrTGpEaIipxF-YR18sD1WaRb5sg_dfV2xfWFX9wqxT72gcOle357OCMuPjq5Q&scope=email+profile+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&authuser=0&hd=assurdly.com&prompt=consent\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/oauth/google/complete"
									},
									"response": [
										{
											"id": "a0e2d2ff-0419-4cb8-aa2e-c097220ca9f5",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"code\": \"4/0AeaYSHA07ycb9wADezdpC_aHQcn94izKsSz9PJayyJzuXWCAGZamcT1BAX4dGp8_r3vZvg\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/oauth/google/complete"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "382"
												},
												{
													"key": "ETag",
													"value": "W/\"17e-ksn+LPQ/iHs45LErXbmWwQ9QYpY\""
												},
												{
													"key": "Date",
													"value": "Tue, 19 Mar 2024 23:24:33 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiaWF0IjoxNzEwODkwNjczLCJleHAiOjE3MTA4OTQyNzN9.5kryJGTx5Gcl0NuIYMzTriwUPfmjM3dOztG_kfyoucg\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiaWF0IjoxNzEwODkwNjczLCJleHAiOjE3MTA4OTQyNzN9._a8uGzihmHxFYlrCNo-sHFBsGKc7mIFbsf8AWFMuZ9I\"\n    }\n}"
										}
									]
								}
							],
							"id": "466ad36b-2f33-4e93-8239-5683b3e7460e"
						}
					],
					"id": "81590358-eeaa-43f0-be95-cb51da52d0ea"
				},
				{
					"name": "Login with Email",
					"item": [
						{
							"name": "Login wIth Valid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3cf2643-000d-4cd7-b7df-8552b8d375f8",
										"exec": [
											"try {",
											"    const { data, message, status, success } = pm.response.json();",
											"",
											"    pm.environment.set(\"vendorAccessToken\",  data.accessToken);",
											"    pm.environment.set(\"vendorRefreshToken\", data.refreshToken);",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Response body properties\", function () {",
											"        pm.expect(data).to.be.an('object');",
											"        pm.expect(status).to.be.a('string');",
											"        pm.expect(message).to.be.a('string');",
											"        // pm.expect(jsonData.data).to.be.an('object');",
											"    });",
											"",
											"        pm.test(\"Response body properties\", function () {",
											"        pm.expect(data).to.be.an('object');",
											"        pm.expect(status).to.be.a('string');",
											"        pm.expect(message).to.be.a('string');",
											"        // pm.expect(jsonData.data).to.be.an('object');",
											"    });",
											"",
											"    pm.test(\"Status is 'success'\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Status is 'success'\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Message is 'Login successful'\", function () {",
											"        pm.expect(message).to.include('Login successful');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0bd373fd-fae3-42da-a369-4dce16d9c227",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"Weldon@mailinator.com\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"response": [
								{
									"id": "4498e276-24e5-4e8a-b22c-1f5bbe496eaf",
									"name": "invalid_credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "33"
										},
										{
											"key": "ETag",
											"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:30:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Invalid credentials\"\n}"
								},
								{
									"id": "80e0344a-a58f-4831-984e-5b0af9ef7693",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:31:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
								}
							]
						},
						{
							"name": "Login - Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3cf2643-000d-4cd7-b7df-8552b8d375f8",
										"exec": [
											"try {",
											"    const { data, message } = pm.response.json();",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Response body properties\", function () {",
											"        pm.expect(data).to.be.an('object');",
											"        pm.expect(data.email).to.be.a('string');",
											"        pm.expect(data.phone).to.be.a('string');",
											"        pm.expect(data.password).to.be.a('string');",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is 'Login successful'\", function () {",
											"        pm.expect(message).to.include('Validation Error.');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "26756595-85ac-4796-8665-8d22f668c788",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"\",\n    \"password\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"response": [
								{
									"id": "0becfa5c-c9b7-47c0-ae93-6d3c8fd856ae",
									"name": "invalid_credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "33"
										},
										{
											"key": "ETag",
											"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:30:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Invalid credentials\"\n}"
								},
								{
									"id": "9e86d444-bb62-4e66-8508-e9d3b8cd1c39",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:31:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
								}
							]
						},
						{
							"name": "Login - Invalid Email Format",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3cf2643-000d-4cd7-b7df-8552b8d375f8",
										"exec": [
											"try {",
											"    const { data, message } = pm.response.json();",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Response body properties\", function () {",
											"        pm.expect(data).to.be.an('object');",
											"        pm.expect(data.email).to.be.a('string');",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is 'Login successful'\", function () {",
											"        pm.expect(message).to.include('Validation Error.');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3017f930-0cd7-4f59-8909-f4d35658efe6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"Aishamailinator.com\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"response": [
								{
									"id": "522d96cf-ba6e-47dd-ad89-5eae9e098468",
									"name": "invalid_credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "33"
										},
										{
											"key": "ETag",
											"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:30:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Invalid credentials\"\n}"
								},
								{
									"id": "fc273fd0-9499-41fb-832a-1597110769cc",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:31:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
								}
							]
						},
						{
							"name": "Login - Invalid Creadentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3cf2643-000d-4cd7-b7df-8552b8d375f8",
										"exec": [
											"try {",
											"    const { data, message } = pm.response.json();",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"    pm.test(\"Response body properties\", function () {",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is 'Login successful'\", function () {",
											"        pm.expect(message).to.include('Invalid credentials');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e7a3ba10-ee96-481e-bab0-5006427ce890",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"Aisha@mailinator.com\",\n    \"password\": \"Pass\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"response": [
								{
									"id": "4128c85b-ef30-493e-aa33-453e3de9d06f",
									"name": "invalid_credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "33"
										},
										{
											"key": "ETag",
											"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:30:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Invalid credentials\"\n}"
								},
								{
									"id": "be802355-a4f9-43bd-9bdb-84a91d1c438d",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:31:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
								}
							]
						}
					],
					"id": "a19d5073-6294-415f-b5de-ea02d60a374b"
				},
				{
					"name": "Login with Phone",
					"item": [
						{
							"name": "Login WIth Phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3cf2643-000d-4cd7-b7df-8552b8d375f8",
										"exec": [
											"// const jsonData = pm.response.json();",
											"",
											"",
											"// pm.test(\"Status code is 201\", function () {",
											"//     pm.response.to.have.status(201);",
											"// });",
											"",
											"// pm.test(\"Response body property\", function () {",
											"//     pm.expect(jsonData).to.be.an('object');",
											"//     pm.expect(jsonData.status).to.be.a('string');",
											"//     pm.expect(jsonData.message).to.be.a('string');",
											"//     pm.expect(jsonData.data).to.be.an('object');",
											"// });",
											"",
											"// pm.test(\"Status is success\", function () {",
											"//     pm.expect(jsonData.status).to.eql('success');",
											"// });",
											"",
											"// pm.test(\"Status is success\", function () {",
											"//     pm.expect(jsonData.status).to.eql('success');",
											"// });",
											"",
											"// // pm.test(\"Message is Successfully logged in\", function () {",
											"// //     pm.expect(jsonData.message).to.include('Login successful');",
											"// // });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e3b60b03-163a-4349-bd0b-2e43512a55a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{signedUpVendorPhone}}\",\n    \"password\": \"Password12@@\"\n}\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"response": [
								{
									"id": "638f3546-d6ba-413f-b353-d73b287c27b2",
									"name": "invalid_credentials",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "33"
										},
										{
											"key": "ETag",
											"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:30:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Invalid credentials\"\n}"
								},
								{
									"id": "d55167b9-da98-4305-b825-e42cf38bccd0",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/login"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
										},
										{
											"key": "Date",
											"value": "Tue, 19 Mar 2024 23:31:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
								}
							]
						}
					],
					"id": "897ae268-7279-4b45-b946-3401a774c5f4"
				}
			],
			"id": "be13af7a-9930-45d9-b648-586e357a8230",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cb88f8b3-3e9a-459e-81f9-1cbbe8b6df0b",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const random = Math.floor(Math.random() * 99999999 + 100000)",
							"const randomPhoneNumber = \"090\"+random",
							"pm.environment.set(\"generatedPhoneNumber\", randomPhoneNumber)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fddab031-6ae2-4109-b962-440c757c5870",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Business",
			"item": [
				{
					"name": "Update Business Information",
					"item": [
						{
							"name": "Valid - Update Business Information",
							"id": "801e8b37-c14e-4bef-8008-7814d3207ae3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorAccessToken}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"type": "text",
											"key": "businessName",
											"value": "The Azeez Kitchen Fab"
										},
										{
											"type": "text",
											"key": "businessPhone",
											"value": "077 3138 8966"
										},
										{
											"type": "text",
											"key": "addressId",
											"value": "N2U5ZWM2YjU4YTUwY2QwIDI3OTA5NTA3IDUzOGI0NzE3OTZlMjY5OA=="
										},
										{
											"type": "text",
											"key": "councilRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "businessRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "trainingAndCertificationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "description",
											"value": "This is the food store of your dreams"
										},
										{
											"type": "file",
											"key": "avatar",
											"src": "sujGito2S/35aafae62a179278337ea396cdb11432.jpg"
										},
										{
											"type": "text",
											"key": "categoryIds[0]",
											"value": "{{fetchedCategory1}}"
										},
										{
											"type": "text",
											"key": "categoryIds[1]",
											"value": "{{fetchedCategory2}}"
										},
										{
											"key": "banner",
											"type": "file",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"key": "councilRegisterationDocument",
											"type": "file",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a",
											"disabled": true
										},
										{
											"key": "hygieneRatingCertificate",
											"type": "file",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"key": "certificationDocument",
											"type": "file",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										}
									]
								},
								"url": "{{base_url}}/vendor/business"
							},
							"response": []
						},
						{
							"name": "Invalid category ID - Update Business Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0cfea416-80de-4d03-a959-36edced6c0ac",
										"exec": [
											"try {",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test('Test for appropriate error message', () => {",
											"        pm.expect(message).to.include('Please provide a valid category.')",
											"    })",
											"} catch (errors) {",
											"    console.error('These are the errors from test', errors)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a3786543-e767-4c22-bf1e-910ff99788ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorAccessToken}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"type": "text",
											"key": "businessName",
											"value": "The Cook House"
										},
										{
											"type": "text",
											"key": "businessPhone",
											"value": "077 3138 8966"
										},
										{
											"type": "text",
											"key": "addressId",
											"value": "N2U5ZWM2YjU4YTUwY2QwIDI3OTA5NTA3IDUzOGI0NzE3OTZlMjY5OA=="
										},
										{
											"type": "text",
											"key": "councilRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "businessRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "trainingAndCertificationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "description",
											"value": "This is the food store of your dreams"
										},
										{
											"type": "file",
											"key": "avatar",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"type": "text",
											"key": "categoryIds[0]",
											"value": "3452c465-c401-430d-b9d7-67ddb715ff43"
										}
									]
								},
								"url": "{{base_url}}/vendor/business"
							},
							"response": []
						},
						{
							"name": "Empty Fields - Update Business Information Copy",
							"id": "833a3f0c-549e-4bd1-9366-690a42b9ecb0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorAccessToken}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"type": "text",
											"key": "businessName",
											"value": "The Cook House"
										},
										{
											"type": "text",
											"key": "businessPhone",
											"value": "077 3138 8966"
										},
										{
											"type": "text",
											"key": "addressId",
											"value": "N2U5ZWM2YjU4YTUwY2QwIDI3OTA5NTA3IDUzOGI0NzE3OTZlMjY5OA=="
										},
										{
											"type": "text",
											"key": "councilRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "businessRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "trainingAndCertificationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "description",
											"value": "Best meals everywhere"
										},
										{
											"type": "file",
											"key": "avatar",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"type": "text",
											"key": "categoryIds[0]",
											"value": "c10094e2-546f-4a06-94f2-7f226d072a31"
										},
										{
											"type": "text",
											"key": "categoryIds[1]",
											"value": "492bf1ef-3bef-4c8f-a63a-b599c56053f6"
										}
									]
								},
								"url": "{{base_url}}/vendor/business"
							},
							"response": []
						},
						{
							"name": "Update Business Information - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d548fafe-a998-4e37-903a-03d4e2d4f45b",
										"exec": [
											"try {",
											"",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"    pm.test(\"Status code response is Unauthorized\", function () {",
											"        pm.response.to.have.status('Unauthorized');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Session expired. Please login again.');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2585b66c-2071-40eb-b937-4017ee2ad1b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjgzNzhjNzdlLTYxYTgtNDI3YS05OGM3LWUxMzg1MTA4Y2Y3YSIsImlhdCI6MTcxNjE0NzMzNSwiZXhwIjoxNzE2MTUwOTM1fQ.2-Ph3S7vMqEX1-4Q1FSVgl1QI27qD7GLLVq0MXD3h-U"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"type": "text",
											"key": "businessName",
											"value": "The Cook House"
										},
										{
											"type": "text",
											"key": "businessPhone",
											"value": "077 3138 8966"
										},
										{
											"type": "text",
											"key": "addressId",
											"value": "N2U5ZWM2YjU4YTUwY2QwIDI3OTA5NTA3IDUzOGI0NzE3OTZlMjY5OA=="
										},
										{
											"type": "text",
											"key": "councilRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "businessRegistrationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "trainingAndCertificationDone",
											"value": "true"
										},
										{
											"type": "text",
											"key": "description",
											"value": "Best meals everywhere"
										},
										{
											"type": "file",
											"key": "avatar",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"type": "text",
											"key": "categoryIds[0]",
											"value": "3452c465-c401-430d-b9d7-67ddb715ff44"
										},
										{
											"type": "text",
											"key": "categoryIds[1]",
											"value": "b2cf98b6-f730-460a-866b-69d637f3050b"
										}
									]
								},
								"url": "{{base_url}}/vendor/business"
							},
							"response": []
						}
					],
					"id": "0bf98dc0-543d-4728-905a-9b37961ac9cf"
				},
				{
					"name": "Search Address",
					"item": [
						{
							"name": "Search Address",
							"id": "573daa1a-660d-4317-8512-d2922f106519",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "customer",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/address/autocomplete",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"address",
										"autocomplete"
									],
									"query": [
										{
											"key": "q",
											"value": "10 birm",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "71d9cf2b-c237-405b-8518-7f5e677c83f4",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "customer"
											}
										],
										"url": {
											"raw": "{{base_url}}/address/autocomplete?q=10 Manch",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"address",
												"autocomplete"
											],
											"query": [
												{
													"key": "q",
													"value": "10 Manch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1250"
										},
										{
											"key": "ETag",
											"value": "W/\"4e2-B9pFF9rXC6jTdx6RtRuuMsZ3l5E\""
										},
										{
											"key": "Date",
											"value": "Wed, 08 May 2024 22:06:58 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Searched address successfully\",\n    \"data\": [\n        {\n            \"address\": \"10 Westmorland Road, West Bromwich, West Midlands\",\n            \"url\": \"/get/YjFiMmUzOTAyMzQwZmVmIDI4MzEwNTg2IDUzOGI0NzE3OTZlMjY5OA==\",\n            \"id\": \"YjFiMmUzOTAyMzQwZmVmIDI4MzEwNTg2IDUzOGI0NzE3OTZlMjY5OA==\"\n        },\n        {\n            \"address\": \"10 Westley Court, West Bromwich, West Midlands\",\n            \"url\": \"/get/ZTkxZGEwOWU2OTI4M2Q5IDI4MzEwNjA1IDUzOGI0NzE3OTZlMjY5OA==\",\n            \"id\": \"ZTkxZGEwOWU2OTI4M2Q5IDI4MzEwNjA1IDUzOGI0NzE3OTZlMjY5OA==\"\n        },\n        {\n            \"address\": \"10 Westminster Road, West Bromwich, West Midlands\",\n            \"url\": \"/get/MjBkMTY1ZTI2ODdjYjRlIDI4MzEzOTExIDUzOGI0NzE3OTZlMjY5OA==\",\n            \"id\": \"MjBkMTY1ZTI2ODdjYjRlIDI4MzEzOTExIDUzOGI0NzE3OTZlMjY5OA==\"\n        },\n        {\n            \"address\": \"10 Westwood View, West Calder, West Lothian\",\n            \"url\": \"/get/M2E3ZDI2MTEyNmY0MjI2IDIwODQxNDkzIDUzOGI0NzE3OTZlMjY5OA==\",\n            \"id\": \"M2E3ZDI2MTEyNmY0MjI2IDIwODQxNDkzIDUzOGI0NzE3OTZlMjY5OA==\"\n        },\n        {\n            \"address\": \"10 Westmuir Road, West Calder, West Lothian\",\n            \"url\": \"/get/MzU5MmE3MmJjOTFiY2VhIDIwODQwMjI5IDUzOGI0NzE3OTZlMjY5OA==\",\n            \"id\": \"MzU5MmE3MmJjOTFiY2VhIDIwODQwMjI5IDUzOGI0NzE3OTZlMjY5OA==\"\n        },\n        {\n            \"address\": \"10 Westerton, Westerton, Chichester, West Sussex\",\n            \"url\": \"/get/NTA5NGExOWJjMDI3OWZhIDgyMDQxNDAgNTM4YjQ3MTc5NmUyNjk4\",\n            \"id\": \"NTA5NGExOWJjMDI3OWZhIDgyMDQxNDAgNTM4YjQ3MTc5NmUyNjk4\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "be2796ff-8221-4d84-b131-309383c3e577"
				},
				{
					"name": "Fetch Business Details",
					"item": [
						{
							"name": "Fetch Business Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c2916e2-3670-49e1-bdd5-3b8a34d6dc15",
										"exec": [
											"try {",
											"",
											"    const { status, data } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(data).to.be.an('object');",
											"        pm.expect(status).to.be.a('string');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error('Error from test says:', error)",
											"}",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "29cc5027-926e-47c3-a2dd-6b6d4c9070b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/vendor/business"
							},
							"response": [
								{
									"id": "f0fcab49-5600-43e0-9375-ba7f30464f8f",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor"
											}
										],
										"url": "{{base_url}}/vendor/business"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "52"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1408"
										},
										{
											"key": "ETag",
											"value": "W/\"580-+vW33yFeIIXOzB3k0u1alrD2bMk\""
										},
										{
											"key": "Date",
											"value": "Mon, 13 May 2024 09:57:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Business details fetched successfully\",\n    \"data\": {\n        \"id\": \"76f0046c-e6fb-4db6-97d9-a216235058d9\",\n        \"createdAt\": \"2024-05-12T23:04:19.275Z\",\n        \"updatedAt\": \"2024-05-12T23:36:56.066Z\",\n        \"name\": \"NexusCooks\",\n        \"description\": \"Best meals everywhere\",\n        \"rating\": 0,\n        \"ratingCount\": 0,\n        \"avatar\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/vendor_avatar.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T095700Z&X-Amz-Expires=3600&X-Amz-Signature=c74f775e8abe3d3a6ac0f97186257c4bd5f82893d14c6788c7c15ee49fa9e346&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"banner\": \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/vendor_banner.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T095700Z&X-Amz-Expires=3600&X-Amz-Signature=4c6fc39bbab18be6d1ee55742d8afca4d0f6560408e3802d0fbe6d816f39327f&X-Amz-SignedHeaders=host&x-id=GetObject\",\n        \"addresses\": [\n            {\n                \"id\": \"975935d6-02b0-4390-927e-3d0db5116443\",\n                \"createdAt\": \"2024-05-12T23:20:02.721Z\",\n                \"updatedAt\": \"2024-05-12T23:20:02.721Z\",\n                \"longitude\": -1.67967,\n                \"latitude\": 52.5329,\n                \"addressLine\": \"10 Birmingham Road Coleshill, Birmingham Warwickshire\",\n                \"area\": \"B\",\n                \"zipcode\": \"B46 2EN\"\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "2d8bc5ac-17f3-44d3-971c-6fa6d1fdf0f6"
				},
				{
					"name": "Update Business Bank Account",
					"id": "0058e211-8403-4c9d-947f-25d71021985b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendor_access_token}}"
							}
						},
						"method": "PATCH",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor"
							}
						],
						"url": "{{base_url}}/vendor/business/account"
					},
					"response": [
						{
							"id": "7ce01722-3dbd-40b4-b22c-65074b1ce744",
							"name": "success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"url": "{{base_url}}/vendor/business/account"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "181"
								},
								{
									"key": "ETag",
									"value": "W/\"b5-wJPuBPinW2SyTxrGMHNr1XQRSCs\""
								},
								{
									"key": "Date",
									"value": "Sun, 02 Jun 2024 20:45:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"URL fetched successfully\",\n    \"data\": {\n        \"stripeAccountDashboardUrl\": \"https://connect.stripe.com/setup/e/acct_1PNLHLQlrSlCve11/FfIKcmbwoFEN\"\n    }\n}"
						}
					]
				}
			],
			"id": "3d6d80d9-46b2-483b-8784-4f27335f0661"
		},
		{
			"name": "Team",
			"item": [
				{
					"name": "Fetch Permissions",
					"item": [
						{
							"name": "Fetch Permissions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2430d164-9bf5-4a92-bbe7-513c70268451",
										"exec": [
											"try {",
											"",
											"    const { status, success, message, data } = pm.response.json()",
											"",
											"    pm.environment.set(\"fetchedVendorPermissionId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Status code response is Ok\", function () {",
											"        pm.response.to.have.status('OK');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(status).to.be.a(\"string\");",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Status is success\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Permissions fetched successfully');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "94c8b689-ca1a-431e-865b-4123a3629bdd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/roles/permissions"
							},
							"response": [
								{
									"id": "e4fe77de-a20f-4a32-8289-4f5150376729",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1265"
										},
										{
											"key": "ETag",
											"value": "W/\"4f1-mExNKTuOgA1FzDdCFoH2plLDp70\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:11:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Permissions fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n            \"name\": \"Create users\",\n            \"slug\": \"create-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"ae62ebcb-b0a6-427b-81da-e46ee6d0cc3f\",\n            \"name\": \"List users\",\n            \"slug\": \"list-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"6d09a213-ea3d-49ea-a829-d9b47b0394af\",\n            \"name\": \"Update users\",\n            \"slug\": \"update-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"3a7ea57d-5e72-4266-966d-83d06101b24c\",\n            \"name\": \"Delete users\",\n            \"slug\": \"delete-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"0006909b-0cea-4d7a-8dc9-b4d434492ab9\",\n            \"name\": \"Create roles\",\n            \"slug\": \"create-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"8dd24a3d-d812-443b-ae1c-04efd2c692f8\",\n            \"name\": \"List roles\",\n            \"slug\": \"list-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"d2ed9b17-9052-420f-9880-de18f8cb7ca4\",\n            \"name\": \"Update roles\",\n            \"slug\": \"update-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"2bef30ce-c521-4c9b-b42c-afbb4b71bd84\",\n            \"name\": \"Delete roles\",\n            \"slug\": \"delete-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Permissions - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2430d164-9bf5-4a92-bbe7-513c70268451",
										"exec": [
											"try {",
											"",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"    pm.test(\"Status code response is Unauthorized\", function () {",
											"        pm.response.to.have.status('Unauthorized');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Session expired. Please login again.');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2ff078d9-1a30-4daf-a169-05a5d0e20d36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/roles/permissions"
							},
							"response": [
								{
									"id": "6f8584b9-2df9-4db4-bffe-bfbee688933c",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1265"
										},
										{
											"key": "ETag",
											"value": "W/\"4f1-mExNKTuOgA1FzDdCFoH2plLDp70\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:11:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Permissions fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n            \"name\": \"Create users\",\n            \"slug\": \"create-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"ae62ebcb-b0a6-427b-81da-e46ee6d0cc3f\",\n            \"name\": \"List users\",\n            \"slug\": \"list-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"6d09a213-ea3d-49ea-a829-d9b47b0394af\",\n            \"name\": \"Update users\",\n            \"slug\": \"update-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"3a7ea57d-5e72-4266-966d-83d06101b24c\",\n            \"name\": \"Delete users\",\n            \"slug\": \"delete-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"0006909b-0cea-4d7a-8dc9-b4d434492ab9\",\n            \"name\": \"Create roles\",\n            \"slug\": \"create-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"8dd24a3d-d812-443b-ae1c-04efd2c692f8\",\n            \"name\": \"List roles\",\n            \"slug\": \"list-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"d2ed9b17-9052-420f-9880-de18f8cb7ca4\",\n            \"name\": \"Update roles\",\n            \"slug\": \"update-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"2bef30ce-c521-4c9b-b42c-afbb4b71bd84\",\n            \"name\": \"Delete roles\",\n            \"slug\": \"delete-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "e6006a99-5cbc-4483-b67d-b368fde131e5"
				},
				{
					"name": "Create Role",
					"item": [
						{
							"name": "Create Role - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { success, message, status } = pm.response.json();",
											"    const { name } = JSON.parse(request.data)",
											"    pm.environment.set('createdRoleName', name)",
											"    ",
											"    // Status code tests",
											"    pm.test(\"Status code is '201'\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Created'\", function () {",
											"        pm.response.to.have.status('Created');",
											"    });",
											"",
											"    // Response body tests",
											"    pm.test(\"Response body properties\", () => {",
											"        pm.expect(success).to.be.true;",
											"        pm.expect(message).to.be.a('string').and.not.empty;",
											"    });",
											"",
											"    // Status and message tests",
											"    pm.test(\"Status is success\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Message is 'Role created successfully'\", function () {",
											"        pm.expect(message).to.include('Role created successfully');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "9022e29b-d13c-453f-a11e-fc604b64ecbf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomWord}} Test Role\",\n    \"description\": \"Random Test Role\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{fetchedVendorPermissionId}}\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "b5cc70e7-878e-4614-9ed7-a5761a9872be",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "8e808583-1293-4670-ba67-3a40c27f7bc1",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						},
						{
							"name": "Create Role - Already Existing Role Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { message } = pm.response.json();",
											"    const name = pm.environment.get('createdRoleName')",
											"",
											"    pm.test(\"Status code is '400'\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Bad Request'\", function () {",
											"        pm.response.to.have.status('Bad Request');",
											"    });",
											"",
											"    pm.test(\"Response body properties\", () => {",
											"        pm.expect(message).to.be.a('string').and.not.empty;",
											"    });",
											"",
											"    pm.test(\"Message is 'Role created successfully'\", function () {",
											"        pm.expect(message).to.include(`Role with name \"${name}\" already exists`);",
											"        console.log(`Role with name \"${name}\" already exists`)",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "21e4529a-2174-4303-82d5-b8de6886d1af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{createdRoleName}}\",\n    \"description\": \"Random Test Role\",\n    \"status\": \"inactive\", // active or inactive\n    \"permissions\": [\"{{fetchedVendorPermissionId}}\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "e05ea3b9-b964-4987-abb8-e90763d1de14",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "c30061f8-7f90-4d5a-894a-b98371dcd003",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						},
						{
							"name": "Create Role - Empty Fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { data, message } = pm.response.json();",
											"",
											"    // Status code tests",
											"    pm.test(\"Status code is '400'\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Bad Request'\", function () {",
											"        pm.response.to.have.status('Bad Request');",
											"    });",
											"",
											"    // Response body tests",
											"    pm.test(\"Response body properties\", () => {",
											"        pm.expect(message).to.be.a('string').and.not.empty;",
											"        pm.expect(data.name).to.be.a('string').and.not.empty;",
											"        pm.expect(data.description).to.be.a('string').and.not.empty;",
											"        pm.expect(data.status).to.be.a('string').and.not.empty;",
											"        pm.expect(data.permissions).to.be.a('string').and.not.empty;",
											"    });",
											"",
											"    pm.test(\"Message is 'Validation Error.'\", function () {",
											"        pm.expect(message).to.include('Validation Error.');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "fac3e111-fe85-4929-929c-1e2b2a8b40bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"description\": \"\",\n    \"status\": \"\", // active or inactive\n    \"permissions\": [\"\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "65a6614e-e02b-47e0-a359-ec05bbbb524a",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "3b582b53-7caa-4a92-b136-2b1b158fd9d7",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						},
						{
							"name": "Create Role - Status set to Inactive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { data, message } = pm.response.json();",
											"",
											"    // Status code tests",
											"    pm.test(\"Status code is '400'\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Bad Request'\", function () {",
											"        pm.response.to.have.status('Bad Request');",
											"    });",
											"",
											"    // Response body tests",
											"    // pm.test(\"Response body properties\", () => {",
											"    //     pm.expect(message).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.name).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.description).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.status).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.permissions).to.be.a('string').and.not.empty;",
											"    // });",
											"",
											"    pm.test(\"Message is 'Validation Error.'\", function () {",
											"        pm.expect(message).to.include('Validation Error.');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "536337e0-a34b-4456-a469-21865274dc44",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomWord}} Test Role\",\n    \"description\": \"Random Test Role\",\n    \"status\": \"inactive\", // active or inactive\n    \"permissions\": [\"{{fetchedVendorPermissionId}}\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "9c76b7a1-3be9-414e-ad0f-db096a91a1c3",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "5ca61d37-b854-4dbc-ac2d-eb340a342ea7",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						}
					],
					"id": "3442138f-f146-4a57-8eae-086ea6250e20"
				},
				{
					"name": "List Roles",
					"item": [
						{
							"name": "List Roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0a83a41-8d74-4633-8fc1-a30a1f9f04f0",
										"exec": [
											"try {",
											"",
											"    const { status, success, message, data } = pm.response.json()",
											"",
											"    pm.environment.set(\"fetchedVendorRoleId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Status code response is Ok\", function () {",
											"        pm.response.to.have.status('OK');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(status).to.be.a(\"string\");",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Status is success\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Successfully fetched roles');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d3e4c4fa-2d55-407f-8660-9e5c7f3ad638",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "75f00eb6-5e51-4168-9c84-165494757763",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "53"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "321"
										},
										{
											"key": "ETag",
											"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 13:46:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "List Roles - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0a83a41-8d74-4633-8fc1-a30a1f9f04f0",
										"exec": [
											"try {",
											"",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"    pm.test(\"Status code response is Unauthorized\", function () {",
											"        pm.response.to.have.status('Unauthorized');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Session expired. Please login again.');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "75fe62fb-898f-4d82-ba4b-b41ac4f0ff0e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "0e877c42-ac0d-4e65-bf2c-a9c06a44d4a9",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "53"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "321"
										},
										{
											"key": "ETag",
											"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 13:46:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						}
					],
					"id": "63bc549f-1141-4e8b-a0b2-ba9fbaf21b0c"
				},
				{
					"name": "Get Role by ID",
					"item": [
						{
							"name": "Get Role By ID - Valid",
							"id": "b85ff70e-c960-4a70-8081-ac6c581f7bef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/roles/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{fetchedVendorRoleId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "fc9f61b4-df74-41b9-bea4-2dcea916c84c",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "424"
										},
										{
											"key": "ETag",
											"value": "W/\"1a8-0KBpvOBTdRawDprdOyqloZZzvR0\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:21:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched role\",\n    \"data\": {\n        \"id\": \"d35b72b7-0376-4859-806a-9e9c646dbed1\",\n        \"name\": \"HR\",\n        \"slug\": \"hr\",\n        \"description\": \"Role for HR personnel\",\n        \"status\": \"active\",\n        \"permissions\": [\n            {\n                \"permission\": {\n                    \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n                    \"name\": \"Create users\",\n                    \"slug\": \"create-users\",\n                    \"description\": null,\n                    \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n                }\n            }\n        ],\n        \"createdAt\": \"2024-05-02T13:13:17.652Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Role By ID - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "624a715e-9f57-474b-a0da-4f7e4014bd9a",
										"exec": [
											"try {",
											"",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"    pm.test(\"Status code response is Unauthorized\", function () {",
											"        pm.response.to.have.status('Unauthorized');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Session expired. Please login again.');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f142134a-0df4-49d2-913c-7019220d5d36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/roles/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{fetchedVendorRoleId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "79ffd577-9f89-436b-9754-3df9ab68f091",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "424"
										},
										{
											"key": "ETag",
											"value": "W/\"1a8-0KBpvOBTdRawDprdOyqloZZzvR0\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:21:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched role\",\n    \"data\": {\n        \"id\": \"d35b72b7-0376-4859-806a-9e9c646dbed1\",\n        \"name\": \"HR\",\n        \"slug\": \"hr\",\n        \"description\": \"Role for HR personnel\",\n        \"status\": \"active\",\n        \"permissions\": [\n            {\n                \"permission\": {\n                    \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n                    \"name\": \"Create users\",\n                    \"slug\": \"create-users\",\n                    \"description\": null,\n                    \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n                }\n            }\n        ],\n        \"createdAt\": \"2024-05-02T13:13:17.652Z\"\n    }\n}"
								}
							]
						}
					],
					"id": "3a1db70e-d1f6-45f3-bd1e-d18ff0a1f9c7"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Invite User",
							"item": [
								{
									"name": "Invite User - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try{",
													"    const {status, success, message, data} = pm.response.json()",
													"    console.log(data)",
													"    pm.environment.set(\"vendorInvitedUserToken\", data.resetPasswordToken)",
													"",
													"    pm.test(\"Status code is '201'\", function () {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Created'\", function () {",
													"        pm.response.to.have.status('Created');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(success).to.be.true;",
													"        pm.expect(status).to.eql(\"success\");",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    // Status and message tests",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Message is 'Role created successfully'\", function () {",
													"        pm.expect(message).to.include('User created succesfully. An email has been sent with instructions on how to setup the account.');",
													"    });",
													"} catch (error) {",
													"",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ee02c388-10b9-4654-abfe-3fb502c0a521",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"{{fetchedVendorRoleId}}\",\n    \"email\": \"{{$randomFirstName}}{{$randomNameSuffix}}@mailinator.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "383e80de-a09b-43a1-a281-250f02256713",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Invite User - Empty fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try {",
													"    const { message, data } = pm.response.json()",
													"    console.log(data)",
													"",
													"    pm.test(\"Status code is '400'\", function () {",
													"        pm.response.to.have.status(400);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Bad Request'\", function () {",
													"        pm.response.to.have.status('Bad Request');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"        pm.expect(data.roleId).to.be.a('string').and.not.empty;",
													"        pm.expect(data.email).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    // Status and message tests",
													"    pm.test(\"Role Id should not be empty\", function () {",
													"        pm.expect(data.roleId).to.eql('roleId should not be empty');",
													"    });",
													"",
													"    pm.test(\"Email should not be empty\", function () {",
													"        pm.expect(data.email).to.eql('email should not be empty');",
													"    });",
													"    pm.test(\"Message is 'Role created successfully'\", function () {",
													"        pm.expect(message).to.eql('Validation Error.');",
													"    });",
													"} catch (error) {",
													"    console.error(\"Error from request is:\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "436b0207-fcbf-4e9f-b7a1-04d0161a2ab3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"\",\n    \"email\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "de4bba29-9056-42b5-b6b2-cf6387f3b027",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Invite User - Invalid Email format",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try {",
													"    const { message, data } = pm.response.json()",
													"    console.log(data)",
													"",
													"    pm.test(\"Status code is '400'\", function () {",
													"        pm.response.to.have.status(400);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Bad Request'\", function () {",
													"        pm.response.to.have.status('Bad Request');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"        pm.expect(data.email).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    pm.test(\"Email  must be an email\", function () {",
													"        pm.expect(data.email).to.eql('email must be an email');",
													"    });",
													"    pm.test(\"Message is 'Role created successfully'\", function () {",
													"        pm.expect(message).to.eql('Validation Error.');",
													"    });",
													"} catch (error) {",
													"    console.error(\"Error from request is:\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ec8e54ef-c7d4-4270-b2fa-4acdcfe44821",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"{{fetchedVendorRoleId}}\",\n    \"email\": \"{{$randomFirstName}}{{$randomNameSuffix}}mailinator\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "4bcadea6-89f2-4a3c-89d1-a0a2d7bf35b5",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Invite User - Non-existing Role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try {",
													"    const { message, data } = pm.response.json()",
													"    console.log(data)",
													"",
													"    pm.test(\"Status code is '400'\", function () {",
													"        pm.response.to.have.status(400);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Bad Request'\", function () {",
													"        pm.response.to.have.status('Bad Request');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    pm.test(\"Message is invalid role\", function () {",
													"        pm.expect(message).to.eql('Invalid role');",
													"    });",
													"",
													"} catch (error) {",
													"    console.error(\"Error from request is:\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bd76f96a-200e-4390-807c-af6ed758b6be",
												"exec": [
													"// const randomUUID = {{$guid}}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b891d76b-1118-405c-9532-a83cea6666cf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"{{$guid}}\",\n    \"email\": \"{{$randomFirstName}}{{$randomNameSuffix}}@mailinator.com\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "85e66320-1853-42a4-8f6f-194c41a437b4",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								}
							],
							"id": "1e2f9f85-31df-48e8-93ad-0b662e6767c1"
						},
						{
							"name": "Setup User with Email",
							"item": [
								{
									"name": "Setup user with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "25f0d8d5-6b0a-40a2-ace4-e29d9fc1f252",
												"exec": [
													"try{",
													"    const {status, success, message, data} = pm.response.json()",
													"",
													"    pm.test(\"Status code is '201'\", function () {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Created'\", function () {",
													"        pm.response.to.have.status('Created');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(success).to.be.true;",
													"        pm.expect(status).to.eql(\"success\");",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    pm.test(\"Message is 'Successfully setup account'\", function () {",
													"        pm.expect(message).to.include('Successfully setup account');",
													"    });",
													"} catch (error) {",
													"",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "188e7df0-8f6b-4ab0-a0b2-73b5d1731198",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"password\": \"Password12@@\",\n    \"confirmPassword\": \"Password12@@\",\n    \"token\": \"{{vendorInvitedUserToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/setup"
									},
									"response": [
										{
											"id": "90a24fbb-d242-4495-a501-cc710958f85d",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/setup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "118"
												},
												{
													"key": "ETag",
													"value": "W/\"76-BsI8WylV+oGuVd4y6/nv3STv93I\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:55:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully setup account\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE4NDUyNjU3fQ.RuRzVpX9UHU4SYP0o18lVKWqf6jeCjQU7MpTsn1DXuU\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE0ODU2MjU3fQ.74tjhaMJbSqx3ygNAqg98VsWMeqd6BUK_JeZNNRKevQ\"\n    }\n}"
										}
									]
								}
							],
							"id": "571cc86e-91bf-4db0-8635-454eeaa2275e"
						},
						{
							"name": "Setup User with oauth",
							"item": [
								{
									"name": "Setup user with oauth",
									"id": "c4265a26-6d6e-4604-92bf-89d7cf40d467",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": []
									},
									"response": []
								}
							],
							"id": "d92b8566-ebaf-4f74-b083-d68b2a64a184"
						},
						{
							"name": "List Users",
							"item": [
								{
									"name": "List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba3ab32f-db00-4a38-afab-fcb6d0e7e924",
												"exec": [
													"try {",
													"    const { status, success, message, data } = pm.response.json()",
													"",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code response is Ok\", function () {",
													"        pm.response.to.have.status('OK');",
													"    });",
													"",
													"    pm.test(\"Response body property\", function () {",
													"        pm.expect(status).to.be.a(\"string\");",
													"        pm.expect(message).to.be.a('string');",
													"        pm.expect(success).to.be.true;",
													"",
													"    });",
													"",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Message is Verified Successfully\", function () {",
													"        pm.expect(message).to.include('Fetched users successfully');",
													"    });",
													"",
													"} catch (error) {",
													"    console.error(\"Error running tests\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ab8a5be7-5755-4df5-9cb3-e15e81816cbc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"disabled": true
											}
										],
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "List Users - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba3ab32f-db00-4a38-afab-fcb6d0e7e924",
												"exec": [
													"try {",
													"    const { status, success, message, data } = pm.response.json()",
													"",
													"    pm.test(\"Status code is 401\", function () {",
													"        pm.response.to.have.status(401);",
													"    });",
													"",
													"    pm.test(\"Status code response is Unauthorized\", function () {",
													"        pm.response.to.have.status('Unauthorized');",
													"    });",
													"",
													"    pm.test(\"Response body property\", function () {",
													"        pm.expect(message).to.be.a('string');",
													"    });",
													"",
													"    pm.test(\"Message is Verified Successfully\", function () {",
													"        pm.expect(message).to.include('Session expired. Please login again.');",
													"    });",
													"",
													"} catch (error) {",
													"    console.error(\"Error running tests\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1a29ef22-5009-4a55-887f-145b9a8b53e2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"disabled": true
											}
										],
										"url": "{{base_url}}/users"
									},
									"response": []
								}
							],
							"id": "d63fc95e-2e5a-4673-9227-39c6ccbdf6ae"
						}
					],
					"id": "f3b0288e-ce12-40b8-b058-d430f7b66e64"
				}
			],
			"id": "1aac72ee-7322-4223-bf80-216136f3f60f"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Change Password",
					"item": [
						{
							"name": "Change Password - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d43036b-6c50-442b-bebc-a68566f370ed",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Verify that status retunrs 'success'\", function () {\r",
											"    pm.expect(pm.response.json().status).to.include(\"success\");\r",
											"});\r",
											"pm.test(\"Verify that status retunrs 'true'\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true;\r",
											"});\r",
											"pm.test(\"Verify that message retunrs'You password has been changed successfully.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Your password has been changed successfully.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d5e465b7-fc95-4fcc-81f9-6b092314589d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1#\",\n    \"confirmPassword\": \"Password1#\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7159654f-a4c5-4891-b1cd-33b59bdae356",
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code is 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2d523c4e-3307-419a-bfa7-39b9c4ad4e86",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1#\",\n    \"confirmPassword\": \"Password1#\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Mismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "564c3f23-1b83-4be0-871d-14ab760b055a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"BVerify that message returns 'Invalid old password.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Invalid old password.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ee1470f8-e4f6-4198-92b3-7fdb14cb8741",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1#\",\n    \"confirmPassword\": \"Password1@%\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Complexity rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'Password must be at least 8 characters long and contain one uppercase, lowercase, number and special character.'\", function () {\r",
											"    pm.expect(pm.response.json().data.password).to.include(\"Password must be at least 8 characters long and contain one uppercase, lowercase, number and special character.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1a2da90c-88e8-46d3-a76f-ff1aab5da4cd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1\",\n    \"confirmPassword\": \"Password1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No confirmPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'confirmPassword should not be empty'\", function () {\r",
											"    pm.expect(pm.response.json().data.confirmPassword).to.include(\"confirmPassword should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6c21cb27-9f30-4770-80bb-15f14697cba6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1*\",\n    \"confirmPassword\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'password should not be empty'\", function () {\r",
											"    pm.expect(pm.response.json().data.password).to.include(\"password should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6a8b1ae7-4447-4bc9-ae70-d95bd201f018",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"\",\n    \"confirmPassword\": \"Password1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No oldPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'oldPassword should not be empty'\", function () {\r",
											"    pm.expect(pm.response.json().data.oldPassword).to.include(\"oldPassword should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "de66c1f2-fbfb-4388-aaec-43e4e2cc1e9c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"\",\n    \"password\": \"Password1*\",\n    \"confirmPassword\": \"Password1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Invalid oldPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Invalid old password.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Invalid old password.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "94329bee-d0bd-4d51-9bfc-f4a6d87ccad2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password10@\",\n    \"password\": \"Password1*\",\n    \"confirmPassword\": \"Password1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Same values Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Verify that status retunrs 'success'\", function () {\r",
											"    pm.expect(pm.response.json().status).to.include(\"success\");\r",
											"});\r",
											"pm.test(\"Verify that status retunrs 'true'\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true;\r",
											"});\r",
											"pm.test(\"Verify that message retunrs'You password has been changed successfully.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Your password has been changed successfully.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "da41bfae-72c2-4739-86b9-9d2f3a215725",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password1#\",\n    \"password\": \"Password12@@\",\n    \"confirmPassword\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						}
					],
					"id": "ad9ad050-0a20-4163-81e5-e55dd287596c"
				},
				{
					"name": "Update Profile",
					"item": [
						{
							"name": "Update Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27dad8c0-79d4-4f4a-9543-711580a7a5fe",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success returns true\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true;\r",
											"});\r",
											"pm.test(\"message returns 'Your profile has been updated successfully.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Your profile has been updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0914bd26-3174-478a-b28a-b851f715b09f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"gender\": \"male\",\n    \"dob\": \"2004-03-12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "28af6553-ffe3-44ef-bf63-4a3bd4b3d3ae",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						},
						{
							"name": "Update Profile - No Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27dad8c0-79d4-4f4a-9543-711580a7a5fe",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'gender must be one of the following values: male, female, other'\", function () {\r",
											"    pm.expect(pm.response.json().data.gender).to.eql(\"gender must be one of the following values: male, female, other\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "08a06185-3d75-4a4f-a0b0-36776f8740b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"\",\n    \"dob\": \"2024-10-12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "ea89e277-db7a-493d-b633-773d12931771",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						},
						{
							"name": "Update Profile - No DOB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27dad8c0-79d4-4f4a-9543-711580a7a5fe",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'dob must be a valid ISO 8601 date string'\", function () {\r",
											"    pm.expect(pm.response.json().data.dob).to.eql(\"dob must be a valid ISO 8601 date string\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bc090c81-7606-44da-87eb-953b079e5e88",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "ce545857-a2c5-445b-9523-58af499fce41",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						}
					],
					"id": "68a0ab2c-eeb5-4771-94bb-d0429a1c757e"
				},
				{
					"name": "Get logged in user",
					"item": [
						{
							"name": "Get Logged In User - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "800ac25a-e8c3-45ec-8057-1372a0af0f33",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that status returns '\", function () {\r",
											"    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
											"});\r",
											"pm.test(\"Verify that success returns 'true'\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true;\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Fetched logged in user successfully'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Fetched logged in user successfully\");\r",
											"});\r",
											"pm.test(\"Verify that data returns user details\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"object\").and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "750731c7-e013-4723-9703-48693586ebed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/user/me"
							},
							"response": [
								{
									"id": "959780ae-7d84-4ee3-93a8-93b98bc8cdd6",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{base_url}}/user/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "46"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "402"
										},
										{
											"key": "ETag",
											"value": "W/\"192-//HmW+wBVSwRqRb6TwTeq0ONGqA\""
										},
										{
											"key": "Date",
											"value": "Tue, 23 Apr 2024 14:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched logged in user successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"createdAt\": \"2024-04-02T11:35:22.545Z\",\n        \"updatedAt\": \"2024-04-02T11:36:11.603Z\",\n        \"deliveryAddresses\": [],\n        \"dob\": \"2024-03-12T00:00:00.000Z\",\n        \"email\": \"tayoosunkiyesi@gmail.com\",\n        \"emailVerified\": true,\n        \"gender\": null,\n        \"firstName\": \"Temitayo\",\n        \"lastName\": \"Osunkiyesi\",\n        \"phone\": null,\n        \"lastLogin\": null,\n        \"phoneVerified\": false\n    }\n}"
								}
							]
						},
						{
							"name": "Get Logged In User - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5c0001d-1bc9-4566-b82f-fb27a9711391",
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"// Delete later cause of pipleine run\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f3f63e91-137a-4ab8-8c1b-27ff3d083fce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/user/me"
							},
							"response": [
								{
									"id": "58db504d-1d0d-459b-953d-adc414de26e2",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{base_url}}/user/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "46"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "402"
										},
										{
											"key": "ETag",
											"value": "W/\"192-//HmW+wBVSwRqRb6TwTeq0ONGqA\""
										},
										{
											"key": "Date",
											"value": "Tue, 23 Apr 2024 14:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched logged in user successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"createdAt\": \"2024-04-02T11:35:22.545Z\",\n        \"updatedAt\": \"2024-04-02T11:36:11.603Z\",\n        \"deliveryAddresses\": [],\n        \"dob\": \"2024-03-12T00:00:00.000Z\",\n        \"email\": \"tayoosunkiyesi@gmail.com\",\n        \"emailVerified\": true,\n        \"gender\": null,\n        \"firstName\": \"Temitayo\",\n        \"lastName\": \"Osunkiyesi\",\n        \"phone\": null,\n        \"lastLogin\": null,\n        \"phoneVerified\": false\n    }\n}"
								}
							]
						}
					],
					"id": "9b62568d-dd3f-4e3c-ae0f-663e030f355c"
				},
				{
					"name": "Fetch Categories - Automation Purposes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea073aef-3ec7-43eb-80db-afae92cef662",
								"exec": [
									"try {",
									"",
									"const { status, message, data } = pm.response.json()",
									"pm.environment.set('fetchedCategory1', data[0].id)",
									"pm.environment.set('fetchedCategory2', data[1].id)",
									"pm.environment.set('fetchedCategory3', data[2].id)",
									"pm.environment.set('fetchedCategory4', data[3].id)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status is success\", function () {",
									"   pm.expect(status).to.eql('success')",
									"});",
									"",
									"pm.test(\"Data is an array\", function () {",
									"   pm.expect(data).to.be.an('array')",
									"});",
									"",
									"pm.test(\"Categories fetched successfully\", function () {",
									"    pm.expect(message).to.eql('Categories fetched successfully');",
									"});",
									"",
									"} catch (error) {",
									"    console.error(\"Error caught in running tests:\", error)",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bf6a05ea-1a54-4aa7-88c3-b42011301c57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendorAccessToken}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"url": "{{base_url}}/meals/categories"
					},
					"response": [
						{
							"id": "ee6b6070-5c4f-4b0b-9aba-4d2ccd8d6b4a",
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/meals/categories"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1340"
								},
								{
									"key": "ETag",
									"value": "W/\"53c-wEFHP1DfXjPoEuF3293te8LxAJQ\""
								},
								{
									"key": "Date",
									"value": "Wed, 20 Mar 2024 00:55:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Categories fetched successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"African\",\n            \"slug\": \"african\"\n        },\n        {\n            \"id\": 2,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Italian\",\n            \"slug\": \"italian\"\n        },\n        {\n            \"id\": 3,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Chinese\",\n            \"slug\": \"chinese\"\n        },\n        {\n            \"id\": 4,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Indian\",\n            \"slug\": \"indian\"\n        },\n        {\n            \"id\": 5,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Thai\",\n            \"slug\": \"thai\"\n        },\n        {\n            \"id\": 6,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"American\",\n            \"slug\": \"american\"\n        },\n        {\n            \"id\": 7,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Vegan\",\n            \"slug\": \"vegan\"\n        },\n        {\n            \"id\": 8,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Vegetarian\",\n            \"slug\": \"vegetarian\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"id": "f42f958f-ccd7-4779-bbb0-2a758c42547d"
		},
		{
			"name": "Inventory",
			"item": [
				{
					"name": "Fetch Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "705e8dcd-10b8-46b9-b508-9ef41324d574",
								"exec": [
									"try {",
									"",
									"    const { status, data } = pm.response.json()",
									"",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"Response body property\", function () {",
									"        pm.expect(data).to.be.an('array');",
									"        pm.expect(status).to.be.a('string');",
									"    });",
									"",
									"} catch (error) {",
									"    console.error('Error from test says:', error)",
									"}",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "72c7fa14-68fd-4cf5-9c12-0bfdaad836dc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendor_access_token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"url": "{{base_url}}/meals/categories"
					},
					"response": [
						{
							"id": "14430deb-09e6-4b4b-b43d-30f9b2df8295",
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/meals/categories"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1340"
								},
								{
									"key": "ETag",
									"value": "W/\"53c-wEFHP1DfXjPoEuF3293te8LxAJQ\""
								},
								{
									"key": "Date",
									"value": "Wed, 20 Mar 2024 00:55:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Categories fetched successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"African\",\n            \"slug\": \"african\"\n        },\n        {\n            \"id\": 2,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Italian\",\n            \"slug\": \"italian\"\n        },\n        {\n            \"id\": 3,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Chinese\",\n            \"slug\": \"chinese\"\n        },\n        {\n            \"id\": 4,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Indian\",\n            \"slug\": \"indian\"\n        },\n        {\n            \"id\": 5,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Thai\",\n            \"slug\": \"thai\"\n        },\n        {\n            \"id\": 6,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"American\",\n            \"slug\": \"american\"\n        },\n        {\n            \"id\": 7,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Vegan\",\n            \"slug\": \"vegan\"\n        },\n        {\n            \"id\": 8,\n            \"createdAt\": \"2024-03-19T23:54:56.334Z\",\n            \"updatedAt\": \"2024-03-19T23:55:07.474Z\",\n            \"deletedAt\": null,\n            \"deletedById\": null,\n            \"name\": \"Vegetarian\",\n            \"slug\": \"vegetarian\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add Meal",
					"id": "a470fc4f-8fff-4cd0-a544-eba8b5ad1856",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendorAccessToken}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Good Food {{$randomWord}}",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Spicy Burger Mediul",
									"type": "text"
								},
								{
									"key": "categoryIds[0]",
									"value": "{{fetchedCategory1}}",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
								},
								{
									"key": "tags",
									"value": "vibes",
									"type": "text"
								},
								{
									"key": "specialtyCategories",
									"value": "vibes",
									"type": "text"
								}
							]
						},
						"url": "{{base_url}}/vendor/meals"
					},
					"response": [
						{
							"id": "38900336-0f63-4406-a2f8-94ee370dde2a",
							"name": "price_option_validation_error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Spicy Burger Mediul",
											"type": "text"
										},
										{
											"key": "categoryIds[0]",
											"value": "68f587d4-eef4-4900-a26b-8f62c1827a99",
											"type": "text"
										},
										{
											"key": "allergens[0]",
											"value": "gluten",
											"type": "text"
										},
										{
											"key": "ingredients[0]",
											"value": "vibes",
											"type": "text"
										},
										{
											"key": "spiceLevel",
											"value": "3",
											"type": "text"
										},
										{
											"key": "stock",
											"value": "30",
											"type": "text"
										},
										{
											"key": "availability[sun]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[mon]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[tue]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[wed]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[thu]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[fri]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "availability[sat]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "customAvailability[startDate]",
											"value": "2024-05-15T00:00:00",
											"type": "text"
										},
										{
											"key": "customAvailability[endDate]",
											"value": "2024-05-15T23:00:00",
											"type": "text"
										},
										{
											"key": "customAvailability[available]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"key": "priceOptions[0][size]",
											"value": "litres",
											"type": "text"
										},
										{
											"key": "priceOptions[0][servings]",
											"value": "litres",
											"type": "text"
										}
									]
								},
								"url": "{{base_url}}/vendor/meals"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "165"
								},
								{
									"key": "ETag",
									"value": "W/\"a5-YTz7ixJUVJJ1FXU0Zgge+/wRdC4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 May 2024 21:11:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"0\": {\n            \"servings\": \"servings must be a number string\",\n            \"amount\": \"amount should not be empty\",\n            \"price\": \"price should not be empty\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Meal",
					"id": "1db3ba79-f6c6-4fa4-a1ee-1e87451c55ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendor_access_token}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Spicy Burger Vibes",
									"type": "text"
								},
								{
									"key": "categoryIds[0]",
									"value": "68f587d4-eef4-4900-a26b-8f62c1827a99",
									"type": "text"
								},
								{
									"key": "allergens[0]",
									"value": "glutenssss",
									"type": "text"
								},
								{
									"key": "ingredients[0]",
									"value": "vibes",
									"type": "text"
								},
								{
									"key": "spiceLevel",
									"value": "3",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "30",
									"type": "text"
								},
								{
									"key": "availability[sun]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[mon]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[tue]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[wed]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[thu]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[fri]",
									"value": "false",
									"type": "text"
								},
								{
									"key": "availability[sat]",
									"value": "false",
									"type": "text"
								},
								{
									"key": "customAvailability[startDate]",
									"value": "2024-05-15T00:00:00",
									"type": "text"
								},
								{
									"key": "customAvailability[endDate]",
									"value": "2024-05-15T23:00:00",
									"type": "text"
								},
								{
									"key": "customAvailability[available]",
									"value": "false",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
								},
								{
									"key": "priceOptions[0][size]",
									"value": "litres",
									"type": "text"
								},
								{
									"key": "priceOptions[0][servings]",
									"value": "5",
									"type": "text"
								},
								{
									"key": "priceOptions[0][amount]",
									"value": "10",
									"type": "text"
								},
								{
									"key": "priceOptions[0][price]",
									"value": "50.9034",
									"type": "text"
								},
								{
									"key": "published",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/vendor/meals/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vendor",
								"meals",
								":id"
							],
							"variable": [
								{
									"id": "d445dca1-d5b1-4db8-8823-dcf98adbd4b6",
									"key": "id",
									"value": "ff4d2147-ab2b-4366-a220-d89d7df32fe3"
								}
							]
						}
					},
					"response": [
						{
							"id": "94787b08-34fa-4b99-b9fc-b3b9491d0275",
							"name": "price_option_validation_error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Spicy Burger Mediul",
											"type": "text"
										},
										{
											"key": "categoryIds[0]",
											"value": "68f587d4-eef4-4900-a26b-8f62c1827a99",
											"type": "text"
										},
										{
											"key": "allergens[0]",
											"value": "gluten",
											"type": "text"
										},
										{
											"key": "ingredients[0]",
											"value": "vibes",
											"type": "text"
										},
										{
											"key": "spiceLevel",
											"value": "3",
											"type": "text"
										},
										{
											"key": "stock",
											"value": "30",
											"type": "text"
										},
										{
											"key": "availability[sun]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[mon]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[tue]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[wed]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[thu]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[fri]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "availability[sat]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "customAvailability[startDate]",
											"value": "2024-05-15T00:00:00",
											"type": "text"
										},
										{
											"key": "customAvailability[endDate]",
											"value": "2024-05-15T23:00:00",
											"type": "text"
										},
										{
											"key": "customAvailability[available]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"key": "priceOptions[0][size]",
											"value": "litres",
											"type": "text"
										},
										{
											"key": "priceOptions[0][servings]",
											"value": "litres",
											"type": "text"
										}
									]
								},
								"url": "{{base_url}}/vendor/meals"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "165"
								},
								{
									"key": "ETag",
									"value": "W/\"a5-YTz7ixJUVJJ1FXU0Zgge+/wRdC4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 May 2024 21:11:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"0\": {\n            \"servings\": \"servings must be a number string\",\n            \"amount\": \"amount should not be empty\",\n            \"price\": \"price should not be empty\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Meal Copy",
					"id": "df2c692b-1f00-4549-a4e4-d0d4a454422f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendor_access_token}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Spicy Burger Vibes",
									"type": "text"
								},
								{
									"key": "categoryIds[0]",
									"value": "68f587d4-eef4-4900-a26b-8f62c1827a99",
									"type": "text"
								},
								{
									"key": "allergens[0]",
									"value": "glutenssss",
									"type": "text"
								},
								{
									"key": "ingredients[0]",
									"value": "vibes",
									"type": "text"
								},
								{
									"key": "spiceLevel",
									"value": "3",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "30",
									"type": "text"
								},
								{
									"key": "availability[sun]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[mon]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[tue]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[wed]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[thu]",
									"value": "true",
									"type": "text"
								},
								{
									"key": "availability[fri]",
									"value": "false",
									"type": "text"
								},
								{
									"key": "availability[sat]",
									"value": "false",
									"type": "text"
								},
								{
									"key": "customAvailability[startDate]",
									"value": "2024-05-15T00:00:00",
									"type": "text"
								},
								{
									"key": "customAvailability[endDate]",
									"value": "2024-05-15T23:00:00",
									"type": "text"
								},
								{
									"key": "customAvailability[available]",
									"value": "false",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
								},
								{
									"key": "priceOptions[0][size]",
									"value": "litres",
									"type": "text"
								},
								{
									"key": "priceOptions[0][servings]",
									"value": "5",
									"type": "text"
								},
								{
									"key": "priceOptions[0][amount]",
									"value": "10",
									"type": "text"
								},
								{
									"key": "priceOptions[0][price]",
									"value": "50.9034",
									"type": "text"
								},
								{
									"key": "published",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/vendor/meals/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vendor",
								"meals",
								":id"
							],
							"variable": [
								{
									"id": "0f1ba8b4-8ad7-4ab6-b5e6-ab05e3323bc0",
									"key": "id",
									"value": "ff4d2147-ab2b-4366-a220-d89d7df32fe3"
								}
							]
						}
					},
					"response": [
						{
							"id": "8bf50549-6d65-4f03-99b1-6c13c8ec9530",
							"name": "price_option_validation_error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Spicy Burger Mediul",
											"type": "text"
										},
										{
											"key": "categoryIds[0]",
											"value": "68f587d4-eef4-4900-a26b-8f62c1827a99",
											"type": "text"
										},
										{
											"key": "allergens[0]",
											"value": "gluten",
											"type": "text"
										},
										{
											"key": "ingredients[0]",
											"value": "vibes",
											"type": "text"
										},
										{
											"key": "spiceLevel",
											"value": "3",
											"type": "text"
										},
										{
											"key": "stock",
											"value": "30",
											"type": "text"
										},
										{
											"key": "availability[sun]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[mon]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[tue]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[wed]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[thu]",
											"value": "true",
											"type": "text"
										},
										{
											"key": "availability[fri]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "availability[sat]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "customAvailability[startDate]",
											"value": "2024-05-15T00:00:00",
											"type": "text"
										},
										{
											"key": "customAvailability[endDate]",
											"value": "2024-05-15T23:00:00",
											"type": "text"
										},
										{
											"key": "customAvailability[available]",
											"value": "false",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": "postman-cloud:///1ef10bf3-a30f-4660-8653-41f690ebdb4a"
										},
										{
											"key": "priceOptions[0][size]",
											"value": "litres",
											"type": "text"
										},
										{
											"key": "priceOptions[0][servings]",
											"value": "litres",
											"type": "text"
										}
									]
								},
								"url": "{{base_url}}/vendor/meals"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "165"
								},
								{
									"key": "ETag",
									"value": "W/\"a5-YTz7ixJUVJJ1FXU0Zgge+/wRdC4\""
								},
								{
									"key": "Date",
									"value": "Sun, 19 May 2024 21:11:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"0\": {\n            \"servings\": \"servings must be a number string\",\n            \"amount\": \"amount should not be empty\",\n            \"price\": \"price should not be empty\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Fetch Meals",
					"id": "ac37b8f1-59ae-43bb-9f90-272bb23749e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendor_access_token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/vendor/meals",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vendor",
								"meals"
							],
							"query": [
								{
									"key": "filter[isPublished]",
									"value": "false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Meal Copy",
					"id": "99f6f7be-d6a5-4f7a-8230-86e9ab664cf5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendor_access_token}}"
							}
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor"
							}
						],
						"url": {
							"raw": "{{base_url}}/vendor/meals/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vendor",
								"meals",
								":id"
							],
							"variable": [
								{
									"id": "55499373-3022-459f-8f1d-54d282b8f4a6",
									"key": "id",
									"value": "d5bfe589-ca4b-4462-b46b-85836872107e"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "3f978caf-08c3-4c43-a63f-d40f17f4648e"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Fetch Orders",
					"item": [
						{
							"name": "Fetch Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "39d5aee7-4bd7-4ddb-be6f-7df5d5c544c1",
										"exec": [
											"try {",
											"",
											"    const { status, data } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(data).to.be.an('array');",
											"        pm.expect(status).to.be.a('string');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error('Error from test says:', error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "942b7698-e36b-4825-a404-89e4464a53a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/vendor/orders"
							},
							"response": [
								{
									"id": "a2c81c76-81c4-4861-b864-63bb67006217",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor"
											}
										],
										"url": "{{base_url}}/vendor/orders"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6801"
										},
										{
											"key": "ETag",
											"value": "W/\"1a91-AdZcaC0QMXE9zwRmU0truF714cY\""
										},
										{
											"key": "Date",
											"value": "Mon, 13 May 2024 11:02:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Orders fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"bdcf5d21-8bf9-4a6a-ae92-91e3aa642731\",\n            \"createdAt\": \"2024-05-08T23:39:29.876Z\",\n            \"updatedAt\": \"2024-05-08T23:39:29.876Z\",\n            \"vendorId\": \"8ba6d82e-133d-46da-bdc2-47dbb8af275d\",\n            \"orderMeals\": [\n                {\n                    \"id\": \"939fa535-9683-4a16-b169-c687d41f6192\",\n                    \"createdAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"cartMeal\": {\n                        \"id\": \"fd65985a-2f92-4abd-b5ff-413a9ba72e16\",\n                        \"createdAt\": \"2024-05-08T22:30:06.934Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-08T23:30:06.882Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 5,\n                        \"meal\": {\n                            \"id\": \"7b2a2cf5-42a4-4d32-aff6-49089c4bf7c3\",\n                            \"createdAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"name\": \"Margherita Pizza\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Pizza Dough\",\n                                    \"Tomato Sauce\",\n                                    \"Mozzarella Cheese\",\n                                    \"Fresh Basil\"\n                                ],\n                                \"additives\": [\n                                    \"Fresh Basil\",\n                                    \"Garlic Butter Crust\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.8,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                },\n                {\n                    \"id\": \"d240802b-f701-425a-afa1-e07fa7ae6297\",\n                    \"createdAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"cartMeal\": {\n                        \"id\": \"550b5b16-6c71-41b0-942e-884e804d6249\",\n                        \"createdAt\": \"2024-05-08T23:09:50.631Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-09T00:09:50.578Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 1,\n                        \"meal\": {\n                            \"id\": \"39be5b3a-13d6-4523-ac5a-cf0d839c0403\",\n                            \"createdAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"name\": \"Ham and Cheese Crepe\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Crepe\",\n                                    \"Ham\",\n                                    \"Swiss Cheese\"\n                                ],\n                                \"additives\": [\n                                    \"Mushrooms\",\n                                    \"Spinach\",\n                                    \"Bechamel Sauce\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.1,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"id\": \"e80364ed-2ba5-4c03-b173-0858ed15658d\",\n            \"createdAt\": \"2024-05-08T23:39:29.944Z\",\n            \"updatedAt\": \"2024-05-08T23:39:29.944Z\",\n            \"vendorId\": \"0cf2a75e-7d17-46e2-a52b-da83e31890f7\",\n            \"orderMeals\": [\n                {\n                    \"id\": \"ca81d6ee-5cf8-4da3-92b6-6e4f4f965c70\",\n                    \"createdAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"cartMeal\": {\n                        \"id\": \"fd65985a-2f92-4abd-b5ff-413a9ba72e16\",\n                        \"createdAt\": \"2024-05-08T22:30:06.934Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-08T23:30:06.882Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 5,\n                        \"meal\": {\n                            \"id\": \"7b2a2cf5-42a4-4d32-aff6-49089c4bf7c3\",\n                            \"createdAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"name\": \"Margherita Pizza\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Pizza Dough\",\n                                    \"Tomato Sauce\",\n                                    \"Mozzarella Cheese\",\n                                    \"Fresh Basil\"\n                                ],\n                                \"additives\": [\n                                    \"Fresh Basil\",\n                                    \"Garlic Butter Crust\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.8,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                },\n                {\n                    \"id\": \"17028007-5f87-4a0e-855b-9cc303a91e3b\",\n                    \"createdAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"cartMeal\": {\n                        \"id\": \"550b5b16-6c71-41b0-942e-884e804d6249\",\n                        \"createdAt\": \"2024-05-08T23:09:50.631Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-09T00:09:50.578Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 1,\n                        \"meal\": {\n                            \"id\": \"39be5b3a-13d6-4523-ac5a-cf0d839c0403\",\n                            \"createdAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"name\": \"Ham and Cheese Crepe\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Crepe\",\n                                    \"Ham\",\n                                    \"Swiss Cheese\"\n                                ],\n                                \"additives\": [\n                                    \"Mushrooms\",\n                                    \"Spinach\",\n                                    \"Bechamel Sauce\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.1,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"id\": \"1a66117a-5c19-41d8-b710-4ac58e72ce87\",\n            \"createdAt\": \"2024-05-08T23:42:14.784Z\",\n            \"updatedAt\": \"2024-05-08T23:42:14.784Z\",\n            \"vendorId\": \"0cf2a75e-7d17-46e2-a52b-da83e31890f7\",\n            \"orderMeals\": [\n                {\n                    \"id\": \"62ab08b1-5933-4495-8479-7a8cfc673a47\",\n                    \"createdAt\": \"2024-05-08T23:42:14.789Z\",\n                    \"updatedAt\": \"2024-05-08T23:42:14.789Z\",\n                    \"cartMeal\": {\n                        \"id\": \"48e2f68a-db6e-4e24-8efe-ca0cb8410250\",\n                        \"createdAt\": \"2024-05-08T23:41:46.164Z\",\n                        \"updatedAt\": \"2024-05-08T23:42:14.782Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-09T00:41:46.096Z\",\n                        \"orderId\": \"7f4df58c-9671-4bca-bceb-b7719e5ce8fc\",\n                        \"quantity\": 1,\n                        \"meal\": {\n                            \"id\": \"39be5b3a-13d6-4523-ac5a-cf0d839c0403\",\n                            \"createdAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"name\": \"Ham and Cheese Crepe\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Crepe\",\n                                    \"Ham\",\n                                    \"Swiss Cheese\"\n                                ],\n                                \"additives\": [\n                                    \"Mushrooms\",\n                                    \"Spinach\",\n                                    \"Bechamel Sauce\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.1,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 3,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Orders - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "39d5aee7-4bd7-4ddb-be6f-7df5d5c544c1",
										"exec": [
											"try {",
											"    const { message } = pm.response.json()",
											"    ",
											"    pm.test(\"Status is 'success'\", function () {",
											"        pm.expect(message).to.eql('Session expired. Please login again.');",
											"    });",
											"        pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error form test:\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "99296b1b-b4c3-4944-954e-12b228b4fba0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/vendor/orders"
							},
							"response": [
								{
									"id": "7c0062cc-d572-4f8b-86d6-96d68779f243",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor"
											}
										],
										"url": "{{base_url}}/vendor/orders"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6801"
										},
										{
											"key": "ETag",
											"value": "W/\"1a91-AdZcaC0QMXE9zwRmU0truF714cY\""
										},
										{
											"key": "Date",
											"value": "Mon, 13 May 2024 11:02:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Orders fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"bdcf5d21-8bf9-4a6a-ae92-91e3aa642731\",\n            \"createdAt\": \"2024-05-08T23:39:29.876Z\",\n            \"updatedAt\": \"2024-05-08T23:39:29.876Z\",\n            \"vendorId\": \"8ba6d82e-133d-46da-bdc2-47dbb8af275d\",\n            \"orderMeals\": [\n                {\n                    \"id\": \"939fa535-9683-4a16-b169-c687d41f6192\",\n                    \"createdAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"cartMeal\": {\n                        \"id\": \"fd65985a-2f92-4abd-b5ff-413a9ba72e16\",\n                        \"createdAt\": \"2024-05-08T22:30:06.934Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-08T23:30:06.882Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 5,\n                        \"meal\": {\n                            \"id\": \"7b2a2cf5-42a4-4d32-aff6-49089c4bf7c3\",\n                            \"createdAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"name\": \"Margherita Pizza\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Pizza Dough\",\n                                    \"Tomato Sauce\",\n                                    \"Mozzarella Cheese\",\n                                    \"Fresh Basil\"\n                                ],\n                                \"additives\": [\n                                    \"Fresh Basil\",\n                                    \"Garlic Butter Crust\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.8,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                },\n                {\n                    \"id\": \"d240802b-f701-425a-afa1-e07fa7ae6297\",\n                    \"createdAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.940Z\",\n                    \"cartMeal\": {\n                        \"id\": \"550b5b16-6c71-41b0-942e-884e804d6249\",\n                        \"createdAt\": \"2024-05-08T23:09:50.631Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-09T00:09:50.578Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 1,\n                        \"meal\": {\n                            \"id\": \"39be5b3a-13d6-4523-ac5a-cf0d839c0403\",\n                            \"createdAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"name\": \"Ham and Cheese Crepe\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Crepe\",\n                                    \"Ham\",\n                                    \"Swiss Cheese\"\n                                ],\n                                \"additives\": [\n                                    \"Mushrooms\",\n                                    \"Spinach\",\n                                    \"Bechamel Sauce\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.1,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"id\": \"e80364ed-2ba5-4c03-b173-0858ed15658d\",\n            \"createdAt\": \"2024-05-08T23:39:29.944Z\",\n            \"updatedAt\": \"2024-05-08T23:39:29.944Z\",\n            \"vendorId\": \"0cf2a75e-7d17-46e2-a52b-da83e31890f7\",\n            \"orderMeals\": [\n                {\n                    \"id\": \"ca81d6ee-5cf8-4da3-92b6-6e4f4f965c70\",\n                    \"createdAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"cartMeal\": {\n                        \"id\": \"fd65985a-2f92-4abd-b5ff-413a9ba72e16\",\n                        \"createdAt\": \"2024-05-08T22:30:06.934Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-08T23:30:06.882Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 5,\n                        \"meal\": {\n                            \"id\": \"7b2a2cf5-42a4-4d32-aff6-49089c4bf7c3\",\n                            \"createdAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:53.533Z\",\n                            \"name\": \"Margherita Pizza\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Pizza Dough\",\n                                    \"Tomato Sauce\",\n                                    \"Mozzarella Cheese\",\n                                    \"Fresh Basil\"\n                                ],\n                                \"additives\": [\n                                    \"Fresh Basil\",\n                                    \"Garlic Butter Crust\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.8,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                },\n                {\n                    \"id\": \"17028007-5f87-4a0e-855b-9cc303a91e3b\",\n                    \"createdAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"updatedAt\": \"2024-05-08T23:39:29.947Z\",\n                    \"cartMeal\": {\n                        \"id\": \"550b5b16-6c71-41b0-942e-884e804d6249\",\n                        \"createdAt\": \"2024-05-08T23:09:50.631Z\",\n                        \"updatedAt\": \"2024-05-08T23:39:29.872Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-09T00:09:50.578Z\",\n                        \"orderId\": \"f1965a66-0f14-4a18-aeeb-ab3360252553\",\n                        \"quantity\": 1,\n                        \"meal\": {\n                            \"id\": \"39be5b3a-13d6-4523-ac5a-cf0d839c0403\",\n                            \"createdAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"name\": \"Ham and Cheese Crepe\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Crepe\",\n                                    \"Ham\",\n                                    \"Swiss Cheese\"\n                                ],\n                                \"additives\": [\n                                    \"Mushrooms\",\n                                    \"Spinach\",\n                                    \"Bechamel Sauce\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.1,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"id\": \"1a66117a-5c19-41d8-b710-4ac58e72ce87\",\n            \"createdAt\": \"2024-05-08T23:42:14.784Z\",\n            \"updatedAt\": \"2024-05-08T23:42:14.784Z\",\n            \"vendorId\": \"0cf2a75e-7d17-46e2-a52b-da83e31890f7\",\n            \"orderMeals\": [\n                {\n                    \"id\": \"62ab08b1-5933-4495-8479-7a8cfc673a47\",\n                    \"createdAt\": \"2024-05-08T23:42:14.789Z\",\n                    \"updatedAt\": \"2024-05-08T23:42:14.789Z\",\n                    \"cartMeal\": {\n                        \"id\": \"48e2f68a-db6e-4e24-8efe-ca0cb8410250\",\n                        \"createdAt\": \"2024-05-08T23:41:46.164Z\",\n                        \"updatedAt\": \"2024-05-08T23:42:14.782Z\",\n                        \"cartId\": null,\n                        \"deliveryDate\": \"2024-05-09T00:41:46.096Z\",\n                        \"orderId\": \"7f4df58c-9671-4bca-bceb-b7719e5ce8fc\",\n                        \"quantity\": 1,\n                        \"meal\": {\n                            \"id\": \"39be5b3a-13d6-4523-ac5a-cf0d839c0403\",\n                            \"createdAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"updatedAt\": \"2024-05-08T21:53:55.337Z\",\n                            \"name\": \"Ham and Cheese Crepe\",\n                            \"daysAvailable\": {\n                                \"sun\": true,\n                                \"mon\": true,\n                                \"tue\": true,\n                                \"thu\": true,\n                                \"fri\": true,\n                                \"sat\": true\n                            },\n                            \"attributes\": {\n                                \"ingredients\": [\n                                    \"Crepe\",\n                                    \"Ham\",\n                                    \"Swiss Cheese\"\n                                ],\n                                \"additives\": [\n                                    \"Mushrooms\",\n                                    \"Spinach\",\n                                    \"Bechamel Sauce\"\n                                ],\n                                \"spiceLevel\": {\n                                    \"default\": 1,\n                                    \"available\": [\n                                        1,\n                                        2\n                                    ]\n                                }\n                            },\n                            \"rating\": 4.1,\n                            \"images\": [\n                                \"https://eatcheffie-dev-assets.s3.eu-north-1.amazonaws.com/meals/meal_1.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAU6GDYZFWENBMPS7N%2F20240513%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20240513T110234Z&X-Amz-Expires=3600&X-Amz-Signature=e4102d8f04e01e10dd893c95c6de9c68b6a90840ac24c5f36f0e77c18b242575&X-Amz-SignedHeaders=host&x-id=GetObject\"\n                            ]\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 3,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						}
					],
					"id": "20322ec0-a1dc-47d6-b717-fcf264299b45"
				},
				{
					"name": "Update Order",
					"item": [
						{
							"name": "Update Order",
							"id": "dd287979-1b0e-484f-ac5d-b1b4cac265e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"processing\",\n    \"cancelReason\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/vendor/orders/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vendor",
										"orders",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "The vendor order ID being updated"
										}
									]
								}
							},
							"response": [
								{
									"id": "05d17cb6-6b13-4341-992d-d7b030128718",
									"name": "enum",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"ded\",\n    \"cancelReason\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/vendor/orders/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"vendor",
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "50"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "157"
										},
										{
											"key": "ETag",
											"value": "W/\"9d-G1YsnsnIgDeqVapj5MV7jrmxWbQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 13 May 2024 11:37:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Validation Error.\",\n    \"data\": {\n        \"status\": \"status must be one of the following values: pending, processing, enroute, delivered, completed, cancelled\"\n    }\n}"
								}
							]
						}
					],
					"id": "5ac75f24-d4fb-4d5a-ac46-6f918f4c0b66"
				}
			],
			"id": "e4456701-42d8-49b2-b4b3-230bac513b66"
		},
		{
			"name": "Stats",
			"item": [
				{
					"name": "Get Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfd225f4-0c2f-478b-9311-9b4ab772f181",
								"exec": [
									"try {",
									"    const { data, status } = pm.response.json()",
									"",
									"    pm.test(\"Verify that audit data is not empty\", () => {",
									"        pm.expect(data).to.not.be.empty",
									"    })",
									"",
									"    pm.test(\"Status is 'success'\", function () {",
									"        pm.expect(status).to.eql('success');",
									"    });",
									"",
									"        pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"",
									"    console.log(data)",
									"} catch (error) {",
									"",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "dd6f32bd-4eff-434a-8693-789480f6c20d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendorAccessToken}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"url": "{{base_url}}/vendor/stats"
					},
					"response": [
						{
							"id": "79c370ea-4537-4c2d-8424-f780fa3df3e5",
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"url": "{{base_url}}/vendor/stats"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "601"
								},
								{
									"key": "ETag",
									"value": "W/\"259-VLJI/CKIg/t6GGXhtiLhuHlFvH0\""
								},
								{
									"key": "Date",
									"value": "Mon, 20 May 2024 01:16:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched dashboard stats successfully\",\n    \"data\": {\n        \"all\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_7_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_30_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_60_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_90_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_6_months\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_1_year\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Stats - No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfd225f4-0c2f-478b-9311-9b4ab772f181",
								"exec": [
									"try {",
									"    const { message } = pm.response.json()",
									"    pm.test(\"Status is 'success'\", function () {",
									"        pm.expect(message).to.eql('Session expired. Please login again.');",
									"    });",
									"        pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"} catch (error) {",
									"    console.error(\"Error form test:\", error)",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bcc4a25f-dec9-45d4-a79f-1d91601604bf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"url": "{{base_url}}/vendor/stats"
					},
					"response": [
						{
							"id": "1f47f677-87f2-4e54-a721-8b442d667300",
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor"
									}
								],
								"url": "{{base_url}}/vendor/stats"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "601"
								},
								{
									"key": "ETag",
									"value": "W/\"259-VLJI/CKIg/t6GGXhtiLhuHlFvH0\""
								},
								{
									"key": "Date",
									"value": "Mon, 20 May 2024 01:16:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched dashboard stats successfully\",\n    \"data\": {\n        \"all\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_7_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_30_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_60_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_90_days\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_6_months\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        },\n        \"last_1_year\": {\n            \"totalOrders\": 0,\n            \"totalTransactions\": 0,\n            \"totalCustomers\": 0\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "2d9802fe-a560-42ce-bc73-021ccbff360b"
		},
		{
			"name": "Audit Trail",
			"item": [
				{
					"name": "Get Audit Trail",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6091b825-4e23-41a0-ac48-7c695e1a0085",
								"exec": [
									"try {",
									"    const { data, status } = pm.response.json()",
									"",
									"    pm.test(\"Verify that audit data is not empty\", () => {",
									"        pm.expect(data).to.not.be.empty",
									"    })",
									"",
									"    pm.test(\"Status is 'success'\", function () {",
									"        pm.expect(status).to.eql('success');",
									"    });",
									"",
									"        pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"",
									"    console.log(data)",
									"} catch (error) {",
									"",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "31e9e39a-2ffe-4e55-88f4-7da082fcd0a1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{vendorAccessToken}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"url": "{{base_url}}/audit-trail"
					},
					"response": []
				},
				{
					"name": "Get Audit Trail - No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6091b825-4e23-41a0-ac48-7c695e1a0085",
								"exec": [
									"try {",
									"    const { message } = pm.response.json()",
									"    pm.test(\"Status is 'success'\", function () {",
									"        pm.expect(message).to.eql('Session expired. Please login again.');",
									"    });",
									"        pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"",
									"} catch (error) {",
									"    console.error(\"Error form test:\", error)",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "de07fe21-1b17-4276-b77a-dc3225f332bf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"url": "{{base_url}}/audit-trail"
					},
					"response": []
				}
			],
			"id": "ea3433f7-bd03-4740-90b6-deef2c8767e8"
		},
		{
			"name": "System Settings",
			"item": [
				{
					"name": "Get Settings",
					"item": [
						{
							"name": "Fetch Settings",
							"id": "12f6c02b-0853-4f11-915b-96fb67773987",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/settings"
							},
							"response": [
								{
									"id": "20c3e901-aa0e-4a92-a50c-88f859ddfdb0",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/settings"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "ETag",
											"value": "W/\"150-CaLZXkL0naA7dMLZtKFlZBzkCgI\""
										},
										{
											"key": "Date",
											"value": "Wed, 05 Jun 2024 11:21:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"id\": \"b8c79fed-f135-4307-9900-6ca73e8c6163\",\n        \"createdAt\": \"2024-06-05T07:39:47.691Z\",\n        \"updatedAt\": \"2024-06-05T07:39:47.691Z\",\n        \"value\": {\n            \"sessionTimeout\": 15,\n            \"invalidPasswordAttempts\": 5,\n            \"sessionInactivity\": 5,\n            \"orderLimit\": 20,\n            \"openTime\": 900,\n            \"closeTime\": 2200\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Settings - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf8120a3-041a-44c2-aff6-61965001d791",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"// Delete later cause of pipleine run",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ba043bce-8c81-4801-b14e-9356bcf85a77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/settings"
							},
							"response": [
								{
									"id": "d698824c-a672-43e4-b789-90b0c471a6c4",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"url": "{{base_url}}/settings"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "ETag",
											"value": "W/\"150-CaLZXkL0naA7dMLZtKFlZBzkCgI\""
										},
										{
											"key": "Date",
											"value": "Wed, 05 Jun 2024 11:21:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"id\": \"b8c79fed-f135-4307-9900-6ca73e8c6163\",\n        \"createdAt\": \"2024-06-05T07:39:47.691Z\",\n        \"updatedAt\": \"2024-06-05T07:39:47.691Z\",\n        \"value\": {\n            \"sessionTimeout\": 15,\n            \"invalidPasswordAttempts\": 5,\n            \"sessionInactivity\": 5,\n            \"orderLimit\": 20,\n            \"openTime\": 900,\n            \"closeTime\": 2200\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "19ff3b90-89d4-42f4-8d81-a10a2d289955"
				},
				{
					"name": "Update Settings",
					"item": [
						{
							"name": "Update Settings",
							"id": "41f4fe00-e81b-4bac-ac27-8ffa39b93405",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sessionTimeout\": 10,\n    \"invalidPasswordAttempts\": 5,\n    \"sessionInactivity\": 5,\n    \"orderLimit\": 20,\n    \"openTime\": \"2024-05-27T07:00:00\",\n    \"closeTime\": \"2024-05-27T19:00:00\",\n    \"fees\": [\n        {\n            \"areaId\": \"63216e5f-abed-4690-a0e6-4732bc3dd275\",\n            \"rate\": 30\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/settings"
							},
							"response": [
								{
									"id": "a5b2b351-fb29-4391-b7fe-193125cbee77",
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sessionTimeout\": 10,\n    \"invalidPasswordAttempts\": 5,\n    \"sessionInactivity\": 5,\n    \"orderLimit\": 20,\n    \"systemCancelOrderTime\": 20, // In hours\n    \"platformCommission\": 20 // percentage\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "55"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "ETag",
											"value": "W/\"150-zz2858pOEP5wy0ZzhHTPahXeAe8\""
										},
										{
											"key": "Date",
											"value": "Wed, 05 Jun 2024 11:34:56 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"id\": \"b8c79fed-f135-4307-9900-6ca73e8c6163\",\n        \"createdAt\": \"2024-06-05T07:39:47.691Z\",\n        \"updatedAt\": \"2024-06-05T10:34:56.908Z\",\n        \"value\": {\n            \"sessionTimeout\": 10,\n            \"invalidPasswordAttempts\": 5,\n            \"sessionInactivity\": 5,\n            \"orderLimit\": 20,\n            \"openTime\": 900,\n            \"closeTime\": 2200\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update Settings - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2fe73dd3-6340-4ab7-884e-0020774f9855",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"// Delete later cause of pipleine run",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1bb2ef49-16ef-4aa9-9502-d46df0edfa68",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sessionTimeout\": 10,\n    \"invalidPasswordAttempts\": 5,\n    \"sessionInactivity\": 5,\n    \"orderLimit\": 20,\n    \"openTime\": \"2024-05-27T07:00:00\",\n    \"closeTime\": \"2024-05-27T19:00:00\",\n    \"fees\": [\n        {\n            \"areaId\": \"63216e5f-abed-4690-a0e6-4732bc3dd275\",\n            \"rate\": 30\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/settings"
							},
							"response": [
								{
									"id": "9884b436-8c43-44b9-b47a-648ee079c74a",
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "x-request-source",
												"value": "ec"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sessionTimeout\": 10,\n    \"invalidPasswordAttempts\": 5,\n    \"sessionInactivity\": 5,\n    \"orderLimit\": 20,\n    \"systemCancelOrderTime\": 20, // In hours\n    \"platformCommission\": 20 // percentage\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "55"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "ETag",
											"value": "W/\"150-zz2858pOEP5wy0ZzhHTPahXeAe8\""
										},
										{
											"key": "Date",
											"value": "Wed, 05 Jun 2024 11:34:56 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"id\": \"b8c79fed-f135-4307-9900-6ca73e8c6163\",\n        \"createdAt\": \"2024-06-05T07:39:47.691Z\",\n        \"updatedAt\": \"2024-06-05T10:34:56.908Z\",\n        \"value\": {\n            \"sessionTimeout\": 10,\n            \"invalidPasswordAttempts\": 5,\n            \"sessionInactivity\": 5,\n            \"orderLimit\": 20,\n            \"openTime\": 900,\n            \"closeTime\": 2200\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "1f7e736f-7be0-41de-ae42-fd1f4b06face"
				},
				{
					"name": "Update Delivery Areas",
					"item": [
						{
							"name": "Fetch Delivery Areas",
							"id": "26b10870-f274-43eb-abb1-c6e293354735",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/delivery/areas"
							},
							"response": [
								{
									"id": "195f3453-f6ed-4d55-9a3b-c425e1d62906",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor"
											}
										],
										"url": "{{base_url}}/delivery/areas"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "25625"
										},
										{
											"key": "ETag",
											"value": "W/\"6419-2FZx6Q5Y9/3A2dETZl3ehKkFFLo\""
										},
										{
											"key": "Date",
											"value": "Wed, 05 Jun 2024 11:55:10 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched delivery areas\",\n    \"data\": [\n        {\n            \"id\": \"63216e5f-abed-4690-a0e6-4732bc3dd275\",\n            \"createdAt\": \"2024-05-27T07:58:47.283Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.283Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"AB\",\n            \"area\": \"Aberdeen\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"2ca7b4f8-8816-4267-a184-8333420981e7\",\n            \"createdAt\": \"2024-05-27T07:58:47.287Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.287Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"AL\",\n            \"area\": \"St. Albans\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"51fe23c1-7a3a-473e-aff8-2c5594eb565c\",\n            \"createdAt\": \"2024-05-27T07:58:47.290Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.290Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"B\",\n            \"area\": \"Birmingham\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"048b438a-a844-49e8-a319-47d7fdd443de\",\n            \"createdAt\": \"2024-05-27T07:58:47.293Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.293Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BA\",\n            \"area\": \"Bath\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"5183b73b-611a-49e9-b8a2-44e2c8b7bcd8\",\n            \"createdAt\": \"2024-05-27T07:58:47.296Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.296Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BB\",\n            \"area\": \"Blackburn\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"d67e17fa-e88a-4715-b41d-080ce491db98\",\n            \"createdAt\": \"2024-05-27T07:58:47.299Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.299Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BD\",\n            \"area\": \"Bradford\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"35936969-82d1-4696-a329-91534e2bdcd7\",\n            \"createdAt\": \"2024-05-27T07:58:47.302Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.302Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BH\",\n            \"area\": \"Bournemouth\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"ace5c346-e692-400b-b071-d2e55eb58e96\",\n            \"createdAt\": \"2024-05-27T07:58:47.306Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.306Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BL\",\n            \"area\": \"Bolton\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"27fa5c08-684c-4070-99c6-46b67f4cf03c\",\n            \"createdAt\": \"2024-05-27T07:58:47.311Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.311Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BN\",\n            \"area\": \"Brighton\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"5e01d5b4-d3d9-4501-a2ab-a733d2425805\",\n            \"createdAt\": \"2024-05-27T07:58:47.315Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.315Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BR\",\n            \"area\": \"Bromley\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"a56c32fb-5222-46c8-90eb-1341aa2a1227\",\n            \"createdAt\": \"2024-05-27T07:58:47.318Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.318Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BS\",\n            \"area\": \"Bristol\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"19438e11-2643-4656-92ba-42340d01becf\",\n            \"createdAt\": \"2024-05-27T07:58:47.322Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.322Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"BT\",\n            \"area\": \"Belfast\",\n            \"region\": \"Northern Ireland\"\n        },\n        {\n            \"id\": \"fd85682f-4b66-44f9-a83b-2809a849377d\",\n            \"createdAt\": \"2024-05-27T07:58:47.327Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.327Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CA\",\n            \"area\": \"Carlisle\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"d3295bd9-5558-46b8-ad27-25fbc0e98092\",\n            \"createdAt\": \"2024-05-27T07:58:47.331Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.331Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CB\",\n            \"area\": \"Cambridge\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"04e51c28-3dc9-4023-9bcc-b42012b09f91\",\n            \"createdAt\": \"2024-05-27T07:58:47.336Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.336Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CF\",\n            \"area\": \"Cardiff\",\n            \"region\": \"Wales\"\n        },\n        {\n            \"id\": \"8b02c2f6-8033-4724-aa0c-827d9865cd3b\",\n            \"createdAt\": \"2024-05-27T07:58:47.339Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.339Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CH\",\n            \"area\": \"Chester\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"325c3955-04fd-4ff2-a0dc-2670a6c99292\",\n            \"createdAt\": \"2024-05-27T07:58:47.343Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.343Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CM\",\n            \"area\": \"Chelmsford\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"0c2c9743-21b1-4f45-84b3-412e9ca85342\",\n            \"createdAt\": \"2024-05-27T07:58:47.346Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.346Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CO\",\n            \"area\": \"Colchester\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"653c7e56-53bf-45be-9613-07f846fc9c64\",\n            \"createdAt\": \"2024-05-27T07:58:47.350Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.350Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CR\",\n            \"area\": \"Croydon\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"39134117-bc51-4927-a6bd-dc15cd4e0be8\",\n            \"createdAt\": \"2024-05-27T07:58:47.354Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.354Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CT\",\n            \"area\": \"Canterbury\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"1d7332e6-5bd0-4684-868e-418219bf6bc9\",\n            \"createdAt\": \"2024-05-27T07:58:47.357Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.357Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CV\",\n            \"area\": \"Coventry\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"3d90f599-8389-4509-a31a-a3b1dae7b8f1\",\n            \"createdAt\": \"2024-05-27T07:58:47.362Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.362Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"CW\",\n            \"area\": \"Crewe\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"c486c16c-0acf-4ebb-8fb8-d030d856f569\",\n            \"createdAt\": \"2024-05-27T07:58:47.400Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.400Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DA\",\n            \"area\": \"Dartford\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"932942d8-40f4-45c8-89e7-862fd0a0914f\",\n            \"createdAt\": \"2024-05-27T07:58:47.404Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.404Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DD\",\n            \"area\": \"Dundee\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"c3563d70-7f0f-4a2e-9a7e-c2a3b190232c\",\n            \"createdAt\": \"2024-05-27T07:58:47.407Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.407Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DE\",\n            \"area\": \"Derby\",\n            \"region\": \"East Midlands\"\n        },\n        {\n            \"id\": \"da2286f7-6172-4b27-a3e4-2c4dba3b22fd\",\n            \"createdAt\": \"2024-05-27T07:58:47.411Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.411Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DG\",\n            \"area\": \"Dumfries\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"25e667de-fd86-4ca7-848f-792bda8d2a0a\",\n            \"createdAt\": \"2024-05-27T07:58:47.415Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.415Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DH\",\n            \"area\": \"Durham\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"bed85d94-0b31-43ab-8598-37753f37bb77\",\n            \"createdAt\": \"2024-05-27T07:58:47.419Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.419Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DL\",\n            \"area\": \"Darlington\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"fe5b564e-8af8-4f78-9be1-4ac51936c005\",\n            \"createdAt\": \"2024-05-27T07:58:47.423Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.423Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DN\",\n            \"area\": \"Doncaster\",\n            \"region\": \"East Midlands\"\n        },\n        {\n            \"id\": \"222b9a67-37c1-4560-9cb2-be1b05a0c949\",\n            \"createdAt\": \"2024-05-27T07:58:47.427Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.427Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DT\",\n            \"area\": \"Dorchester\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"32609467-06c8-4878-a1d6-006649b8b380\",\n            \"createdAt\": \"2024-05-27T07:58:47.431Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.431Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"DY\",\n            \"area\": \"Dudley\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"62fac271-fd32-46cc-a05c-d11eddecba89\",\n            \"createdAt\": \"2024-05-27T07:58:47.435Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.435Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"E\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"e94be88d-a8a2-43de-8ad7-9a2c0bd9c83a\",\n            \"createdAt\": \"2024-05-27T07:58:47.439Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.439Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"EC\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"bb3afa80-8c1c-4e9e-b7f8-a1c1dd524701\",\n            \"createdAt\": \"2024-05-27T07:58:47.443Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.443Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"EH\",\n            \"area\": \"Edinburgh\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"c8697c1e-89ca-4b6a-a856-0d9016fff3a7\",\n            \"createdAt\": \"2024-05-27T07:58:47.447Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.447Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"EN\",\n            \"area\": \"Enfield\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"692cbc33-5162-4fcc-ae17-67c43d47545b\",\n            \"createdAt\": \"2024-05-27T07:58:47.451Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.451Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"EX\",\n            \"area\": \"Exeter\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"cdf804d5-57d2-4f4f-ac79-903055b7e95e\",\n            \"createdAt\": \"2024-05-27T07:58:47.455Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.455Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"FK\",\n            \"area\": \"Falkirk\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"e2ab89a2-3fbe-4c45-9bf9-0d7266b2970a\",\n            \"createdAt\": \"2024-05-27T07:58:47.458Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.458Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"FY\",\n            \"area\": \"Blackpool\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"2731bb99-3d45-448f-bf9d-41fe73c93fbe\",\n            \"createdAt\": \"2024-05-27T07:58:47.462Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.462Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"G\",\n            \"area\": \"Glasgow\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"1a0f7309-7a62-4473-9001-40f456f86d7e\",\n            \"createdAt\": \"2024-05-27T07:58:47.466Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.466Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"GL\",\n            \"area\": \"Gloucester\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"8b36545d-b34a-4cd1-8af8-08c9e7786435\",\n            \"createdAt\": \"2024-05-27T07:58:47.469Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.469Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"GU\",\n            \"area\": \"Guilford\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"5d708bbb-f479-42d7-9109-de2d139920fa\",\n            \"createdAt\": \"2024-05-27T07:58:47.473Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.473Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HA\",\n            \"area\": \"Harrow\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"2bad889e-3a0a-4c6d-89f5-d1c1042f0150\",\n            \"createdAt\": \"2024-05-27T07:58:47.477Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.477Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HD\",\n            \"area\": \"Huddersfield\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"21821f6b-6c84-43de-8588-2a1f6fcb1d56\",\n            \"createdAt\": \"2024-05-27T07:58:47.483Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.483Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HG\",\n            \"area\": \"Harrogate\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"dea44b6a-1984-4024-9a11-ff031d48be3f\",\n            \"createdAt\": \"2024-05-27T07:58:47.487Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.487Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HP\",\n            \"area\": \"Hemel\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"188d062f-51ce-4ea5-8a0e-4c73bce5fc89\",\n            \"createdAt\": \"2024-05-27T07:58:47.490Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.490Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HR\",\n            \"area\": \"Hereford\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"10ab3553-0750-40c4-b5f6-0b413827fa86\",\n            \"createdAt\": \"2024-05-27T07:58:47.494Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.494Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HS\",\n            \"area\": \"Comhairle nan Eilean Siar\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"f65e5eb6-6fa1-4cbd-bcc7-7ec508b4a2bc\",\n            \"createdAt\": \"2024-05-27T07:58:47.498Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.498Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HU\",\n            \"area\": \"Hull\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"5f934f03-fc50-4ee3-b41b-2f7b130bcffb\",\n            \"createdAt\": \"2024-05-27T07:58:47.501Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.501Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"HX\",\n            \"area\": \"Halifax\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"609a2a46-0336-417d-a4ec-f4e6ac07a130\",\n            \"createdAt\": \"2024-05-27T07:58:47.504Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.504Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"IG\",\n            \"area\": \"Ilford\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"fe277e80-16e1-4e1a-84f5-18d4dbe22aec\",\n            \"createdAt\": \"2024-05-27T07:58:47.508Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.508Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"IP\",\n            \"area\": \"Ipswich\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"03c65d58-3466-44c0-beba-63f0e4952425\",\n            \"createdAt\": \"2024-05-27T07:58:47.511Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.511Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"IV\",\n            \"area\": \"Inverness\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"5c8192e1-11a2-4e59-87ce-bb692aba97f2\",\n            \"createdAt\": \"2024-05-27T07:58:47.513Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.513Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"KA\",\n            \"area\": \"Kilmarnock\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"a0eb2387-a895-4368-852d-79be507cc564\",\n            \"createdAt\": \"2024-05-27T07:58:47.516Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.516Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"KT\",\n            \"area\": \"Kingston\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"1f2d7ed4-6fca-460f-9041-3744de45e5ec\",\n            \"createdAt\": \"2024-05-27T07:58:47.518Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.518Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"KW\",\n            \"area\": \"Kirkwall\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"3c359847-3a5c-4f61-83ec-0dff4603d8e6\",\n            \"createdAt\": \"2024-05-27T07:58:47.521Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.521Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"KY\",\n            \"area\": \"Kirkaldy\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"47a8302e-2584-495f-ad6b-21bc2805c7f7\",\n            \"createdAt\": \"2024-05-27T07:58:47.526Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.526Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"L\",\n            \"area\": \"Liverpool\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"d8bf3a89-1ce6-45b4-bfc0-3cd2f099113b\",\n            \"createdAt\": \"2024-05-27T07:58:47.531Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.531Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"LA\",\n            \"area\": \"Lancaster\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"c1df26ec-cc51-43b0-aa1c-0c22a3716502\",\n            \"createdAt\": \"2024-05-27T07:58:47.537Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.537Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"LD\",\n            \"area\": \"Llandrindod\",\n            \"region\": \"Wales\"\n        },\n        {\n            \"id\": \"30c850d5-c4a2-4702-b30f-7d621fc8dc79\",\n            \"createdAt\": \"2024-05-27T07:58:47.541Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.541Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"LE\",\n            \"area\": \"Leicester\",\n            \"region\": \"East Midlands\"\n        },\n        {\n            \"id\": \"b3400e6b-f64d-4c70-b9b5-85e60d222703\",\n            \"createdAt\": \"2024-05-27T07:58:47.544Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.544Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"LL\",\n            \"area\": \"Llandudno\",\n            \"region\": \"Wales\"\n        },\n        {\n            \"id\": \"1838b706-8a9b-4e82-acd7-55237a2161db\",\n            \"createdAt\": \"2024-05-27T07:58:47.547Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.547Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"LN\",\n            \"area\": \"Lincoln\",\n            \"region\": \"East Midlands\"\n        },\n        {\n            \"id\": \"034940eb-5d7a-483b-9820-d4e2e8321948\",\n            \"createdAt\": \"2024-05-27T07:58:47.549Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.549Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"LS\",\n            \"area\": \"Leeds\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"cbbcb116-c7b6-4794-9d31-85c873d7fb10\",\n            \"createdAt\": \"2024-05-27T07:58:47.552Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.552Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"LU\",\n            \"area\": \"Luton\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"7a3eab0e-d947-42bb-9c79-ed004b729ebe\",\n            \"createdAt\": \"2024-05-27T07:58:47.555Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.555Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"M\",\n            \"area\": \"Manchester\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"de7fc922-97fe-4645-a04a-e3f086075971\",\n            \"createdAt\": \"2024-05-27T07:58:47.557Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.557Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"ME\",\n            \"area\": \"Medway\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"721e01a2-d5e0-4ab5-810e-5be988901872\",\n            \"createdAt\": \"2024-05-27T07:58:47.560Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.560Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"MK\",\n            \"area\": \"Milton Keynes\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"afa9e53c-c917-4b27-b859-3cbb083f8d95\",\n            \"createdAt\": \"2024-05-27T07:58:47.562Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.562Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"ML\",\n            \"area\": \"Motherwell\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"0689b6e6-dee2-4063-9d5f-05cfa7e44a34\",\n            \"createdAt\": \"2024-05-27T07:58:47.564Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.564Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"N\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"7bf975ee-fe13-4fc1-bb90-59e392cca572\",\n            \"createdAt\": \"2024-05-27T07:58:47.567Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.567Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"NE\",\n            \"area\": \"Newcastle\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"70cc2f53-4589-46b2-a5eb-59767e58360a\",\n            \"createdAt\": \"2024-05-27T07:58:47.569Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.569Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"NG\",\n            \"area\": \"Nottingham\",\n            \"region\": \"East Midlands\"\n        },\n        {\n            \"id\": \"56627870-50a4-42b5-b52a-0583b898fac6\",\n            \"createdAt\": \"2024-05-27T07:58:47.572Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.572Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"NN\",\n            \"area\": \"Northampton\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"49d9d6cb-b9cf-43e3-b683-568a436d1da7\",\n            \"createdAt\": \"2024-05-27T07:58:47.577Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.577Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"NP\",\n            \"area\": \"Newport\",\n            \"region\": \"Wales\"\n        },\n        {\n            \"id\": \"6a10b3b4-7ce1-4b65-8980-d012e2284297\",\n            \"createdAt\": \"2024-05-27T07:58:47.581Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.581Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"NR\",\n            \"area\": \"Norwich\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"6e056e7c-c39a-410d-a386-e5d6aa15754c\",\n            \"createdAt\": \"2024-05-27T07:58:47.585Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.585Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"NW\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"c47420fc-92eb-425b-8717-673badda24c0\",\n            \"createdAt\": \"2024-05-27T07:58:47.588Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.588Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"OL\",\n            \"area\": \"Oldham\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"1a3284e9-86c6-46fc-afe7-5541b938a84c\",\n            \"createdAt\": \"2024-05-27T07:58:47.591Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.591Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"OX\",\n            \"area\": \"Oxford\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"3e3ce265-1c38-40c8-b96d-1cfe14124a92\",\n            \"createdAt\": \"2024-05-27T07:58:47.593Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.593Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"PA\",\n            \"area\": \"Paisley\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"65b95c11-2558-4214-abf6-9d1234912368\",\n            \"createdAt\": \"2024-05-27T07:58:47.596Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.596Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"PE\",\n            \"area\": \"Peterborough\",\n            \"region\": \"East England\"\n        },\n        {\n            \"id\": \"ea5907bd-fec6-4737-92a3-ec870b05f64d\",\n            \"createdAt\": \"2024-05-27T07:58:47.598Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.598Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"PH\",\n            \"area\": \"Perth\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"88f1c9f8-50bd-4c9a-baba-ee6820cf39b3\",\n            \"createdAt\": \"2024-05-27T07:58:47.600Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.600Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"PL\",\n            \"area\": \"Plymouth\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"1bf63c9b-818a-498f-9aad-d42676226999\",\n            \"createdAt\": \"2024-05-27T07:58:47.603Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.603Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"PO\",\n            \"area\": \"Portsmouth\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"e86d9066-bf8a-40c8-9942-2921422daa64\",\n            \"createdAt\": \"2024-05-27T07:58:47.605Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.605Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"PR\",\n            \"area\": \"Preston\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"6d8da526-a220-451e-aac0-303cfb1c454d\",\n            \"createdAt\": \"2024-05-27T07:58:47.608Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.608Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"RG\",\n            \"area\": \"Reading\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"3fafc144-4ba8-4ea9-9daa-f97cf47b4e43\",\n            \"createdAt\": \"2024-05-27T07:58:47.610Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.610Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"RH\",\n            \"area\": \"Redhill\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"6bc93b7f-a7b3-493b-afe4-d82ff306826b\",\n            \"createdAt\": \"2024-05-27T07:58:47.613Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.613Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"RM\",\n            \"area\": \"Romford\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"2faf97fd-dce6-4d66-95cf-09a373af16de\",\n            \"createdAt\": \"2024-05-27T07:58:47.615Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.615Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"S\",\n            \"area\": \"Sheffield\",\n            \"region\": \"East Midlands\"\n        },\n        {\n            \"id\": \"fdc6aec0-79f0-48ef-a580-59b5873137dd\",\n            \"createdAt\": \"2024-05-27T07:58:47.617Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.617Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SA\",\n            \"area\": \"Swansea\",\n            \"region\": \"Wales\"\n        },\n        {\n            \"id\": \"9fc2b091-0da0-43de-ad67-b8d0706f1abf\",\n            \"createdAt\": \"2024-05-27T07:58:47.620Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.620Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SE\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"e8578085-59f8-41e6-bf47-b5d10c18d52e\",\n            \"createdAt\": \"2024-05-27T07:58:47.622Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.622Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SG\",\n            \"area\": \"Stevenage\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"97856ac5-177c-4fc7-bef7-cb040156ccc8\",\n            \"createdAt\": \"2024-05-27T07:58:47.626Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.626Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SK\",\n            \"area\": \"Stockport\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"321e0c9f-d689-46f4-bf14-d3a213f36c9a\",\n            \"createdAt\": \"2024-05-27T07:58:47.630Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.630Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SL\",\n            \"area\": \"Slough\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"94629683-c376-450a-be51-ab0f49baf2b6\",\n            \"createdAt\": \"2024-05-27T07:58:47.634Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.634Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SM\",\n            \"area\": \"Sutton\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"a9f52b8c-c7d9-420b-8d3a-526c10073b3b\",\n            \"createdAt\": \"2024-05-27T07:58:47.637Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.637Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SN\",\n            \"area\": \"Swindon\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"23e96019-fabd-4fe7-bde5-3412d9ad0cdc\",\n            \"createdAt\": \"2024-05-27T07:58:47.640Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.640Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SO\",\n            \"area\": \"Southampton\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"f735322e-2194-485d-b741-dac675254507\",\n            \"createdAt\": \"2024-05-27T07:58:47.643Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.643Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SP\",\n            \"area\": \"Salisbury\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"5b960c75-2c34-4fd8-9234-3a722feca736\",\n            \"createdAt\": \"2024-05-27T07:58:47.645Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.645Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SR\",\n            \"area\": \"Sunderland\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"774a44d9-4ed6-4f2d-9ec4-b578861e4b89\",\n            \"createdAt\": \"2024-05-27T07:58:47.648Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.648Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SS\",\n            \"area\": \"Southend\",\n            \"region\": \"East of England\"\n        },\n        {\n            \"id\": \"eb873e3f-16ee-40c4-86a1-6aef7e8c536e\",\n            \"createdAt\": \"2024-05-27T07:58:47.651Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.651Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"ST\",\n            \"area\": \"Stoke on Trent\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"b91b7a07-a2ab-47a6-bcd0-5ccfedae9b15\",\n            \"createdAt\": \"2024-05-27T07:58:47.653Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.653Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SW\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"ae3f937b-8aba-482a-b90c-0b4aab519693\",\n            \"createdAt\": \"2024-05-27T07:58:47.655Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.655Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"SY\",\n            \"area\": \"Shrewsbury\",\n            \"region\": \"Wales\"\n        },\n        {\n            \"id\": \"c7ff496b-a1d4-43b8-bd1d-5daa5ea64996\",\n            \"createdAt\": \"2024-05-27T07:58:47.658Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.658Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TA\",\n            \"area\": \"Taunton\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"c80f0a84-3e7d-4ec1-add4-675b32eff977\",\n            \"createdAt\": \"2024-05-27T07:58:47.660Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.660Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TD\",\n            \"area\": \"Galashiels\",\n            \"region\": \"Scotland\"\n        },\n        {\n            \"id\": \"a59faeb0-cac2-4459-a75d-f049ec379ce6\",\n            \"createdAt\": \"2024-05-27T07:58:47.663Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.663Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TF\",\n            \"area\": \"Telford\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"44c0d980-1f74-4089-889d-17e3fb1fc96a\",\n            \"createdAt\": \"2024-05-27T07:58:47.665Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.665Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TN\",\n            \"area\": \"Tonbridge\",\n            \"region\": \"South East\"\n        },\n        {\n            \"id\": \"d664f9d1-fa03-4680-b7dd-2b9e4d746f48\",\n            \"createdAt\": \"2024-05-27T07:58:47.668Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.668Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TQ\",\n            \"area\": \"Torquay\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"9e5f8e95-8e28-4161-9b73-e3bf44bc2d31\",\n            \"createdAt\": \"2024-05-27T07:58:47.670Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.670Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TR\",\n            \"area\": \"Truro\",\n            \"region\": \"South West\"\n        },\n        {\n            \"id\": \"3ddfb0be-9a3f-4d85-8d18-242772ce7de0\",\n            \"createdAt\": \"2024-05-27T07:58:47.674Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.674Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TS\",\n            \"area\": \"Cleveland\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"266d85fd-966a-4259-b32b-7734d27bd881\",\n            \"createdAt\": \"2024-05-27T07:58:47.678Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.678Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"TW\",\n            \"area\": \"Twickenham\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"66e553da-b78d-46da-92b9-bb6c5c2f0f5f\",\n            \"createdAt\": \"2024-05-27T07:58:47.683Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.683Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"UB\",\n            \"area\": \"Southall\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"1f2f9012-cc8c-43c3-a728-4e5a187c62cf\",\n            \"createdAt\": \"2024-05-27T07:58:47.686Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.686Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"W\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"c02fcf11-9262-4d4b-8f93-1876badb53d3\",\n            \"createdAt\": \"2024-05-27T07:58:47.689Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.689Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WA\",\n            \"area\": \"Warrington\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"536bc7df-dc55-4391-9e0e-3f212bf758bc\",\n            \"createdAt\": \"2024-05-27T07:58:47.691Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.691Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WC\",\n            \"area\": \"London\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"11db8a4d-1cba-4c95-947c-905ecaea6874\",\n            \"createdAt\": \"2024-05-27T07:58:47.694Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.694Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WD\",\n            \"area\": \"Watford\",\n            \"region\": \"Greater London\"\n        },\n        {\n            \"id\": \"22478ad5-9e7a-443e-b695-f2ac2655c783\",\n            \"createdAt\": \"2024-05-27T07:58:47.697Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.697Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WF\",\n            \"area\": \"Wakefield\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"9e469db0-94b9-4eb3-8a67-186d8a1156ed\",\n            \"createdAt\": \"2024-05-27T07:58:47.699Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.699Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WN\",\n            \"area\": \"Wigan\",\n            \"region\": \"North West\"\n        },\n        {\n            \"id\": \"a65315bd-fa6f-45ef-8ccd-91ac35337a2d\",\n            \"createdAt\": \"2024-05-27T07:58:47.701Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.701Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WR\",\n            \"area\": \"Worcester\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"b35649d8-2952-407f-bc98-a88e03d444d3\",\n            \"createdAt\": \"2024-05-27T07:58:47.704Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.704Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WS\",\n            \"area\": \"Walsall\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"558035ab-5b37-47a2-b107-734ccf8778a8\",\n            \"createdAt\": \"2024-05-27T07:58:47.706Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.706Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"WV\",\n            \"area\": \"Wolverhampton\",\n            \"region\": \"West Midlands\"\n        },\n        {\n            \"id\": \"5e5511fb-2cb9-401c-87f0-148d46125514\",\n            \"createdAt\": \"2024-05-27T07:58:47.708Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.708Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"YO\",\n            \"area\": \"York\",\n            \"region\": \"North East\"\n        },\n        {\n            \"id\": \"605a1027-78ae-4c95-9938-8b4e12142e3d\",\n            \"createdAt\": \"2024-05-27T07:58:47.710Z\",\n            \"updatedAt\": \"2024-05-27T07:58:47.710Z\",\n            \"deletedAt\": null,\n            \"deletedBy\": null,\n            \"code\": \"ZE\",\n            \"area\": \"Shetland\",\n            \"region\": \"Scotland\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "7c2f5552-f51b-4a6d-809c-65694288a403"
				}
			],
			"id": "5caebb4f-cbcc-495f-bed3-9a14acdae904"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "94c4b25e-f608-4084-baa2-937b5219abbf",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({",
					"    key: 'x-request-source',",
					"    value: 'vendor'",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e703df34-d6aa-4d27-8cbb-3c968c171659",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}