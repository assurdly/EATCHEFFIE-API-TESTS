{
	"info": {
		"_postman_id": "672c0118-bac7-410e-853c-27ce12d8087a",
		"name": "Vendor - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Onboarding",
					"item": [
						{
							"name": "Signup",
							"item": [
								{
									"name": "Email Address",
									"item": [
										{
											"name": "Signup - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"// Extract OTP and email from response and request data",
															"try {",
															"    const { otp } = pm.response.json().data;",
															"    const { email } = JSON.parse(request.data);",
															"",
															"    // Set extracted data to environment variables",
															"    pm.environment.set(\"vendorOnboardingOtp\", otp);",
															"    pm.environment.set(\"signedUpVendorEmail\", email);",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															"",
															"// Test response data and status",
															"try {",
															"    const { data, message, status } = pm.response.json();",
															"",
															"    // Status code tests",
															"    pm.test(\"Status code is '201'\", function () {",
															"        pm.response.to.have.status(201);",
															"    });",
															"",
															"    pm.test(\"Status code response is 'Created'\", function () {",
															"        pm.response.to.have.status('Created');",
															"    });",
															"",
															"    // Response body tests",
															"    pm.test(\"Response body properties\", () => {",
															"        pm.expect(data).to.be.an('object');",
															"        pm.expect(data.otp).to.be.a('string').and.not.empty;",
															"    });",
															"",
															"    // Status and message tests",
															"    pm.test(\"Status is success\", function () {",
															"        pm.expect(status).to.eql('success');",
															"    });",
															"",
															"    pm.test(\"Message is 'Welcome to EatCheffie. Please proceed to verify your email address.'\", function () {",
															"        pm.expect(message).to.include('Welcome to EatCheffie. Please proceed to verify your email address.');",
															"    });",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "1dae32a7-769a-4d8f-9e77-c3afcf4911ae",
														"exec": [
															"pm.environment.set('base_url', 'https://api.eatcheffie.com/v1')",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "162aca0a-33a9-4731-ab0a-0c5d10f4647e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{$randomFirstName}}@mailinator.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "512f2b25-db0c-483b-af9c-9b792467dc37",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										},
										{
											"name": "Signup - empty fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"var jsonData = pm.response.json();",
															"const onboardingOtp = jsonData.data.otp",
															"const onboardingToken = jsonData.data.onboardingToken",
															"",
															"pm.environment.set(\"onboardingOtp\", onboardingOtp)",
															"pm.environment.set(\"onboardingToken\", onboardingToken)",
															"// pm.environment.set(\"accesstoken\", jsonData.data.accessToken);",
															"",
															"",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Status code response is 'Bad Request'\", function () {",
															"    pm.response.to.have.status('Bad Request');",
															"});",
															"",
															"",
															"pm.test(\"Response body property\", function () {",
															"    pm.expect(jsonData).to.be.an('object');",
															"    pm.expect(jsonData.message).to.be.a('string');",
															"    pm.expect(jsonData.data).to.be.a('object');",
															"});",
															"",
															"",
															"pm.test(\"Message is validation error\", function () {",
															"    pm.expect(jsonData.message).to.include('Validation Error.')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "08410bd6-2672-49c8-9833-933d786a7812",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "80a1c92e-4cd2-47d9-97c4-4a20b7a2e04d",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										}
									],
									"id": "714586fa-ad76-4b63-9f1a-ef20fdd9ad7c"
								},
								{
									"name": "Phone Number",
									"item": [
										{
											"name": "Signup - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"// Extract OTP and email from response and request data",
															"try {",
															"    const { otp } = pm.response.json().data;",
															"    const { phone } = JSON.parse(request.data);",
															"",
															"    // Set extracted data to environment variables",
															"    pm.environment.set(\"vendorOnboardingOtpPhone\", otp);",
															"    pm.environment.set(\"signedUpVendorPhone\", phone);",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															"",
															"// Test response data and status",
															"try {",
															"    const { data, message, status } = pm.response.json();",
															"",
															"    // Status code tests",
															"    pm.test(\"Status code is '201'\", function () {",
															"        pm.response.to.have.status(201);",
															"    });",
															"",
															"    pm.test(\"Status code response is 'Created'\", function () {",
															"        pm.response.to.have.status('Created');",
															"    });",
															"",
															"    // Response body tests",
															"    pm.test(\"Response body properties\", () => {",
															"        pm.expect(data).to.be.an('object');",
															"        pm.expect(data.otp).to.be.a('string').and.not.empty;",
															"    });",
															"",
															"    // Status and message tests",
															"    pm.test(\"Status is success\", function () {",
															"        pm.expect(status).to.eql('success');",
															"    });",
															"",
															"    pm.test(\"Message is 'Welcome to EatCheffie. Please proceed to verify your phone number.'\", function () {",
															"        pm.expect(message).to.include('Welcome to EatCheffie. Please proceed to verify your phone number.');",
															"    });",
															"} catch (error) {",
															"    console.error(\"Error occurred while processing response:\", error);",
															"}",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "bb8199e3-ffa0-498c-9ce7-9ffbff87c69c",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0d69bc53-fc23-48db-817c-aa1ff946826c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"{{generatedPhoneNumber}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "8ce0c8b7-8957-4102-9101-bf9178a142b5",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										},
										{
											"name": "Signup - empty fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91359e1d-a34b-4f5c-9507-a4cb8a7e0fd9",
														"exec": [
															"var jsonData = pm.response.json();",
															"const onboardingOtp = jsonData.data.otp",
															"const onboardingToken = jsonData.data.onboardingToken",
															"",
															"pm.environment.set(\"onboardingOtp\", onboardingOtp)",
															"pm.environment.set(\"onboardingToken\", onboardingToken)",
															"// pm.environment.set(\"accesstoken\", jsonData.data.accessToken);",
															"",
															"",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Status code response is Bad Request\", function () {",
															"    pm.response.to.have.status('Bad Request');",
															"});",
															"",
															"",
															"pm.test(\"Response body property\", function () {",
															"    pm.expect(jsonData).to.be.an('object');",
															"    pm.expect(jsonData.message).to.be.a('string');",
															"    pm.expect(jsonData.data).to.be.a('object');",
															"});",
															"",
															"",
															"pm.test(\"Message is validation error\", function () {",
															"    pm.expect(jsonData.message).to.include('Validation Error.')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"    pm.expect(jsonData.data.email).to.include('email should not be empty')",
															"",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9dbbf5a3-b895-4b1c-8794-47fea5c65e81",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/signup"
											},
											"response": [
												{
													"id": "f1f350fb-2e32-4f2b-bb90-fa88eeea9638",
													"name": "success",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": "{{base_url}}/onboard/signup"
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "X-Powered-By",
															"value": "Express"
														},
														{
															"key": "Access-Control-Allow-Origin",
															"value": "*"
														},
														{
															"key": "X-RateLimit-Limit",
															"value": "100"
														},
														{
															"key": "X-RateLimit-Remaining",
															"value": "99"
														},
														{
															"key": "X-RateLimit-Reset",
															"value": "60"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Content-Length",
															"value": "200"
														},
														{
															"key": "ETag",
															"value": "W/\"c8-tyNgRuT8FTGeGO7+Q3Ko+EuxwKE\""
														},
														{
															"key": "Date",
															"value": "Tue, 12 Mar 2024 12:51:52 GMT"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Keep-Alive",
															"value": "timeout=5"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Welcome to EatCheffie. Please proceed to verify your email address.\",\n    \"data\": {\n        \"otp\": \"623218\",\n        \"onboardingToken\": \"7b6057a0b76e4b94cf645b3c5756c841479dc487\"\n    }\n}"
												}
											]
										}
									],
									"id": "37afab35-1bd2-470b-9c3c-4fd51ae15b77",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "de14f159-4605-4c6a-adfd-6248e204d653",
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e9f8f9b5-6770-4ced-b8f4-96f5e8968e6a",
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"id": "ddd9eeab-1cb3-461e-927f-e99f54128396"
						},
						{
							"name": "Verify OTP",
							"item": [
								{
									"name": "Verify OTP - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4de8cd1f-b206-4f4f-bbf7-2335c7ba7b9b",
												"exec": [
													"// Extract OTP and email from response and request data",
													"try {",
													"    const { onboardingToken } = pm.response.json().data;",
													"",
													"    // Set extracted data to environment variables",
													"    pm.environment.set(\"vendorOnboardingToken\", onboardingToken);",
													"",
													"} catch (error) {",
													"    console.error(\"Error occurred while processing response:\", error);",
													"}",
													"",
													"// Test response data and status",
													"try {",
													"    const { data, message, status } = pm.response.json();",
													"",
													"    // Status code tests",
													"    pm.test(\"Status code is '200'\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code is '200'\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'OK'\", function () {",
													"        pm.response.to.have.status('OK');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(data).to.be.an('object');",
													"        pm.expect(data.onboardingToken).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    // Status and message tests",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"OTP verified successfully.\", function () {",
													"        pm.expect(message).to.include('OTP verified successfully.');",
													"    });",
													"} catch (error) {",
													"    console.error(\"Error occurred while processing response:\", error);",
													"}",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5e636c5e-f45b-4827-8953-96f39d839e7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"{{vendorOnboardingOtp}}\",\n    \"email\": \"{{signedUpVendorEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/otp/verify"
									},
									"response": [
										{
											"id": "15a6659e-d893-4695-b09f-126bb82eab5f",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"843055\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/otp/verify"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "41"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "ETag",
													"value": "W/\"54-1QwaebmJuK4CbZ6XMh3P1gGLFG8\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 13:02:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Email address verified successfully.\"\n}"
										}
									]
								},
								{
									"name": "Verify OTP - Empty Fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4de8cd1f-b206-4f4f-bbf7-2335c7ba7b9b",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is 'Bad Request'\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"    pm.expect(jsonData.data).to.be.a('object');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.data.otp).to.include('otp should not be empty') ;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d1444118-adde-4dd7-bfa5-a5f0ae822020",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{onboardingTokenEmail}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"\",\n    \"email\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/otp/verify"
									},
									"response": [
										{
											"id": "9ca289a7-be3f-43be-ae76-e00d6c498166",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"843055\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/otp/verify"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "41"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "ETag",
													"value": "W/\"54-1QwaebmJuK4CbZ6XMh3P1gGLFG8\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 13:02:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Email address verified successfully.\"\n}"
										}
									]
								},
								{
									"name": "Verify OTP - Invalid OTP",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4de8cd1f-b206-4f4f-bbf7-2335c7ba7b9b",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.message).to.include('Invalid otp') ;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ba41245e-953a-4291-9f14-9d7875e5ad26",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"000000\",\n    \"email\": \"{{signedUpVendorEmail}}\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/otp/verify"
									},
									"response": [
										{
											"id": "1c623b97-2ba4-464f-aec2-a8407f94ac7c",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"otp\": \"843055\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/otp/verify"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "41"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "ETag",
													"value": "W/\"54-1QwaebmJuK4CbZ6XMh3P1gGLFG8\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 13:02:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Email address verified successfully.\"\n}"
										}
									]
								}
							],
							"id": "46d92ccc-1178-4790-8fe9-a09a99b2af3d"
						},
						{
							"name": "Profile",
							"item": [
								{
									"name": "Update Profile - Empty fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aca0a28e-6f5b-4c79-b6dd-9b85017457bf",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"    pm.expect(jsonData.data).to.be.a('object');",
													"});",
													"",
													"",
													"pm.test(\"Message is validation error\", function () {",
													"    pm.expect(jsonData.message).to.include('Validation Error.')",
													"    pm.expect(jsonData.data.firstName).to.include('firstName should not be empty')",
													"    pm.expect(jsonData.data.lastName).to.include('lastName should not be empty')",
													"    pm.expect(jsonData.data.dob).to.include('dob must be a valid ISO 8601 date string')",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "27e40f20-147b-49e4-92b5-944e3b7b2037",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"dob\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/profile"
									},
									"response": [
										{
											"id": "36427436-1078-47bb-b4a9-2d49d5fefe16",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"dob\": \"2024-03-12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:29 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "76"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "ETag",
													"value": "W/\"4c-S1yOi7hqQjo48dfKrPIwo4A7LJc\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Profile updated successfully\"\n}"
										}
									]
								},
								{
									"name": "Update Profile - Invalid DOB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aca0a28e-6f5b-4c79-b6dd-9b85017457bf",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"    pm.expect(jsonData.data).to.be.a('object');",
													"});",
													"",
													"",
													"pm.test(\"Message is validation error\", function () {",
													"    pm.expect(jsonData.message).to.include('Validation Error.')",
													"    pm.expect(jsonData.data.dob).to.include('dob must be a valid ISO 8601 date string')",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "eaf47906-9c9a-4d84-bf7b-04e82d64e6af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Azeez\",\n    \"lastName\": \"Ibrahim\",\n    \"dob\": \"12-03-2024\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/profile"
									},
									"response": [
										{
											"id": "666df5b8-b8e2-4284-b60d-0be0b2ee29a6",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"dob\": \"2024-03-12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:29 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "76"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "ETag",
													"value": "W/\"4c-S1yOi7hqQjo48dfKrPIwo4A7LJc\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Profile updated successfully\"\n}"
										}
									]
								},
								{
									"name": "Update Profile - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aca0a28e-6f5b-4c79-b6dd-9b85017457bf",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('OK');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"});",
													"",
													"",
													"pm.test(\"Message is validation error\", function () {",
													"    pm.expect(jsonData.status).to.include('success')",
													"    pm.expect(jsonData.message).to.include('Profile updated successfully')",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bc2c1080-cb47-46f9-a7a6-c68db55dcfb6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Azeez\",\n    \"lastName\": \"Ibrahim\",\n    \"dob\": \"1990-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/profile"
									},
									"response": [
										{
											"id": "0098113c-a741-46f2-b4e9-93102983b5a2",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"dob\": \"2024-03-12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:29 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "76"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "ETag",
													"value": "W/\"4c-S1yOi7hqQjo48dfKrPIwo4A7LJc\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Profile updated successfully\"\n}"
										}
									]
								}
							],
							"id": "50f45249-0deb-4b28-9523-508e0da24ccc"
						},
						{
							"name": "Password",
							"item": [
								{
									"name": "Create Password - Invalid Complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8fe9993-3117-4992-b1d6-0bc9c535d7bd",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code response is Bad Request\", function () {",
													"    pm.response.to.have.status('Bad Request');",
													"});",
													"",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.data.password).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.message).to.include('Validation Error.') ;",
													"    pm.expect(jsonData.data.password).to.include('Password must be at least 8 characters long and contain one uppercase, lowercase, number and special character.') ;",
													"",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9ae0da86-e653-491d-8510-ef4776d15b4d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"Pass\",\n    \"confirmPassword\": \"Pass\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/password"
									},
									"response": [
										{
											"id": "eef43b41-484d-4eeb-a23e-d32d1f246f51",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"nuMberone1#\",\n    \"confirmPassword\": \"nuMberone1#\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/password"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "78"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"4e-so7lXMj74x6k4iaOScaRYWQAe7E\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Password created successfully.\"\n}"
										}
									]
								},
								{
									"name": "Create Password - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8fe9993-3117-4992-b1d6-0bc9c535d7bd",
												"exec": [
													"const jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Status code response is Unauthorized\", function () {",
													"    pm.response.to.have.status('Unauthorized');",
													"});",
													"",
													"pm.test(\"Response body property\", function () {",
													"    pm.expect(jsonData).to.be.an('object');",
													"    pm.expect(jsonData.message).to.be.a('string');",
													"});",
													"",
													"pm.test(\"Valid validation is returned\", function () {",
													"    pm.expect(jsonData.message).to.include('Invalid onboarding token.') ;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9c88a292-4bd7-43e7-8503-585f02b1f93c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"Pass\",\n    \"confirmPassword\": \"Pass\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/password"
									},
									"response": [
										{
											"id": "364cee4f-af2e-4e80-8702-60879556c69c",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"nuMberone1#\",\n    \"confirmPassword\": \"nuMberone1#\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/password"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "78"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"4e-so7lXMj74x6k4iaOScaRYWQAe7E\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Password created successfully.\"\n}"
										}
									]
								},
								{
									"name": "Create Password - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8fe9993-3117-4992-b1d6-0bc9c535d7bd",
												"exec": [
													"const jsonData = pm.response.json();",
													"try {",
													"",
													"    const {status, success, message, data} = pm.response.json()",
													"",
													"    pm.environment.set(\"vendorAccessToken\", data.accessToken)",
													"",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code response is Ok\", function () {",
													"        pm.response.to.have.status('OK');",
													"    });",
													"",
													"    pm.test(\"Response body property\", function () {",
													"        pm.expect(status).to.be.a(\"string\");",
													"        pm.expect(message).to.be.a('string');",
													"    });",
													"",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Message is Verified Successfully\", function () {",
													"        pm.expect(message).to.include('Password created successfully.');",
													"    });",
													"} catch (error) {",
													"",
													"}",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4f1c5475-7d14-4f24-a755-b53af5b86fb4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorOnboardingToken}}"
											}
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"Password12@@\",\n    \"confirmPassword\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/onboard/password"
									},
									"response": [
										{
											"id": "9f38b805-f09a-40e7-9dba-9e2a93b11d28",
											"name": "success",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"nuMberone1#\",\n    \"confirmPassword\": \"nuMberone1#\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/onboard/password"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Tue, 12 Mar 2024 21:55:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "78"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "50"
												},
												{
													"key": "ETag",
													"value": "W/\"4e-so7lXMj74x6k4iaOScaRYWQAe7E\""
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Password created successfully.\"\n}"
										}
									]
								}
							],
							"id": "aa41a411-a798-406b-b781-5b61d2cb3b64"
						}
					],
					"id": "0c8a706c-c2e0-4a81-b1f1-387a4bfcf31d"
				},
				{
					"name": "Login With Google",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bdfbfa5d-894c-41c6-8198-07e84e694501",
								"exec": [
									"// pm.test(\"Status code is 200\", function () {\r",
									"//     pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Status code response is Ok\", function () {\r",
									"//     pm.response.to.have.status('OK');\r",
									"// });\r",
									"\r",
									"// pm.test(\"Status code is 200\", function () {\r",
									"//     pm.response.to.have.status(200);\r",
									"// });\r",
									"\r",
									"// pm.test(\"Status code response is Ok\", function () {\r",
									"//     pm.response.to.have.status('OK');\r",
									"// });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "57328909-49af-4013-91da-56ffc605920e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/oauth/google"
					},
					"response": [
						{
							"id": "77df680e-0376-497b-9f25-db4e41231ad3",
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/auth/google/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "304"
								},
								{
									"key": "ETag",
									"value": "W/\"130-G33fXfk3UzEfIqbb/XEi1mh+0GQ\""
								},
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 23:48:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"\",\n    \"data\": \"https://accounts.google.com/o/oauth2/auth?redirect_uri=http%3A%2F%2Flocalhost%3A8180%2Fapi%2Fv1%2Fauth%2Fgoogle%2Fredirect&response_type=code&client_id=310296340026-jduc4ni5tig1pag6mkp9clttev9knt4a.apps.googleusercontent.com&scope=email%20profile\"\n}"
						}
					]
				},
				{
					"name": "Login With Apple",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60fe790e-5318-4918-b28b-351f4f7f4547",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code response is Ok\", function () {\r",
									"    pm.response.to.have.status('OK');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "b2aeb7ba-dcdd-4425-aa09-beec902e50a1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/oauth/apple"
					},
					"response": [
						{
							"id": "7458837b-48e9-40f8-bb7f-80cf08293122",
							"name": "success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/auth/google/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "304"
								},
								{
									"key": "ETag",
									"value": "W/\"130-G33fXfk3UzEfIqbb/XEi1mh+0GQ\""
								},
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 23:48:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"\",\n    \"data\": \"https://accounts.google.com/o/oauth2/auth?redirect_uri=http%3A%2F%2Flocalhost%3A8180%2Fapi%2Fv1%2Fauth%2Fgoogle%2Fredirect&response_type=code&client_id=310296340026-jduc4ni5tig1pag6mkp9clttev9knt4a.apps.googleusercontent.com&scope=email%20profile\"\n}"
						}
					]
				},
				{
					"name": "Complete Login With Oauth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db56e863-37a2-4754-bf66-fa3f04a5d492",
								"exec": [
									"/*pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code response is Ok\", function () {\r",
									"    pm.response.to.have.status('OK');\r",
									"});\r",
									"*/"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2e6ed04e-8001-402c-82da-5a965e3bee2b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"4/0AeaYSHDXAmrTGpEaIipxF-YR18sD1WaRb5sg_dfV2xfWFX9wqxT72gcOle357OCMuPjq5Q&scope=email+profile+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&authuser=0&hd=assurdly.com&prompt=consent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/oauth/google/complete"
					},
					"response": [
						{
							"id": "1d18ff9b-50e9-44bf-af2e-8c63965ec1f4",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"4/0AeaYSHA07ycb9wADezdpC_aHQcn94izKsSz9PJayyJzuXWCAGZamcT1BAX4dGp8_r3vZvg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/oauth/google/complete"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "382"
								},
								{
									"key": "ETag",
									"value": "W/\"17e-ksn+LPQ/iHs45LErXbmWwQ9QYpY\""
								},
								{
									"key": "Date",
									"value": "Tue, 19 Mar 2024 23:24:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiaWF0IjoxNzEwODkwNjczLCJleHAiOjE3MTA4OTQyNzN9.5kryJGTx5Gcl0NuIYMzTriwUPfmjM3dOztG_kfyoucg\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiaWF0IjoxNzEwODkwNjczLCJleHAiOjE3MTA4OTQyNzN9._a8uGzihmHxFYlrCNo-sHFBsGKc7mIFbsf8AWFMuZ9I\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login WIth Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3cf2643-000d-4cd7-b7df-8552b8d375f8",
								"exec": [
									"try {",
									"    const jsonData = pm.response.json();",
									"",
									"    const accessToken = jsonData.data.accessToken;",
									"    const refreshToken = jsonData.data.refreshToken;",
									"",
									"    pm.environment.set(\"vendorAccessToken\", accessToken);",
									"    pm.environment.set(\"vendorRefreshToken\", refreshToken);",
									"",
									"    pm.test(\"Status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });",
									"",
									"    pm.test(\"Status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });",
									"",
									"    pm.test(\"Response body properties\", function () {",
									"        pm.expect(jsonData).to.be.an('object');",
									"        pm.expect(jsonData.status).to.be.a('string');",
									"        pm.expect(jsonData.message).to.be.a('string');",
									"        pm.expect(jsonData.data).to.be.an('object');",
									"    });",
									"",
									"    pm.test(\"Status is 'success'\", function () {",
									"        pm.expect(jsonData.status).to.eql('success');",
									"    });",
									"",
									"    pm.test(\"Message is 'Login successful'\", function () {",
									"        pm.expect(jsonData.message).to.include('Login successful');",
									"    });",
									"} catch (error) {",
									"    console.error(\"Error occurred while processing response:\", error);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "26756595-85ac-4796-8665-8d22f668c788",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "vendor",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signedUpVendorEmail}}\",\n    \"password\": \"Password12@@\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/login"
					},
					"response": [
						{
							"id": "0becfa5c-c9b7-47c0-ae93-6d3c8fd856ae",
							"name": "invalid_credentials",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "33"
								},
								{
									"key": "ETag",
									"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
								},
								{
									"key": "Date",
									"value": "Tue, 19 Mar 2024 23:30:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Invalid credentials\"\n}"
						},
						{
							"id": "9e86d444-bb62-4e66-8508-e9d3b8cd1c39",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "382"
								},
								{
									"key": "ETag",
									"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
								},
								{
									"key": "Date",
									"value": "Tue, 19 Mar 2024 23:31:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login WIth Phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3cf2643-000d-4cd7-b7df-8552b8d375f8",
								"exec": [
									"// const jsonData = pm.response.json();",
									"",
									"",
									"// pm.test(\"Status code is 201\", function () {",
									"//     pm.response.to.have.status(201);",
									"// });",
									"",
									"// pm.test(\"Response body property\", function () {",
									"//     pm.expect(jsonData).to.be.an('object');",
									"//     pm.expect(jsonData.status).to.be.a('string');",
									"//     pm.expect(jsonData.message).to.be.a('string');",
									"//     pm.expect(jsonData.data).to.be.an('object');",
									"// });",
									"",
									"// pm.test(\"Status is success\", function () {",
									"//     pm.expect(jsonData.status).to.eql('success');",
									"// });",
									"",
									"// pm.test(\"Status is success\", function () {",
									"//     pm.expect(jsonData.status).to.eql('success');",
									"// });",
									"",
									"// // pm.test(\"Message is Successfully logged in\", function () {",
									"// //     pm.expect(jsonData.message).to.include('Login successful');",
									"// // });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e3b60b03-163a-4349-bd0b-2e43512a55a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-request-source",
								"value": "customer",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"{{signedUpVendorPhone}}\",\n    \"password\": \"Password12@@\"\n}\n\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/login"
					},
					"response": [
						{
							"id": "638f3546-d6ba-413f-b353-d73b287c27b2",
							"name": "invalid_credentials",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"osunkiyesitayo@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "33"
								},
								{
									"key": "ETag",
									"value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
								},
								{
									"key": "Date",
									"value": "Tue, 19 Mar 2024 23:30:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"message\": \"Invalid credentials\"\n}"
						},
						{
							"id": "d55167b9-da98-4305-b825-e42cf38bccd0",
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"tayoosunkiyesi@gmail.com\",\n    // \"phone\": \"2348134532012\" //Can be used in place of email \n    \"password\": \"Password1@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "100"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "99"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "60"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "382"
								},
								{
									"key": "ETag",
									"value": "W/\"17e-xgGjo8h3mS1eGk+eoWkAFMETDx0\""
								},
								{
									"key": "Date",
									"value": "Tue, 19 Mar 2024 23:31:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.f2suCR3b-cuc6ObAAV_0NkLHjng8fKuxqCQbxSeEpGY\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwiaWF0IjoxNzEwODkxMDc2LCJleHAiOjE3MTA4OTQ2NzZ9.qKp0zjyO9pFmfsar4hMISzDU8lyhWuqc4peUPOqNgvk\"\n    }\n}"
						}
					]
				}
			],
			"id": "be13af7a-9930-45d9-b648-586e357a8230",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cb88f8b3-3e9a-459e-81f9-1cbbe8b6df0b",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const random = Math.floor(Math.random() * 99999999 + 100000)",
							"const randomPhoneNumber = \"090\"+random",
							"pm.environment.set(\"generatedPhoneNumber\", randomPhoneNumber)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fddab031-6ae2-4109-b962-440c757c5870",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Team",
			"item": [
				{
					"name": "Fetch Permissions",
					"item": [
						{
							"name": "Fetch Permissions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2430d164-9bf5-4a92-bbe7-513c70268451",
										"exec": [
											"try {",
											"",
											"    const { status, success, message, data } = pm.response.json()",
											"",
											"    pm.environment.set(\"fetchedVendorPermissionId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Status code response is Ok\", function () {",
											"        pm.response.to.have.status('OK');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(status).to.be.a(\"string\");",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Status is success\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Permissions fetched successfully');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "94c8b689-ca1a-431e-865b-4123a3629bdd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/roles/permissions"
							},
							"response": [
								{
									"id": "e4fe77de-a20f-4a32-8289-4f5150376729",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1265"
										},
										{
											"key": "ETag",
											"value": "W/\"4f1-mExNKTuOgA1FzDdCFoH2plLDp70\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:11:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Permissions fetched successfully\",\n    \"data\": [\n        {\n            \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n            \"name\": \"Create users\",\n            \"slug\": \"create-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"ae62ebcb-b0a6-427b-81da-e46ee6d0cc3f\",\n            \"name\": \"List users\",\n            \"slug\": \"list-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"6d09a213-ea3d-49ea-a829-d9b47b0394af\",\n            \"name\": \"Update users\",\n            \"slug\": \"update-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"3a7ea57d-5e72-4266-966d-83d06101b24c\",\n            \"name\": \"Delete users\",\n            \"slug\": \"delete-users\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"0006909b-0cea-4d7a-8dc9-b4d434492ab9\",\n            \"name\": \"Create roles\",\n            \"slug\": \"create-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"8dd24a3d-d812-443b-ae1c-04efd2c692f8\",\n            \"name\": \"List roles\",\n            \"slug\": \"list-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"d2ed9b17-9052-420f-9880-de18f8cb7ca4\",\n            \"name\": \"Update roles\",\n            \"slug\": \"update-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        },\n        {\n            \"id\": \"2bef30ce-c521-4c9b-b42c-afbb4b71bd84\",\n            \"name\": \"Delete roles\",\n            \"slug\": \"delete-roles\",\n            \"description\": null,\n            \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "e6006a99-5cbc-4483-b67d-b368fde131e5"
				},
				{
					"name": "Create Role",
					"item": [
						{
							"name": "Create Role - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { success, message, status } = pm.response.json();",
											"    const { name } = JSON.parse(request.data)",
											"    pm.environment.set('createdRoleName', name)",
											"    ",
											"    // Status code tests",
											"    pm.test(\"Status code is '201'\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Created'\", function () {",
											"        pm.response.to.have.status('Created');",
											"    });",
											"",
											"    // Response body tests",
											"    pm.test(\"Response body properties\", () => {",
											"        pm.expect(success).to.be.true;",
											"        pm.expect(message).to.be.a('string').and.not.empty;",
											"    });",
											"",
											"    // Status and message tests",
											"    pm.test(\"Status is success\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Message is 'Role created successfully'\", function () {",
											"        pm.expect(message).to.include('Role created successfully');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "9022e29b-d13c-453f-a11e-fc604b64ecbf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomWord}} Test Role\",\n    \"description\": \"Random Test Role\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"{{fetchedVendorPermissionId}}\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "b5cc70e7-878e-4614-9ed7-a5761a9872be",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "8e808583-1293-4670-ba67-3a40c27f7bc1",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						},
						{
							"name": "Create Role - Already Existing Role Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { message } = pm.response.json();",
											"    const name = pm.environment.get('createdRoleName')",
											"    // Status code tests",
											"    pm.test(\"Status code is '400'\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Bad Request'\", function () {",
											"        pm.response.to.have.status('Bad Request');",
											"    });",
											"",
											"    // Response body tests",
											"    pm.test(\"Response body properties\", () => {",
											"        pm.expect(message).to.be.a('string').and.not.empty;",
											"    });",
											"",
											"    pm.test(\"Message is 'Role created successfully'\", function () {",
											"        pm.expect(message).to.include(`Role with name \"${name}\" already exists`);",
											"        console.log(`Role with name \"${name}\" already exists`)",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "21e4529a-2174-4303-82d5-b8de6886d1af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{createdRoleName}}\",\n    \"description\": \"Random Test Role\",\n    \"status\": \"inactive\", // active or inactive\n    \"permissions\": [\"{{fetchedVendorPermissionId}}\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "e05ea3b9-b964-4987-abb8-e90763d1de14",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "c30061f8-7f90-4d5a-894a-b98371dcd003",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						},
						{
							"name": "Create Role - Empty Fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { data, message } = pm.response.json();",
											"",
											"    // Status code tests",
											"    pm.test(\"Status code is '400'\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Bad Request'\", function () {",
											"        pm.response.to.have.status('Bad Request');",
											"    });",
											"",
											"    // Response body tests",
											"    pm.test(\"Response body properties\", () => {",
											"        pm.expect(message).to.be.a('string').and.not.empty;",
											"        pm.expect(data.name).to.be.a('string').and.not.empty;",
											"        pm.expect(data.description).to.be.a('string').and.not.empty;",
											"        pm.expect(data.status).to.be.a('string').and.not.empty;",
											"        pm.expect(data.permissions).to.be.a('string').and.not.empty;",
											"    });",
											"",
											"    pm.test(\"Message is 'Validation Error.'\", function () {",
											"        pm.expect(message).to.include('Validation Error.');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "fac3e111-fe85-4929-929c-1e2b2a8b40bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"description\": \"\",\n    \"status\": \"\", // active or inactive\n    \"permissions\": [\"\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "65a6614e-e02b-47e0-a359-ec05bbbb524a",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "3b582b53-7caa-4a92-b136-2b1b158fd9d7",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						},
						{
							"name": "Create Role - Status set to Inactive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5d6f227-a57f-45b3-931c-66b0fdd60949",
										"exec": [
											"// Test response data and status",
											"try {",
											"    const { data, message } = pm.response.json();",
											"",
											"    // Status code tests",
											"    pm.test(\"Status code is '400'\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code response is 'Bad Request'\", function () {",
											"        pm.response.to.have.status('Bad Request');",
											"    });",
											"",
											"    // Response body tests",
											"    // pm.test(\"Response body properties\", () => {",
											"    //     pm.expect(message).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.name).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.description).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.status).to.be.a('string').and.not.empty;",
											"    //     pm.expect(data.permissions).to.be.a('string').and.not.empty;",
											"    // });",
											"",
											"    pm.test(\"Message is 'Validation Error.'\", function () {",
											"        pm.expect(message).to.include('Validation Error.');",
											"    });",
											"} catch (error) {",
											"    console.error(\"Error occurred while processing response:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "536337e0-a34b-4456-a469-21865274dc44",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomWord}} Test Role\",\n    \"description\": \"Random Test Role\",\n    \"status\": \"inactive\", // active or inactive\n    \"permissions\": [\"{{fetchedVendorPermissionId}}\"] // array of permission ids from the list permissions endpoint\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "9c76b7a1-3be9-414e-ad0f-db096a91a1c3",
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "38"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "ETag",
											"value": "W/\"49-7v9Cp5hIPdqePyVagwqlAgJLZPA\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:13:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Role created successfully\"\n}"
								},
								{
									"id": "5ca61d37-b854-4dbc-ac2d-eb340a342ea7",
									"name": "conflict",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"HR\",\n    \"description\": \"Role for HR personnel\",\n    \"status\": \"active\", // active or inactive\n    \"permissions\": [\"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\"] // array of permission ids from the list permissions endpoint\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "97"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "14"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "50"
										},
										{
											"key": "ETag",
											"value": "W/\"32-eJ6wCbul7RTZda3Q2z3T9Aj8ZUw\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:33:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"message\": \"Role with name \\\"HR\\\" already exists\"\n}"
								}
							]
						}
					],
					"id": "3442138f-f146-4a57-8eae-086ea6250e20"
				},
				{
					"name": "List Roles",
					"item": [
						{
							"name": "List Roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0a83a41-8d74-4633-8fc1-a30a1f9f04f0",
										"exec": [
											"try {",
											"",
											"    const { status, success, message, data } = pm.response.json()",
											"",
											"    pm.environment.set(\"fetchedVendorRoleId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Status code response is Ok\", function () {",
											"        pm.response.to.have.status('OK');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(status).to.be.a(\"string\");",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Status is success\", function () {",
											"        pm.expect(status).to.eql('success');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Successfully fetched roles');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d3e4c4fa-2d55-407f-8660-9e5c7f3ad638",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "75f00eb6-5e51-4168-9c84-165494757763",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "53"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "321"
										},
										{
											"key": "ETag",
											"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 13:46:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						},
						{
							"name": "List Roles - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0a83a41-8d74-4633-8fc1-a30a1f9f04f0",
										"exec": [
											"try {",
											"",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"    pm.test(\"Status code response is Unauthorized\", function () {",
											"        pm.response.to.have.status('Unauthorized');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Session expired. Please login again.');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "75fe62fb-898f-4d82-ba4b-b41ac4f0ff0e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": "{{base_url}}/roles"
							},
							"response": [
								{
									"id": "0e877c42-ac0d-4e65-bf2c-a9c06a44d4a9",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "53"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "321"
										},
										{
											"key": "ETag",
											"value": "W/\"141-v3Zi24L5gRS6S6L2cVcpZMkocN8\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 13:46:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched roles\",\n    \"data\": [\n        {\n            \"id\": \"a4c3b8c5-8ebb-4580-aaa4-e499a1035084\",\n            \"name\": \"Admin\",\n            \"slug\": \"admin\",\n            \"description\": null,\n            \"status\": \"active\",\n            \"createdAt\": \"2024-05-02T11:58:46.211Z\"\n        }\n    ],\n    \"meta\": {\n        \"totalNumberOfRecords\": 1,\n        \"totalNumberOfPages\": 1,\n        \"pageNumber\": 1,\n        \"pageSize\": 20\n    }\n}"
								}
							]
						}
					],
					"id": "63bc549f-1141-4e8b-a0b2-ba9fbaf21b0c"
				},
				{
					"name": "Get Role by ID",
					"item": [
						{
							"name": "Get Role By ID - Valid",
							"id": "b85ff70e-c960-4a70-8081-ac6c581f7bef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/roles/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{fetchedVendorRoleId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "fc9f61b4-df74-41b9-bea4-2dcea916c84c",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "424"
										},
										{
											"key": "ETag",
											"value": "W/\"1a8-0KBpvOBTdRawDprdOyqloZZzvR0\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:21:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched role\",\n    \"data\": {\n        \"id\": \"d35b72b7-0376-4859-806a-9e9c646dbed1\",\n        \"name\": \"HR\",\n        \"slug\": \"hr\",\n        \"description\": \"Role for HR personnel\",\n        \"status\": \"active\",\n        \"permissions\": [\n            {\n                \"permission\": {\n                    \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n                    \"name\": \"Create users\",\n                    \"slug\": \"create-users\",\n                    \"description\": null,\n                    \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n                }\n            }\n        ],\n        \"createdAt\": \"2024-05-02T13:13:17.652Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Role By ID - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "624a715e-9f57-474b-a0da-4f7e4014bd9a",
										"exec": [
											"try {",
											"",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"    pm.test(\"Status code response is Unauthorized\", function () {",
											"        pm.response.to.have.status('Unauthorized');",
											"    });",
											"",
											"    pm.test(\"Response body property\", function () {",
											"        pm.expect(message).to.be.a('string');",
											"    });",
											"",
											"    pm.test(\"Message is Verified Successfully\", function () {",
											"        pm.expect(message).to.include('Session expired. Please login again.');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error running tests\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f142134a-0df4-49d2-913c-7019220d5d36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "x-request-source",
										"value": "vendor",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/roles/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{fetchedVendorRoleId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "79ffd577-9f89-436b-9754-3df9ab68f091",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/roles/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d35b72b7-0376-4859-806a-9e9c646dbed1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "60"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "424"
										},
										{
											"key": "ETag",
											"value": "W/\"1a8-0KBpvOBTdRawDprdOyqloZZzvR0\""
										},
										{
											"key": "Date",
											"value": "Thu, 02 May 2024 14:21:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully fetched role\",\n    \"data\": {\n        \"id\": \"d35b72b7-0376-4859-806a-9e9c646dbed1\",\n        \"name\": \"HR\",\n        \"slug\": \"hr\",\n        \"description\": \"Role for HR personnel\",\n        \"status\": \"active\",\n        \"permissions\": [\n            {\n                \"permission\": {\n                    \"id\": \"4bc27b4d-6c54-47d6-8f1b-1a21a97c0101\",\n                    \"name\": \"Create users\",\n                    \"slug\": \"create-users\",\n                    \"description\": null,\n                    \"createdAt\": \"2024-05-02T13:00:34.024Z\"\n                }\n            }\n        ],\n        \"createdAt\": \"2024-05-02T13:13:17.652Z\"\n    }\n}"
								}
							]
						}
					],
					"id": "3a1db70e-d1f6-45f3-bd1e-d18ff0a1f9c7"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Invite User",
							"item": [
								{
									"name": "Invite User - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try{",
													"    const {status, success, message, data} = pm.response.json()",
													"    console.log(data)",
													"    pm.environment.set(\"vendorInvitedUserToken\", data.resetPasswordToken)",
													"",
													"    pm.test(\"Status code is '201'\", function () {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Created'\", function () {",
													"        pm.response.to.have.status('Created');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(success).to.be.true;",
													"        pm.expect(status).to.eql(\"success\");",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    // Status and message tests",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Message is 'Role created successfully'\", function () {",
													"        pm.expect(message).to.include('User created succesfully. An email has been sent with instructions on how to setup the account.');",
													"    });",
													"} catch (error) {",
													"",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ee02c388-10b9-4654-abfe-3fb502c0a521",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"{{fetchedVendorRoleId}}\",\n    \"email\": \"{{$randomFirstName}}{{$randomNameSuffix}}@mailinator.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "383e80de-a09b-43a1-a281-250f02256713",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Invite User - Empty fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try {",
													"    const { message, data } = pm.response.json()",
													"    console.log(data)",
													"",
													"    pm.test(\"Status code is '400'\", function () {",
													"        pm.response.to.have.status(400);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Bad Request'\", function () {",
													"        pm.response.to.have.status('Bad Request');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"        pm.expect(data.roleId).to.be.a('string').and.not.empty;",
													"        pm.expect(data.email).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    // Status and message tests",
													"    pm.test(\"Role Id should not be empty\", function () {",
													"        pm.expect(data.roleId).to.eql('roleId should not be empty');",
													"    });",
													"",
													"    pm.test(\"Email should not be empty\", function () {",
													"        pm.expect(data.email).to.eql('email should not be empty');",
													"    });",
													"    pm.test(\"Message is 'Role created successfully'\", function () {",
													"        pm.expect(message).to.eql('Validation Error.');",
													"    });",
													"} catch (error) {",
													"    console.error(\"Error from request is:\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "436b0207-fcbf-4e9f-b7a1-04d0161a2ab3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"\",\n    \"email\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "de4bba29-9056-42b5-b6b2-cf6387f3b027",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Invite User - Invalid Email format",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try {",
													"    const { message, data } = pm.response.json()",
													"    console.log(data)",
													"",
													"    pm.test(\"Status code is '400'\", function () {",
													"        pm.response.to.have.status(400);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Bad Request'\", function () {",
													"        pm.response.to.have.status('Bad Request');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"        pm.expect(data.email).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    pm.test(\"Email  must be an email\", function () {",
													"        pm.expect(data.email).to.eql('email must be an email');",
													"    });",
													"    pm.test(\"Message is 'Role created successfully'\", function () {",
													"        pm.expect(message).to.eql('Validation Error.');",
													"    });",
													"} catch (error) {",
													"    console.error(\"Error from request is:\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ec8e54ef-c7d4-4270-b2fa-4acdcfe44821",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"{{fetchedVendorRoleId}}\",\n    \"email\": \"{{$randomFirstName}}{{$randomNameSuffix}}mailinator\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "4bcadea6-89f2-4a3c-89d1-a0a2d7bf35b5",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								},
								{
									"name": "Invite User - Non-existing Role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83736a75-2e89-4dde-a3a9-c76fa892c2e6",
												"exec": [
													"try {",
													"    const { message, data } = pm.response.json()",
													"    console.log(data)",
													"",
													"    pm.test(\"Status code is '400'\", function () {",
													"        pm.response.to.have.status(400);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Bad Request'\", function () {",
													"        pm.response.to.have.status('Bad Request');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    pm.test(\"Message is invalid role\", function () {",
													"        pm.expect(message).to.eql('Invalid role');",
													"    });",
													"",
													"} catch (error) {",
													"    console.error(\"Error from request is:\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bd76f96a-200e-4390-807c-af6ed758b6be",
												"exec": [
													"// const randomUUID = {{$guid}}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b891d76b-1118-405c-9532-a83cea6666cf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roleId\": \"{{$guid}}\",\n    \"email\": \"{{$randomFirstName}}{{$randomNameSuffix}}@mailinator.com\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/invite"
									},
									"response": [
										{
											"id": "85e66320-1853-42a4-8f6f-194c41a437b4",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"roleId\": \"ad2ba7ff-b15b-4b7d-8221-c6a3a96c8def\",\n    \"email\": \"tayoosunkiyesi@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/invite"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "99"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "60"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "320"
												},
												{
													"key": "ETag",
													"value": "W/\"140-x4rVs45Izs/fn16lDCEM5Q9onVc\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:50:32 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"User created succesfully. An email has been sent with instructions on how to setup the account.\",\n    \"data\": {\n        \"resetPasswordToken\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\", // This will not be returned in prod\n        \"resetUrl\": \"http://localhost:8180/auth/recover-password?token=0e2bf0fa15bc6287ec868ef833be5a8e520d1191\" // This will not be returned in prod\n    }\n}"
										}
									]
								}
							],
							"id": "1e2f9f85-31df-48e8-93ad-0b662e6767c1"
						},
						{
							"name": "Setup User with Emai;",
							"item": [
								{
									"name": "Setup user with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "25f0d8d5-6b0a-40a2-ace4-e29d9fc1f252",
												"exec": [
													"try{",
													"    const {status, success, message, data} = pm.response.json()",
													"",
													"    pm.test(\"Status code is '201'\", function () {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    pm.test(\"Status code response is 'Created'\", function () {",
													"        pm.response.to.have.status('Created');",
													"    });",
													"",
													"    // Response body tests",
													"    pm.test(\"Response body properties\", () => {",
													"        pm.expect(success).to.be.true;",
													"        pm.expect(status).to.eql(\"success\");",
													"        pm.expect(message).to.be.a('string').and.not.empty;",
													"    });",
													"",
													"    pm.test(\"Message is 'Successfully setup account'\", function () {",
													"        pm.expect(message).to.include('Successfully setup account');",
													"    });",
													"} catch (error) {",
													"",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "188e7df0-8f6b-4ab0-a0b2-73b5d1731198",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"password\": \"Password12@@\",\n    \"confirmPassword\": \"Password12@@\",\n    \"token\": \"{{vendorInvitedUserToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/setup"
									},
									"response": [
										{
											"id": "90a24fbb-d242-4495-a501-cc710958f85d",
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "x-request-source",
														"value": "vendor"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Temitayo\",\n    \"lastName\": \"Osunkiyesi\",\n    \"password\": \"Password1@\",\n    \"confirmPassword\": \"Password1@\",\n    \"token\": \"0e2bf0fa15bc6287ec868ef833be5a8e520d1191\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/user/setup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-RateLimit-Limit",
													"value": "100"
												},
												{
													"key": "X-RateLimit-Remaining",
													"value": "98"
												},
												{
													"key": "X-RateLimit-Reset",
													"value": "12"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "118"
												},
												{
													"key": "ETag",
													"value": "W/\"76-BsI8WylV+oGuVd4y6/nv3STv93I\""
												},
												{
													"key": "Date",
													"value": "Sat, 04 May 2024 19:55:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Successfully setup account\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE4NDUyNjU3fQ.RuRzVpX9UHU4SYP0o18lVKWqf6jeCjQU7MpTsn1DXuU\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZDk3YzUzLTY1ZjgtNDAxOS1hODM0LWI1ZmM2MjhjZjk1YiIsImlhdCI6MTcxNDg1MjY1NywiZXhwIjoxNzE0ODU2MjU3fQ.74tjhaMJbSqx3ygNAqg98VsWMeqd6BUK_JeZNNRKevQ\"\n    }\n}"
										}
									]
								}
							],
							"id": "571cc86e-91bf-4db0-8635-454eeaa2275e"
						},
						{
							"name": "Setup User with oauth",
							"item": [
								{
									"name": "Setup user with oauth",
									"id": "c4265a26-6d6e-4604-92bf-89d7cf40d467",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": []
									},
									"response": []
								}
							],
							"id": "d92b8566-ebaf-4f74-b083-d68b2a64a184"
						},
						{
							"name": "List Users",
							"item": [
								{
									"name": "List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba3ab32f-db00-4a38-afab-fcb6d0e7e924",
												"exec": [
													"try {",
													"    const { status, success, message, data } = pm.response.json()",
													"",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    pm.test(\"Status code response is Ok\", function () {",
													"        pm.response.to.have.status('OK');",
													"    });",
													"",
													"    pm.test(\"Response body property\", function () {",
													"        pm.expect(status).to.be.a(\"string\");",
													"        pm.expect(message).to.be.a('string');",
													"        pm.expect(success).to.be.true;",
													"",
													"    });",
													"",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Status is success\", function () {",
													"        pm.expect(status).to.eql('success');",
													"    });",
													"",
													"    pm.test(\"Message is Verified Successfully\", function () {",
													"        pm.expect(message).to.include('Fetched users successfully');",
													"    });",
													"",
													"} catch (error) {",
													"    console.error(\"Error running tests\", error)",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ab8a5be7-5755-4df5-9cb3-e15e81816cbc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{vendorAccessToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "x-request-source",
												"value": "vendor",
												"disabled": true
											}
										],
										"url": "{{base_url}}/users"
									},
									"response": []
								}
							],
							"id": "d63fc95e-2e5a-4673-9227-39c6ccbdf6ae"
						}
					],
					"id": "f3b0288e-ce12-40b8-b058-d430f7b66e64"
				}
			],
			"id": "1aac72ee-7322-4223-bf80-216136f3f60f"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Change Password",
					"item": [
						{
							"name": "Change Password - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d43036b-6c50-442b-bebc-a68566f370ed",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has 'OK'\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Verify that status retunrs 'success'\", function () {\r",
											"    pm.expect(pm.response.json().status).to.include(\"success\");\r",
											"});\r",
											"pm.test(\"Verify that status retunrs 'true'\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true;\r",
											"});\r",
											"pm.test(\"Verify that message retunrs'You password has been changed successfully.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Your password has been changed successfully.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d5e465b7-fc95-4fcc-81f9-6b092314589d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1#\",\n    \"confirmPassword\": \"Password1#\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7159654f-a4c5-4891-b1cd-33b59bdae356",
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code is 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2d523c4e-3307-419a-bfa7-39b9c4ad4e86",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1#\",\n    \"confirmPassword\": \"Password1#\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Mismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "564c3f23-1b83-4be0-871d-14ab760b055a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"BVerify that message returns 'Invalid old password.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Invalid old password.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ee1470f8-e4f6-4198-92b3-7fdb14cb8741",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1#\",\n    \"confirmPassword\": \"Password1@%\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Complexity rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'Password must be at least 8 characters long and contain one uppercase, lowercase, number and special character.'\", function () {\r",
											"    pm.expect(pm.response.json().data.password).to.include(\"Password must be at least 8 characters long and contain one uppercase, lowercase, number and special character.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1a2da90c-88e8-46d3-a76f-ff1aab5da4cd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1\",\n    \"confirmPassword\": \"Password1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No confirmPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'confirmPassword should not be empty'\", function () {\r",
											"    pm.expect(pm.response.json().data.confirmPassword).to.include(\"confirmPassword should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6c21cb27-9f30-4770-80bb-15f14697cba6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password1*\",\n    \"confirmPassword\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'password should not be empty'\", function () {\r",
											"    pm.expect(pm.response.json().data.password).to.include(\"password should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6a8b1ae7-4447-4bc9-ae70-d95bd201f018",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"\",\n    \"confirmPassword\": \"Password1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - No oldPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'oldPassword should not be empty'\", function () {\r",
											"    pm.expect(pm.response.json().data.oldPassword).to.include(\"oldPassword should not be empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "de66c1f2-fbfb-4388-aaec-43e4e2cc1e9c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"\",\n    \"password\": \"Password1*\",\n    \"confirmPassword\": \"Password1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Invalid oldPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Invalid old password.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Invalid old password.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "94329bee-d0bd-4d51-9bfc-f4a6d87ccad2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password10@\",\n    \"password\": \"Password1*\",\n    \"confirmPassword\": \"Password1*\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						},
						{
							"name": "Change Password - Same values Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f489e68c-f16c-48b7-b102-b20feb7c82a1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Invalid old password.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Invalid old password.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "da41bfae-72c2-4739-86b9-9d2f3a215725",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password12@@\",\n    \"password\": \"Password12@@\",\n    \"confirmPassword\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/settings/password"
							},
							"response": []
						}
					],
					"id": "ad9ad050-0a20-4163-81e5-e55dd287596c"
				},
				{
					"name": "Update Profile",
					"item": [
						{
							"name": "Update Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27dad8c0-79d4-4f4a-9543-711580a7a5fe",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success returns true\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true;\r",
											"});\r",
											"pm.test(\"message returns 'Your profile has been updated successfully.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Your profile has been updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0914bd26-3174-478a-b28a-b851f715b09f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "28af6553-ffe3-44ef-bf63-4a3bd4b3d3ae",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						},
						{
							"name": "Update Profile - No Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27dad8c0-79d4-4f4a-9543-711580a7a5fe",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'gender must be one of the following values: male, female, other'\", function () {\r",
											"    pm.expect(pm.response.json().data.gender).to.eql(\"gender must be one of the following values: male, female, other\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "08a06185-3d75-4a4f-a0b0-36776f8740b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"\",\n    \"dob\": \"2024-10-12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "ea89e277-db7a-493d-b633-773d12931771",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						},
						{
							"name": "Update Profile - No DOB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27dad8c0-79d4-4f4a-9543-711580a7a5fe",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has 'Bad request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Validation Error.'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.eql(\"Validation Error.\");\r",
											"});\r",
											"pm.test(\"Verify that data returns 'dob must be a valid ISO 8601 date string'\", function () {\r",
											"    pm.expect(pm.response.json().data.dob).to.eql(\"dob must be a valid ISO 8601 date string\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bc090c81-7606-44da-87eb-953b079e5e88",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/profile"
							},
							"response": [
								{
									"id": "ce545857-a2c5-445b-9523-58af499fce41",
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"gender\": \"male\",\n    \"dob\": \"2024-03-12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/user/profile"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "13"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-Grc6FMlHFL7JTIsAdEPGuSUmlSU\""
										},
										{
											"key": "Date",
											"value": "Tue, 02 Apr 2024 10:29:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Your profile has been updated successfully.\"\n}"
								}
							]
						}
					],
					"id": "68a0ab2c-eeb5-4771-94bb-d0429a1c757e"
				},
				{
					"name": "Get logged in user",
					"item": [
						{
							"name": "Get Logged In User - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "800ac25a-e8c3-45ec-8057-1372a0af0f33",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"pm.test(\"Verify that status returns '\", function () {\r",
											"    pm.expect(pm.response.json().status).to.eql(\"success\");\r",
											"});\r",
											"pm.test(\"Verify that success returns 'true'\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true;\r",
											"});\r",
											"pm.test(\"Verify that message returns 'Fetched logged in user successfully'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.include(\"Fetched logged in user successfully\");\r",
											"});\r",
											"pm.test(\"Verify that data returns user details\", function () {\r",
											"    pm.expect(pm.response.json().data).to.be.an(\"object\").and.not.be.empty;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "750731c7-e013-4723-9703-48693586ebed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{vendorAccessToken}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/user/me"
							},
							"response": [
								{
									"id": "959780ae-7d84-4ee3-93a8-93b98bc8cdd6",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{base_url}}/user/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "46"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "402"
										},
										{
											"key": "ETag",
											"value": "W/\"192-//HmW+wBVSwRqRb6TwTeq0ONGqA\""
										},
										{
											"key": "Date",
											"value": "Tue, 23 Apr 2024 14:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched logged in user successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"createdAt\": \"2024-04-02T11:35:22.545Z\",\n        \"updatedAt\": \"2024-04-02T11:36:11.603Z\",\n        \"deliveryAddresses\": [],\n        \"dob\": \"2024-03-12T00:00:00.000Z\",\n        \"email\": \"tayoosunkiyesi@gmail.com\",\n        \"emailVerified\": true,\n        \"gender\": null,\n        \"firstName\": \"Temitayo\",\n        \"lastName\": \"Osunkiyesi\",\n        \"phone\": null,\n        \"lastLogin\": null,\n        \"phoneVerified\": false\n    }\n}"
								}
							]
						},
						{
							"name": "Get Logged In User - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5c0001d-1bc9-4566-b82f-fb27a9711391",
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f3f63e91-137a-4ab8-8c1b-27ff3d083fce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/user/me"
							},
							"response": [
								{
									"id": "58db504d-1d0d-459b-953d-adc414de26e2",
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{base_url}}/user/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "98"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "46"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "402"
										},
										{
											"key": "ETag",
											"value": "W/\"192-//HmW+wBVSwRqRb6TwTeq0ONGqA\""
										},
										{
											"key": "Date",
											"value": "Tue, 23 Apr 2024 14:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"success\": true,\n    \"message\": \"Fetched logged in user successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"createdAt\": \"2024-04-02T11:35:22.545Z\",\n        \"updatedAt\": \"2024-04-02T11:36:11.603Z\",\n        \"deliveryAddresses\": [],\n        \"dob\": \"2024-03-12T00:00:00.000Z\",\n        \"email\": \"tayoosunkiyesi@gmail.com\",\n        \"emailVerified\": true,\n        \"gender\": null,\n        \"firstName\": \"Temitayo\",\n        \"lastName\": \"Osunkiyesi\",\n        \"phone\": null,\n        \"lastLogin\": null,\n        \"phoneVerified\": false\n    }\n}"
								}
							]
						}
					],
					"id": "9b62568d-dd3f-4e3c-ae0f-663e030f355c"
				}
			],
			"id": "f42f958f-ccd7-4779-bbb0-2a758c42547d"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "94c4b25e-f608-4084-baa2-937b5219abbf",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({",
					"    key: 'x-request-source',",
					"    value: 'vendor'",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e703df34-d6aa-4d27-8cbb-3c968c171659",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}