{"uid":"74fdb0df8dc544f0","name":"Fetch Customer Order By ID - No Id","fullName":"Cart And Orders/Fetch Customer Order By Id#Fetch Customer Order By ID - No Id","historyId":"1c17e64e4bfec80ff08b3122bfdfcd96:73b6ae6bba25d5a5272171db93eeab85","time":{"start":1718615809491,"stop":1718615809673,"duration":182},"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code response is 'Bad Request', Verify that message returns 'Validation Error.', Verify that error returns 'id must be a UUID'","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1718615809670,"stop":1718615809670,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is 'Bad Request'","time":{"start":1718615809670,"stop":1718615809670,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"AssertionError: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n   at Object.eval sandbox-script.js:2:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that message returns 'Validation Error.'","time":{"start":1718615809671,"stop":1718615809671,"duration":0},"status":"failed","statusMessage":"expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'","statusTrace":"AssertionError: expected 'Session expired. Please login again.' to deeply equal 'Validation Error.'\n   at Object.eval sandbox-script.js:3:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that error returns 'id must be a UUID'","time":{"start":1718615809671,"stop":1718615809671,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'id')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:4:99)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"da181ad8e591e2da","name":"PreRequest","source":"da181ad8e591e2da.txt","type":"text/plain","size":80},{"uid":"e61201f72598ad8","name":"Request Headers","source":"e61201f72598ad8.json","type":"application/json","size":358},{"uid":"c2ef52039bf63036","name":"Response Headers","source":"c2ef52039bf63036.json","type":"application/json","size":383},{"uid":"5530a60e9f839550","name":"Response Body","source":"5530a60e9f839550.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"localhost"},{"name":"parentSuite","value":"Cart And Orders"},{"name":"suite","value":"Fetch Customer Order By Id"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://api-test.eatcheffie.com/v1/customer/orders/:id"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"74fdb0df8dc544f0.json","parameterValues":["GET - https://api-test.eatcheffie.com/v1/customer/orders/:id","401"]}