name: Postman Test and Allure Report
on:
  push:
    branches:
      - draft-vendor
  schedule:
    - cron: '0 18 * * 4' # Runs every Wednesday by 4pm
    - cron: '0 18 * * 5' # Runs every Friday by 4pm
    - cron: '0 20 * * 0' # Runs every Sunday by 4pm
jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install newman and newman-reporter-allure
        run: |
          npm install -g newman newman-reporter-allure
          echo "Newman and newman-reporter-allure installed."

      - name: Run Postman tests
        if: always()
        continue-on-error: true
        run: |
           newman run Postman-Collections/Postman-Collections.json --reporters cli,allure
           echo "Postman tests run."

      - name: Configure Git user
        run: |
          git config --global user.email "azeez@assurdly.com"
          git config --global user.name "ibrahimazeez"

      - name: Create gh-pages branch
        run: |
          # Remove all files from the current branch
          git rm -rf * || true
          # Remove all directories from the current branch
          rm -rf * || true
          # Create a new orphan gh-pages branch
          git checkout --orphan gh-pages
          # Create the vendor directory
          mkdir vendor
          # Add the vendor directory to git
          git add vendor
          # Commit the changes
          git commit -m "Create gh-pages branch with vendor folder"

      - name: Allure report action
        id: build
        uses: simple-elf/allure-report-action@master
        if: always()
        continue-on-error: true
        with:
          allure_results: allure-results
          gh_pages: vendor
          allure_report: allure-report

      - name: Deploy report to GitHub Pages
        if: always()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: vendor

      - name: Wait for Allure report to be generated
        if: always()
        continue-on-error: true
        run: sleep 150

      - name: Update Allure Report Widget Title
        continue-on-error: true
        run: |
          summary_path="vendor/widgets/summary.json"
          echo "Summary Path: $summary_path"
          if [[ -e "$summary_path" ]]; then
            cat "$summary_path"  # Print content before
            sudo sed -i 's/Allure Report/Vendor - API Quality Readiness/' "$summary_path"
            cat "$summary_path"  # Print content after
          else
            echo "Error: summary.json not found in the vendor folder."
          fi

      - name: Parse new summary.json
        id: parse_new_json
        run: |
          new_summary_path="vendor/widgets/summary.json"
          echo "New Summary Path: $new_summary_path"
          if [ -f "$new_summary_path" ]; then
            cat "$new_summary_path"
            passed_tests=$(jq -r '.statistic.passed' "$new_summary_path")
            failed_tests=$(jq -r '.statistic.failed' "$new_summary_path")
            total_tests=$((passed_tests + failed_tests))
            if [ "$total_tests" -gt 0 ]; then
              passing_percentage=$(( passed_tests * 100 / total_tests ))
              failing_percentage=$(( failed_tests * 100 / total_tests ))
            else
              passing_percentage=0
              failing_percentage=0
            fi
            echo "Passed Tests: $passed_tests"
            echo "Failed Tests: $failed_tests"
            echo "Passing Percentage: $passing_percentage%"
            echo "Failing Percentage: $failing_percentage%"
            echo "::set-output name=passing_percentage::$passing_percentage"
            echo "::set-output name=failing_percentage::$failing_percentage"
            echo "::set-output name=passed_tests::$passed_tests"
            echo "::set-output name=failed_tests::$failed_tests"
          else
            echo "summary.json not found"
            echo "::set-output name=passing_percentage::0"
            echo "::set-output name=failing_percentage::0"
            echo "::set-output name=passed_tests::0"
            echo "::set-output name=failed_tests::0"
          fi

      # - name: Notify Slack
      #   if: always()
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #     SLACK_CHANNEL: 'C070KUKPDLZ'
      #   with:
      #     text: |
      #       *Eatcheffie Vendor - API Quality Readiness*
      #       *Contributors - Azeez*
      #       Status: ${{ job.status }}
      #       Passing Tests: ${{ steps.parse_new_json.outputs.passing_percentage }}%
      #       Failing Tests: ${{ steps.parse_new_json.outputs.failing_percentage }}%
      #       Total Passed: ${{ steps.parse_new_json.outputs.passed_tests }}
      #       Total Failed: ${{ steps.parse_new_json.outputs.failed_tests }}
      #       GitHub Pages URL: ${{ secrets.PAGES_URL }}/vendor
